{"id":"8287ed41697ccec3bfdeacb71da5575a","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/GalileoJackpot.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n// Import history contract interface\ninterface IGalileoJackpotHistory {\n    function recordWinner(uint256 roundId, address winner, uint256 winningTicketId, uint256 prizeAmount) external;\n}\n\n/**\n * @title GalileoJackpot\n * @dev Lottery system on Galileo testnet\n */\ncontract GalileoJackpot is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    \n    // Round structure\n    struct Round {\n        uint256 id;\n        uint256 startTime;\n        uint256 endTime;\n        uint256 totalPool;\n        address winner;\n        uint256 winningTicketId;\n        bool completed;\n    }\n    \n    // Ticket structure\n    struct Ticket {\n        uint256 id;\n        address owner;\n        uint256 roundId;\n        uint256 timestamp;\n    }\n    \n    // Minimum deposit\n    uint256 public constant MIN_DEPOSIT = 0.01 ether;\n    \n    // Round duration (2 minutes)\n    uint256 public constant ROUND_DURATION = 2 minutes;\n    \n    // Owner fee percentage (5%)\n    uint256 public constant OWNER_FEE_PERCENT = 5;\n    \n    // Current round ID\n    uint256 public currentRoundId = 1;\n    \n    // Ticket counter\n    uint256 public ticketCounter = 0;\n    \n    // Mapping of rounds\n    mapping(uint256 => Round) public rounds;\n    \n    // Mapping of tickets\n    mapping(uint256 => Ticket) public tickets;\n    \n    // Mapping of tickets in a round\n    mapping(uint256 => uint256[]) public roundTickets;\n    \n    // Mapping of user tickets\n    mapping(address => uint256[]) public userTickets;\n    \n    // Treasury address (optional)\n    address public treasury;\n    \n    // History contract address\n    address public historyContract;\n    \n    // Events\n    event TicketPurchased(address indexed buyer, uint256 ticketId, uint256 roundId, uint256 timestamp);\n    event RoundStarted(uint256 indexed roundId, uint256 startTime, uint256 endTime);\n    event RoundCompleted(uint256 indexed roundId, address winner, uint256 winningTicketId, uint256 prize);\n    event OwnerFeeCollected(uint256 indexed roundId, address treasury, uint256 amount);\n    event HistoryContractUpdated(address indexed historyContract);\n    \n    // Custom errors\n    error InsufficientDeposit();\n    error RoundAlreadyCompleted();\n    error RoundNotStarted();\n    error RoundNotFinished();\n    error NotEnoughTickets();\n    error InvalidAddress();\n    error TransferFailed();\n    error ZeroRange();\n    \n    constructor() Ownable(msg.sender) {\n        // Initialize first round\n        rounds[currentRoundId] = Round({\n            id: currentRoundId,\n            startTime: 0,\n            endTime: 0,\n            totalPool: 0,\n            winner: address(0),\n            winningTicketId: 0,\n            completed: false\n        });\n        \n        // Set treasury (can be changed later)\n        treasury = owner();\n    }\n    \n    /**\n     * @dev Set history contract address\n     * @param _historyContract Address of the history contract\n     */\n    function setHistoryContract(address _historyContract) external onlyOwner {\n        if (_historyContract == address(0)) revert InvalidAddress();\n        historyContract = _historyContract;\n        emit HistoryContractUpdated(_historyContract);\n    }\n    \n    /**\n     * @dev Buy tickets with native tokens\n     */\n    function buyTickets() external payable nonReentrant {\n        if (msg.value < MIN_DEPOSIT) revert InsufficientDeposit();\n        if (rounds[currentRoundId].completed) revert RoundAlreadyCompleted();\n        \n        // Calculate number of tickets\n        uint256 numTickets = msg.value / MIN_DEPOSIT;\n        \n        // Buy tickets\n        for (uint256 i = 0; i < numTickets; i++) {\n            // Increment ticket counter\n            ticketCounter++;\n            \n            // Create new ticket\n            tickets[ticketCounter] = Ticket({\n                id: ticketCounter,\n                owner: msg.sender,\n                roundId: currentRoundId,\n                timestamp: block.timestamp\n            });\n            \n            // Add ticket to round\n            roundTickets[currentRoundId].push(ticketCounter);\n            \n            // Add ticket to user\n            userTickets[msg.sender].push(ticketCounter);\n            \n            emit TicketPurchased(msg.sender, ticketCounter, currentRoundId, block.timestamp);\n        }\n        \n        // Update pool\n        rounds[currentRoundId].totalPool += msg.value;\n        \n        // If there are at least two players and round is not started yet\n        if (roundTickets[currentRoundId].length >= 2 && rounds[currentRoundId].startTime == 0) {\n            // Start round\n            rounds[currentRoundId].startTime = block.timestamp;\n            rounds[currentRoundId].endTime = block.timestamp + ROUND_DURATION;\n            \n            emit RoundStarted(currentRoundId, rounds[currentRoundId].startTime, rounds[currentRoundId].endTime);\n        }\n    }\n    \n    /**\n     * @dev Complete round and select winner\n     */\n    function completeRound() external nonReentrant {\n        Round storage round = rounds[currentRoundId];\n        \n        if (round.completed) revert RoundAlreadyCompleted();\n        if (round.startTime == 0) revert RoundNotStarted();\n        if (block.timestamp < round.endTime) revert RoundNotFinished();\n        if (roundTickets[currentRoundId].length < 2) revert NotEnoughTickets();\n        \n        // Mark round as completed\n        round.completed = true;\n        \n        // Select winning ticket\n        uint256 ticketIndex = _pseudoRandomNumber(roundTickets[currentRoundId].length);\n        uint256 winningTicketId = roundTickets[currentRoundId][ticketIndex];\n        address winner = tickets[winningTicketId].owner;\n        \n        // Update round data\n        round.winner = winner;\n        round.winningTicketId = winningTicketId;\n        \n        // Calculate owner fee (5% of the pool)\n        uint256 ownerFee = (round.totalPool * OWNER_FEE_PERCENT) / 100;\n        \n        // Calculate prize amount (95% of the pool)\n        uint256 prizeAmount = round.totalPool - ownerFee;\n        \n        // Record winner in history contract if available\n        if (historyContract != address(0)) {\n            IGalileoJackpotHistory(historyContract).recordWinner(\n                round.id,\n                winner,\n                winningTicketId,\n                prizeAmount\n            );\n        }\n        \n        // Prepare new round\n        currentRoundId++;\n        rounds[currentRoundId] = Round({\n            id: currentRoundId,\n            startTime: 0,\n            endTime: 0,\n            totalPool: 0,\n            winner: address(0),\n            winningTicketId: 0,\n            completed: false\n        });\n        \n        // Send fee to treasury/owner\n        (bool feeSuccess, ) = treasury.call{value: ownerFee}(\"\");\n        if (!feeSuccess) revert TransferFailed();\n        \n        // Send prize to winner\n        (bool success, ) = winner.call{value: prizeAmount}(\"\");\n        if (!success) revert TransferFailed();\n        \n        emit OwnerFeeCollected(round.id, treasury, ownerFee);\n        emit RoundCompleted(round.id, winner, winningTicketId, prizeAmount);\n    }\n    \n    /**\n     * @dev Generate pseudo-random number between 0 and max-1\n     * @param max Upper bound (exclusive)\n     * @return Pseudo-random number\n     */\n    function _pseudoRandomNumber(uint256 max) internal view returns (uint256) {\n        if (max == 0) revert ZeroRange();\n        \n        // In a production environment, Chainlink VRF is recommended\n        // This method is vulnerable to manipulation by miners!\n        uint256 randomNumber = uint256(\n            keccak256(\n                abi.encodePacked(\n                    block.timestamp,\n                    block.prevrandao,\n                    blockhash(block.number - 1),\n                    msg.sender\n                )\n            )\n        );\n        \n        return randomNumber % max;\n    }\n    \n    /**\n     * @dev Get all tickets of a user\n     * @param user User address\n     * @return List of ticket IDs\n     */\n    function getUserTickets(address user) external view returns (uint256[] memory) {\n        return userTickets[user];\n    }\n    \n    /**\n     * @dev Get all tickets in a round\n     * @param roundId Round ID\n     * @return List of ticket IDs\n     */\n    function getRoundTickets(uint256 roundId) external view returns (uint256[] memory) {\n        return roundTickets[roundId];\n    }\n    \n    /**\n     * @dev Get participants and their ticket counts for a specific round\n     * @param roundId Round ID\n     * @return participants Array of participant addresses\n     * @return ticketCounts Array of ticket counts corresponding to participants\n     */\n    function getRoundParticipantsWithCounts(uint256 roundId) external view returns (address[] memory participants, uint256[] memory ticketCounts) {\n        uint256[] memory ticketIds = roundTickets[roundId];\n        \n        if (ticketIds.length == 0) {\n            return (new address[](0), new uint256[](0));\n        }\n        \n        // First pass: count unique addresses\n        uint256 maxUniqueAddresses = ticketIds.length;\n        address[] memory tempAddresses = new address[](maxUniqueAddresses);\n        uint256[] memory tempCounts = new uint256[](maxUniqueAddresses);\n        uint256 uniqueCount = 0;\n        \n        for (uint256 i = 0; i < ticketIds.length; i++) {\n            address owner = tickets[ticketIds[i]].owner;\n            bool found = false;\n            \n            // Check if we've already seen this address\n            for (uint256 j = 0; j < uniqueCount; j++) {\n                if (tempAddresses[j] == owner) {\n                    tempCounts[j]++;\n                    found = true;\n                    break;\n                }\n            }\n            \n            // If not found, add it to our arrays\n            if (!found) {\n                tempAddresses[uniqueCount] = owner;\n                tempCounts[uniqueCount] = 1;\n                uniqueCount++;\n            }\n        }\n        \n        // Create result arrays with exact size\n        participants = new address[](uniqueCount);\n        ticketCounts = new uint256[](uniqueCount);\n        \n        // Copy data to properly sized arrays\n        for (uint256 i = 0; i < uniqueCount; i++) {\n            participants[i] = tempAddresses[i];\n            ticketCounts[i] = tempCounts[i];\n        }\n        \n        return (participants, ticketCounts);\n    }\n    \n    /**\n     * @dev Get current round information\n     * @return id Round ID\n     * @return startTime Start time\n     * @return endTime End time\n     * @return totalPool Total pool\n     * @return numTickets Number of tickets\n     * @return isActive Whether the round is active\n     * @return timeLeft Time left in seconds\n     */\n    function getCurrentRoundInfo() external view returns (\n        uint256 id,\n        uint256 startTime,\n        uint256 endTime,\n        uint256 totalPool,\n        uint256 numTickets,\n        bool isActive,\n        uint256 timeLeft\n    ) {\n        Round storage round = rounds[currentRoundId];\n        \n        bool active = round.startTime > 0 && !round.completed;\n        uint256 remaining = 0;\n        \n        if (active && block.timestamp < round.endTime) {\n            remaining = round.endTime - block.timestamp;\n        }\n        \n        return (\n            round.id,\n            round.startTime,\n            round.endTime,\n            round.totalPool,\n            roundTickets[currentRoundId].length,\n            active,\n            remaining\n        );\n    }\n    \n    /**\n     * @dev Get round history\n     * @param limit Maximum number of rounds to retrieve\n     * @return List of completed rounds\n     */\n    function getRoundHistory(uint256 limit) external view returns (Round[] memory) {\n        // Determine number of completed rounds\n        uint256 completedRounds = 0;\n        for (uint256 i = 1; i < currentRoundId; i++) {\n            if (rounds[i].completed) {\n                completedRounds++;\n            }\n        }\n        \n        // Limit the number of rounds\n        uint256 resultLimit = Math.min(limit, completedRounds);\n        Round[] memory result = new Round[](resultLimit);\n        \n        // Get rounds from newest\n        uint256 resultIndex = 0;\n        for (uint256 i = currentRoundId - 1; i > 0 && resultIndex < resultLimit; i--) {\n            if (rounds[i].completed) {\n                result[resultIndex] = rounds[i];\n                resultIndex++;\n            }\n        }\n        \n        return result;\n    }\n    \n    /**\n     * @dev Set treasury address\n     * @param _treasury New treasury address\n     */\n    function setTreasury(address _treasury) external onlyOwner {\n        if (_treasury == address(0)) revert InvalidAddress();\n        treasury = _treasury;\n    }\n    \n    /**\n     * @dev For testing only - function to manually start round\n     */\n    function startRoundManually() external onlyOwner {\n        if (rounds[currentRoundId].startTime != 0) revert RoundAlreadyCompleted();\n        if (roundTickets[currentRoundId].length < 2) revert NotEnoughTickets();\n        \n        rounds[currentRoundId].startTime = block.timestamp;\n        rounds[currentRoundId].endTime = block.timestamp + ROUND_DURATION;\n        \n        emit RoundStarted(currentRoundId, rounds[currentRoundId].startTime, rounds[currentRoundId].endTime);\n    }\n    \n    /**\n     * @dev Emergency round completion (owner only)\n     */\n    function emergencyCompleteRound() external onlyOwner {\n        Round storage round = rounds[currentRoundId];\n        \n        if (round.completed) revert RoundAlreadyCompleted();\n        if (round.startTime == 0) revert RoundNotStarted();\n        if (roundTickets[currentRoundId].length < 2) revert NotEnoughTickets();\n        \n        // Mark round as completed\n        round.completed = true;\n        \n        // Select winning ticket\n        uint256 ticketIndex = _pseudoRandomNumber(roundTickets[currentRoundId].length);\n        uint256 winningTicketId = roundTickets[currentRoundId][ticketIndex];\n        address winner = tickets[winningTicketId].owner;\n        \n        // Update round data\n        round.winner = winner;\n        round.winningTicketId = winningTicketId;\n        \n        // Calculate owner fee (5% of the pool)\n        uint256 ownerFee = (round.totalPool * OWNER_FEE_PERCENT) / 100;\n        \n        // Calculate prize amount (95% of the pool)\n        uint256 prizeAmount = round.totalPool - ownerFee;\n        \n        // Record winner in history contract if available\n        if (historyContract != address(0)) {\n            IGalileoJackpotHistory(historyContract).recordWinner(\n                round.id,\n                winner,\n                winningTicketId,\n                prizeAmount\n            );\n        }\n        \n        // Prepare new round\n        currentRoundId++;\n        rounds[currentRoundId] = Round({\n            id: currentRoundId,\n            startTime: 0,\n            endTime: 0,\n            totalPool: 0,\n            winner: address(0),\n            winningTicketId: 0,\n            completed: false\n        });\n        \n        // Send fee to treasury/owner\n        (bool feeSuccess, ) = treasury.call{value: ownerFee}(\"\");\n        if (!feeSuccess) revert TransferFailed();\n        \n        // Send prize to winner\n        (bool success, ) = winner.call{value: prizeAmount}(\"\");\n        if (!success) revert TransferFailed();\n        \n        emit OwnerFeeCollected(round.id, treasury, ownerFee);\n        emit RoundCompleted(round.id, winner, winningTicketId, prizeAmount);\n    }\n}"},"contracts/GalileoJackpotHistory.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n * @title GalileoJackpotHistory\r\n * @dev Contract to store the history of jackpot winners\r\n */\r\ncontract GalileoJackpotHistory is Ownable {\r\n    // Winner data structure\r\n    struct WinnerInfo {\r\n        uint256 roundId;\r\n        address winner;\r\n        uint256 winningTicketId;\r\n        uint256 prizeAmount;\r\n        uint256 timestamp;\r\n    }\r\n    \r\n    // Array of all winners\r\n    WinnerInfo[] public winners;\r\n    \r\n    // Mapping from round ID to winner info index\r\n    mapping(uint256 => uint256) public roundToWinnerIndex;\r\n    \r\n    // Mapping from winner address to their winning rounds\r\n    mapping(address => uint256[]) public winnerRounds;\r\n    \r\n    // Event for new winner record\r\n    event WinnerRecorded(uint256 indexed roundId, address indexed winner, uint256 winningTicketId, uint256 prizeAmount);\r\n    \r\n    // Only main jackpot contract can add winners\r\n    address public jackpotContract;\r\n    \r\n    // Error for unauthorized access\r\n    error UnauthorizedAccess();\r\n    \r\n    constructor() Ownable(msg.sender) {}\r\n    \r\n    /**\r\n     * @dev Set the main jackpot contract address\r\n     * @param _jackpotContract Address of the main jackpot contract\r\n     */\r\n    function setJackpotContract(address _jackpotContract) external onlyOwner {\r\n        jackpotContract = _jackpotContract;\r\n    }\r\n    \r\n    /**\r\n     * @dev Record a new winner (can only be called by main jackpot contract)\r\n     * @param roundId Round ID\r\n     * @param winner Winner address\r\n     * @param winningTicketId Winning ticket ID\r\n     * @param prizeAmount Prize amount\r\n     */\r\n    function recordWinner(\r\n        uint256 roundId,\r\n        address winner,\r\n        uint256 winningTicketId,\r\n        uint256 prizeAmount\r\n    ) external {\r\n        // Only main jackpot contract can call this\r\n        if (msg.sender != jackpotContract && msg.sender != owner()) revert UnauthorizedAccess();\r\n        \r\n        // Create winner info\r\n        WinnerInfo memory newWinner = WinnerInfo({\r\n            roundId: roundId,\r\n            winner: winner,\r\n            winningTicketId: winningTicketId,\r\n            prizeAmount: prizeAmount,\r\n            timestamp: block.timestamp\r\n        });\r\n        \r\n        // Add to winners array\r\n        winners.push(newWinner);\r\n        \r\n        // Update mappings\r\n        roundToWinnerIndex[roundId] = winners.length - 1;\r\n        winnerRounds[winner].push(roundId);\r\n        \r\n        // Emit event\r\n        emit WinnerRecorded(roundId, winner, winningTicketId, prizeAmount);\r\n    }\r\n    \r\n    /**\r\n     * @dev Get the total number of recorded winners\r\n     * @return Total winner count\r\n     */\r\n    function getTotalWinners() external view returns (uint256) {\r\n        return winners.length;\r\n    }\r\n    \r\n    /**\r\n     * @dev Get winners with pagination\r\n     * @param offset Starting index\r\n     * @param limit Maximum number of winners to return\r\n     * @return Array of winner info structures\r\n     */\r\n    function getWinners(uint256 offset, uint256 limit) external view returns (WinnerInfo[] memory) {\r\n        uint256 totalWinners = winners.length;\r\n        \r\n        // Validate parameters\r\n        if (offset >= totalWinners) {\r\n            return new WinnerInfo[](0);\r\n        }\r\n        \r\n        // Calculate actual limit\r\n        uint256 actualLimit = (offset + limit > totalWinners) ? (totalWinners - offset) : limit;\r\n        \r\n        // Create result array\r\n        WinnerInfo[] memory result = new WinnerInfo[](actualLimit);\r\n        \r\n        // Fill result array\r\n        for (uint256 i = 0; i < actualLimit; i++) {\r\n            result[i] = winners[totalWinners - 1 - (offset + i)]; // Return from newest to oldest\r\n        }\r\n        \r\n        return result;\r\n    }\r\n    \r\n    /**\r\n     * @dev Get all rounds won by a specific address\r\n     * @param winnerAddress Winner address\r\n     * @return Array of round IDs\r\n     */\r\n    function getWinnerRounds(address winnerAddress) external view returns (uint256[] memory) {\r\n        return winnerRounds[winnerAddress];\r\n    }\r\n    \r\n    /**\r\n     * @dev Check if an address has won any rounds\r\n     * @param winnerAddress Winner address\r\n     * @return True if the address has won any rounds\r\n     */\r\n    function isWinner(address winnerAddress) external view returns (bool) {\r\n        return winnerRounds[winnerAddress].length > 0;\r\n    }\r\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[809],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":810,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":809,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,809],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[229],"IERC165":[942],"IERC20":[315]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":238,"src":"133:36:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"141:6:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":153,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":230,"sourceUnit":234,"src":"170:38:1","symbolAliases":[{"foreign":{"id":152,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"178:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":155,"name":"IERC20","nameLocations":["590:6:1"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"590:6:1"},"id":156,"nodeType":"InheritanceSpecifier","src":"590:6:1"},{"baseName":{"id":157,"name":"IERC165","nameLocations":["598:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":942,"src":"598:7:1"},"id":158,"nodeType":"InheritanceSpecifier","src":"598:7:1"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":154,"nodeType":"StructuredDocumentation","src":"210:357:1","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":229,"linearizedBaseContracts":[229,942,315],"name":"IERC1363","nameLocation":"578:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"1148:370:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":168,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:1","nodeType":"FunctionDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"to","nameLocation":"1556:2:1","nodeType":"VariableDeclaration","scope":168,"src":"1548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"value","nameLocation":"1568:5:1","nodeType":"VariableDeclaration","scope":168,"src":"1560:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"1593:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:1"},"scope":229,"src":"1523:76:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":169,"nodeType":"StructuredDocumentation","src":"1605:453:1","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":180,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:1","nodeType":"FunctionDefinition","parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"to","nameLocation":"2096:2:1","nodeType":"VariableDeclaration","scope":180,"src":"2088:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"2108:5:1","nodeType":"VariableDeclaration","scope":180,"src":"2100:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2130:4:1","nodeType":"VariableDeclaration","scope":180,"src":"2115:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2154:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":177,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:1"},"scope":229,"src":"2063:97:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"2166:453:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":192,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:1","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"from","nameLocation":"2661:4:1","nodeType":"VariableDeclaration","scope":192,"src":"2653:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"mutability":"mutable","name":"to","nameLocation":"2675:2:1","nodeType":"VariableDeclaration","scope":192,"src":"2667:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":184,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"value","nameLocation":"2687:5:1","nodeType":"VariableDeclaration","scope":192,"src":"2679:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:1"},"returnParameters":{"id":191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":192,"src":"2712:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:1"},"scope":229,"src":"2624:94:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"2724:536:1","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":206,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:1","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"from","nameLocation":"3302:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3294:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"to","nameLocation":"3316:2:1","nodeType":"VariableDeclaration","scope":206,"src":"3308:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"value","nameLocation":"3328:5:1","nodeType":"VariableDeclaration","scope":206,"src":"3320:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":201,"mutability":"mutable","name":"data","nameLocation":"3350:4:1","nodeType":"VariableDeclaration","scope":206,"src":"3335:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":200,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:1"},"returnParameters":{"id":205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":206,"src":"3374:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:1"},"scope":229,"src":"3265:115:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":207,"nodeType":"StructuredDocumentation","src":"3386:390:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:1","nodeType":"FunctionDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":209,"mutability":"mutable","name":"spender","nameLocation":"3813:7:1","nodeType":"VariableDeclaration","scope":216,"src":"3805:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"value","nameLocation":"3830:5:1","nodeType":"VariableDeclaration","scope":216,"src":"3822:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:1"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":216,"src":"3855:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":213,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:1"},"scope":229,"src":"3781:80:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3867:478:1","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":228,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:1","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"spender","nameLocation":"4382:7:1","nodeType":"VariableDeclaration","scope":228,"src":"4374:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":218,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"value","nameLocation":"4399:5:1","nodeType":"VariableDeclaration","scope":228,"src":"4391:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"data","nameLocation":"4421:4:1","nodeType":"VariableDeclaration","scope":228,"src":"4406:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:1"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":228,"src":"4445:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:1"},"scope":229,"src":"4350:101:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":230,"src":"568:3885:1","usedErrors":[],"usedEvents":[249,258]}],"src":"107:4347:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[942]},"id":234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":234,"sourceUnit":943,"src":"132:59:2","symbolAliases":[{"foreign":{"id":232,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"140:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:2"},"id":2},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[315]},"id":238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":238,"sourceUnit":316,"src":"131:49:3","symbolAliases":[{"foreign":{"id":236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"139:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[315]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"132:71:4","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":315,"linearizedBaseContracts":[315],"name":"IERC20","nameLocation":"214:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"227:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":249,"name":"Transfer","nameLocation":"396:8:4","nodeType":"EventDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:4","nodeType":"VariableDeclaration","scope":249,"src":"405:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":245,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:4","nodeType":"VariableDeclaration","scope":249,"src":"427:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":247,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:4","nodeType":"VariableDeclaration","scope":249,"src":"447:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:4"},"src":"390:72:4"},{"anonymous":false,"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"468:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":258,"name":"Approval","nameLocation":"627:8:4","nodeType":"EventDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:4","nodeType":"VariableDeclaration","scope":258,"src":"636:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":254,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:4","nodeType":"VariableDeclaration","scope":258,"src":"659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":253,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":256,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:4","nodeType":"VariableDeclaration","scope":258,"src":"684:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:4"},"src":"621:78:4"},{"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"705:65:4","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":264,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:4","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"795:2:4"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"821:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:4"},"scope":315,"src":"775:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":265,"nodeType":"StructuredDocumentation","src":"836:71:4","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":272,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":272,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":272,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":315,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":273,"nodeType":"StructuredDocumentation","src":"986:213:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":282,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:4","nodeType":"FunctionDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":275,"mutability":"mutable","name":"to","nameLocation":"1230:2:4","nodeType":"VariableDeclaration","scope":282,"src":"1222:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"value","nameLocation":"1242:5:4","nodeType":"VariableDeclaration","scope":282,"src":"1234:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:4"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"1267:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":279,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:4"},"scope":315,"src":"1204:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"1279:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:4","nodeType":"FunctionDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"owner","nameLocation":"1575:5:4","nodeType":"VariableDeclaration","scope":292,"src":"1567:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"spender","nameLocation":"1590:7:4","nodeType":"VariableDeclaration","scope":292,"src":"1582:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:4"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":292,"src":"1622:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:4"},"scope":315,"src":"1548:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"1637:667:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:4","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":295,"mutability":"mutable","name":"spender","nameLocation":"2334:7:4","nodeType":"VariableDeclaration","scope":302,"src":"2326:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":294,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"value","nameLocation":"2351:5:4","nodeType":"VariableDeclaration","scope":302,"src":"2343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:4"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"2376:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":299,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:4"},"scope":315,"src":"2309:73:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"2388:297:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":314,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:4","nodeType":"FunctionDefinition","parameters":{"id":310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"from","nameLocation":"2720:4:4","nodeType":"VariableDeclaration","scope":314,"src":"2712:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":307,"mutability":"mutable","name":"to","nameLocation":"2734:2:4","nodeType":"VariableDeclaration","scope":314,"src":"2726:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"value","nameLocation":"2746:5:4","nodeType":"VariableDeclaration","scope":314,"src":"2738:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:4"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":314,"src":"2771:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":311,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:4"},"scope":315,"src":"2690:87:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":316,"src":"204:2575:4","usedErrors":[],"usedEvents":[249,258]}],"src":"106:2674:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[229],"IERC20":[315],"SafeERC20":[779]},"id":780,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":319,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":780,"sourceUnit":316,"src":"141:37:5","symbolAliases":[{"foreign":{"id":318,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"149:6:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":321,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":780,"sourceUnit":230,"src":"179:58:5","symbolAliases":[{"foreign":{"id":320,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"187:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":322,"nodeType":"StructuredDocumentation","src":"239:458:5","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":779,"linearizedBaseContracts":[779],"name":"SafeERC20","nameLocation":"706:9:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":323,"nodeType":"StructuredDocumentation","src":"722:65:5","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":327,"name":"SafeERC20FailedOperation","nameLocation":"798:24:5","nodeType":"ErrorDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"token","nameLocation":"831:5:5","nodeType":"VariableDeclaration","scope":327,"src":"823:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:5"},"src":"792:46:5"},{"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"844:71:5","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":336,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:5","nodeType":"ErrorDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"mutability":"mutable","name":"spender","nameLocation":"967:7:5","nodeType":"VariableDeclaration","scope":336,"src":"959:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":332,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:5","nodeType":"VariableDeclaration","scope":336,"src":"976:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":331,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:5","nodeType":"VariableDeclaration","scope":336,"src":"1002:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:5"},"src":"920:109:5"},{"body":{"id":359,"nodeType":"Block","src":"1291:88:5","statements":[{"expression":{"arguments":[{"id":348,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1321:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":351,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"1343:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":282,"src":"1343:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":353,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"1360:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"1364:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":355,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":349,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":347,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1301:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"ExpressionStatement","src":"1301:71:5"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1035:179:5","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":360,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:5","nodeType":"FunctionDefinition","parameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"token","nameLocation":"1248:5:5","nodeType":"VariableDeclaration","scope":360,"src":"1241:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":339,"nodeType":"UserDefinedTypeName","pathNode":{"id":338,"name":"IERC20","nameLocations":["1241:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1241:6:5"},"referencedDeclaration":315,"src":"1241:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"to","nameLocation":"1263:2:5","nodeType":"VariableDeclaration","scope":360,"src":"1255:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"value","nameLocation":"1275:5:5","nodeType":"VariableDeclaration","scope":360,"src":"1267:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:5"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"1291:0:5"},"scope":779,"src":"1219:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":386,"nodeType":"Block","src":"1708:98:5","statements":[{"expression":{"arguments":[{"id":374,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1738:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":377,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"1760:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":314,"src":"1760:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":379,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"1781:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":380,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"1787:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"1791:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":382,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":375,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":373,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"1718:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":385,"nodeType":"ExpressionStatement","src":"1718:81:5"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"1385:228:5","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":387,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:5","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"token","nameLocation":"1651:5:5","nodeType":"VariableDeclaration","scope":387,"src":"1644:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":363,"nodeType":"UserDefinedTypeName","pathNode":{"id":362,"name":"IERC20","nameLocations":["1644:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1644:6:5"},"referencedDeclaration":315,"src":"1644:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"from","nameLocation":"1666:4:5","nodeType":"VariableDeclaration","scope":387,"src":"1658:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"to","nameLocation":"1680:2:5","nodeType":"VariableDeclaration","scope":387,"src":"1672:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"value","nameLocation":"1692:5:5","nodeType":"VariableDeclaration","scope":387,"src":"1684:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:5"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1708:0:5"},"scope":779,"src":"1618:188:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":412,"nodeType":"Block","src":"2033:99:5","statements":[{"expression":{"arguments":[{"id":401,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2074:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":404,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"2096:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":282,"src":"2096:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":406,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"2113:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2117:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":408,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2112:11:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":402,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2081:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2085:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"2081:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":400,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2050:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2050:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":399,"id":411,"nodeType":"Return","src":"2043:82:5"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"1812:126:5","text":" @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."},"id":413,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransfer","nameLocation":"1952:15:5","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"token","nameLocation":"1975:5:5","nodeType":"VariableDeclaration","scope":413,"src":"1968:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":390,"nodeType":"UserDefinedTypeName","pathNode":{"id":389,"name":"IERC20","nameLocations":["1968:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"1968:6:5"},"referencedDeclaration":315,"src":"1968:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"to","nameLocation":"1990:2:5","nodeType":"VariableDeclaration","scope":413,"src":"1982:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"1982:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":395,"mutability":"mutable","name":"value","nameLocation":"2002:5:5","nodeType":"VariableDeclaration","scope":413,"src":"1994:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1967:41:5"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":413,"src":"2027:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:5"},"scope":779,"src":"1943:189:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":441,"nodeType":"Block","src":"2381:109:5","statements":[{"expression":{"arguments":[{"id":429,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2422:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":432,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"2444:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":314,"src":"2444:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":434,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"2465:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":435,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"2471:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"2475:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2464:17:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":430,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2429:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2433:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"2429:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2429:53:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":428,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"2398:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":427,"id":440,"nodeType":"Return","src":"2391:92:5"}]},"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"2138:130:5","text":" @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."},"id":442,"implemented":true,"kind":"function","modifiers":[],"name":"trySafeTransferFrom","nameLocation":"2282:19:5","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"token","nameLocation":"2309:5:5","nodeType":"VariableDeclaration","scope":442,"src":"2302:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":416,"nodeType":"UserDefinedTypeName","pathNode":{"id":415,"name":"IERC20","nameLocations":["2302:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"2302:6:5"},"referencedDeclaration":315,"src":"2302:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":419,"mutability":"mutable","name":"from","nameLocation":"2324:4:5","nodeType":"VariableDeclaration","scope":442,"src":"2316:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":418,"name":"address","nodeType":"ElementaryTypeName","src":"2316:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":421,"mutability":"mutable","name":"to","nameLocation":"2338:2:5","nodeType":"VariableDeclaration","scope":442,"src":"2330:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":420,"name":"address","nodeType":"ElementaryTypeName","src":"2330:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"value","nameLocation":"2350:5:5","nodeType":"VariableDeclaration","scope":442,"src":"2342:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2342:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2301:55:5"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":442,"src":"2375:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":425,"name":"bool","nodeType":"ElementaryTypeName","src":"2375:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2374:6:5"},"scope":779,"src":"2273:217:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":472,"nodeType":"Block","src":"3232:139:5","statements":[{"assignments":[454],"declarations":[{"constant":false,"id":454,"mutability":"mutable","name":"oldAllowance","nameLocation":"3250:12:5","nodeType":"VariableDeclaration","scope":472,"src":"3242:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3242:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":463,"initialValue":{"arguments":[{"arguments":[{"id":459,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3289:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}],"id":458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3281:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":457,"name":"address","nodeType":"ElementaryTypeName","src":"3281:7:5","typeDescriptions":{}}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3281:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":461,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3296:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":455,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3265:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":292,"src":"3265:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3265:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3242:62:5"},{"expression":{"arguments":[{"id":465,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"3327:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":466,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3334:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":467,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"3343:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"3358:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3343:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":464,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"3314:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3314:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"ExpressionStatement","src":"3314:50:5"}]},"documentation":{"id":443,"nodeType":"StructuredDocumentation","src":"2496:645:5","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":473,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"3155:21:5","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"token","nameLocation":"3184:5:5","nodeType":"VariableDeclaration","scope":473,"src":"3177:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":445,"nodeType":"UserDefinedTypeName","pathNode":{"id":444,"name":"IERC20","nameLocations":["3177:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"3177:6:5"},"referencedDeclaration":315,"src":"3177:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":448,"mutability":"mutable","name":"spender","nameLocation":"3199:7:5","nodeType":"VariableDeclaration","scope":473,"src":"3191:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":447,"name":"address","nodeType":"ElementaryTypeName","src":"3191:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":450,"mutability":"mutable","name":"value","nameLocation":"3216:5:5","nodeType":"VariableDeclaration","scope":473,"src":"3208:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3176:46:5"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"3232:0:5"},"scope":779,"src":"3146:225:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":515,"nodeType":"Block","src":"4137:370:5","statements":[{"id":514,"nodeType":"UncheckedBlock","src":"4147:354:5","statements":[{"assignments":[485],"declarations":[{"constant":false,"id":485,"mutability":"mutable","name":"currentAllowance","nameLocation":"4179:16:5","nodeType":"VariableDeclaration","scope":514,"src":"4171:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"4171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":494,"initialValue":{"arguments":[{"arguments":[{"id":490,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4222:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$779","typeString":"library SafeERC20"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4214:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"4214:7:5","typeDescriptions":{}}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4214:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4229:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":486,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4198:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4204:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":292,"src":"4198:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4198:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4171:66:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":495,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4255:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":496,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4274:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4255:36:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"IfStatement","src":"4251:160:5","trueBody":{"id":504,"nodeType":"Block","src":"4293:118:5","statements":[{"errorCall":{"arguments":[{"id":499,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4351:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4360:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":501,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4378:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"4318:32:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) pure"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4318:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":503,"nodeType":"RevertStatement","src":"4311:85:5"}]}},{"expression":{"arguments":[{"id":507,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"4437:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":508,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"4444:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":509,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4453:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":510,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"4472:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4453:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"4424:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4424:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"4424:66:5"}]}]},"documentation":{"id":474,"nodeType":"StructuredDocumentation","src":"3377:657:5","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":516,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"4048:21:5","nodeType":"FunctionDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"token","nameLocation":"4077:5:5","nodeType":"VariableDeclaration","scope":516,"src":"4070:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":476,"nodeType":"UserDefinedTypeName","pathNode":{"id":475,"name":"IERC20","nameLocations":["4070:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"4070:6:5"},"referencedDeclaration":315,"src":"4070:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"spender","nameLocation":"4092:7:5","nodeType":"VariableDeclaration","scope":516,"src":"4084:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":481,"mutability":"mutable","name":"requestedDecrease","nameLocation":"4109:17:5","nodeType":"VariableDeclaration","scope":516,"src":"4101:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":480,"name":"uint256","nodeType":"ElementaryTypeName","src":"4101:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4069:58:5"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"4137:0:5"},"scope":779,"src":"4039:468:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":562,"nodeType":"Block","src":"5161:303:5","statements":[{"assignments":[528],"declarations":[{"constant":false,"id":528,"mutability":"mutable","name":"approvalCall","nameLocation":"5184:12:5","nodeType":"VariableDeclaration","scope":562,"src":"5171:25:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":527,"name":"bytes","nodeType":"ElementaryTypeName","src":"5171:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":537,"initialValue":{"arguments":[{"expression":{"id":531,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5214:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5220:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5214:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":533,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5230:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5239:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5229:16:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5199:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5203:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"5199:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:47:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5171:75:5"},{"condition":{"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5261:45:5","subExpression":{"arguments":[{"id":539,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5286:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":540,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"5293:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":538,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"5262:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5262:44:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":561,"nodeType":"IfStatement","src":"5257:201:5","trueBody":{"id":560,"nodeType":"Block","src":"5308:150:5","statements":[{"expression":{"arguments":[{"id":544,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5342:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":547,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5364:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5370:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5364:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":549,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"5380:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5389:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5379:12:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":545,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5349:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5353:10:5","memberName":"encodeCall","nodeType":"MemberAccess","src":"5349:14:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5349:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":543,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5322:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5322:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":554,"nodeType":"ExpressionStatement","src":"5322:71:5"},{"expression":{"arguments":[{"id":556,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5427:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},{"id":557,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"5434:12:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":555,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":737,"src":"5407:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5407:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"ExpressionStatement","src":"5407:40:5"}]}}]},"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"4513:566:5","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":563,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"5093:12:5","nodeType":"FunctionDefinition","parameters":{"id":525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":520,"mutability":"mutable","name":"token","nameLocation":"5113:5:5","nodeType":"VariableDeclaration","scope":563,"src":"5106:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":519,"nodeType":"UserDefinedTypeName","pathNode":{"id":518,"name":"IERC20","nameLocations":["5106:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"5106:6:5"},"referencedDeclaration":315,"src":"5106:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":522,"mutability":"mutable","name":"spender","nameLocation":"5128:7:5","nodeType":"VariableDeclaration","scope":563,"src":"5120:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"5120:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":524,"mutability":"mutable","name":"value","nameLocation":"5145:5:5","nodeType":"VariableDeclaration","scope":563,"src":"5137:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":523,"name":"uint256","nodeType":"ElementaryTypeName","src":"5137:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5105:46:5"},"returnParameters":{"id":526,"nodeType":"ParameterList","parameters":[],"src":"5161:0:5"},"scope":779,"src":"5084:380:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"5911:219:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":576,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5925:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5928:4:5","memberName":"code","nodeType":"MemberAccess","src":"5925:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5933:6:5","memberName":"length","nodeType":"MemberAccess","src":"5925:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5943:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5925:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6011:39:5","subExpression":{"arguments":[{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"6034:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6038:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":592,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"6045:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":588,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"6012:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6018:15:5","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":180,"src":"6012:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6012:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":603,"nodeType":"IfStatement","src":"6007:117:5","trueBody":{"id":602,"nodeType":"Block","src":"6052:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":598,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"6106:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6098:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"6098:7:5","typeDescriptions":{}}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6098:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":595,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6073:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6073:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"RevertStatement","src":"6066:47:5"}]}},"id":604,"nodeType":"IfStatement","src":"5921:203:5","trueBody":{"id":587,"nodeType":"Block","src":"5946:55:5","statements":[{"expression":{"arguments":[{"id":582,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"5973:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"5980:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"5984:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":581,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"5960:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5960:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"5960:30:5"}]}}]},"documentation":{"id":564,"nodeType":"StructuredDocumentation","src":"5470:333:5","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5817:22:5","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":567,"mutability":"mutable","name":"token","nameLocation":"5849:5:5","nodeType":"VariableDeclaration","scope":606,"src":"5840:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":566,"nodeType":"UserDefinedTypeName","pathNode":{"id":565,"name":"IERC1363","nameLocations":["5840:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"5840:8:5"},"referencedDeclaration":229,"src":"5840:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":569,"mutability":"mutable","name":"to","nameLocation":"5864:2:5","nodeType":"VariableDeclaration","scope":606,"src":"5856:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":568,"name":"address","nodeType":"ElementaryTypeName","src":"5856:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":571,"mutability":"mutable","name":"value","nameLocation":"5876:5:5","nodeType":"VariableDeclaration","scope":606,"src":"5868:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":570,"name":"uint256","nodeType":"ElementaryTypeName","src":"5868:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":573,"mutability":"mutable","name":"data","nameLocation":"5896:4:5","nodeType":"VariableDeclaration","scope":606,"src":"5883:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":572,"name":"bytes","nodeType":"ElementaryTypeName","src":"5883:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5839:62:5"},"returnParameters":{"id":575,"nodeType":"ParameterList","parameters":[],"src":"5911:0:5"},"scope":779,"src":"5808:322:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":652,"nodeType":"Block","src":"6649:239:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":621,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6663:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6666:4:5","memberName":"code","nodeType":"MemberAccess","src":"6663:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:6:5","memberName":"length","nodeType":"MemberAccess","src":"6663:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6663:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6759:49:5","subExpression":{"arguments":[{"id":636,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6786:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6792:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6796:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":639,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"6803:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":634,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6760:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6766:19:5","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":206,"src":"6760:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6760:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":650,"nodeType":"IfStatement","src":"6755:127:5","trueBody":{"id":649,"nodeType":"Block","src":"6810:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":645,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6864:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6856:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"6856:7:5","typeDescriptions":{}}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6856:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":642,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6831:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6831:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"RevertStatement","src":"6824:47:5"}]}},"id":651,"nodeType":"IfStatement","src":"6659:223:5","trueBody":{"id":633,"nodeType":"Block","src":"6684:65:5","statements":[{"expression":{"arguments":[{"id":627,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"6715:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":628,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"6722:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":629,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6728:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"6732:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":626,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"6698:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6698:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"6698:40:5"}]}}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"6136:341:5","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":653,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"6491:26:5","nodeType":"FunctionDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"token","nameLocation":"6536:5:5","nodeType":"VariableDeclaration","scope":653,"src":"6527:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":609,"nodeType":"UserDefinedTypeName","pathNode":{"id":608,"name":"IERC1363","nameLocations":["6527:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"6527:8:5"},"referencedDeclaration":229,"src":"6527:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"from","nameLocation":"6559:4:5","nodeType":"VariableDeclaration","scope":653,"src":"6551:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"6551:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":614,"mutability":"mutable","name":"to","nameLocation":"6581:2:5","nodeType":"VariableDeclaration","scope":653,"src":"6573:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"6573:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":616,"mutability":"mutable","name":"value","nameLocation":"6601:5:5","nodeType":"VariableDeclaration","scope":653,"src":"6593:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":615,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"data","nameLocation":"6629:4:5","nodeType":"VariableDeclaration","scope":653,"src":"6616:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":617,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6517:122:5"},"returnParameters":{"id":620,"nodeType":"ParameterList","parameters":[],"src":"6649:0:5"},"scope":779,"src":"6482:406:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"7655:218:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7669:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7672:4:5","memberName":"code","nodeType":"MemberAccess","src":"7669:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7677:6:5","memberName":"length","nodeType":"MemberAccess","src":"7669:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7687:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7669:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7755:38:5","subExpression":{"arguments":[{"id":680,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7777:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7781:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":682,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":663,"src":"7788:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":678,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7756:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7762:14:5","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":228,"src":"7756:20:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"7751:116:5","trueBody":{"id":692,"nodeType":"Block","src":"7795:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":688,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7849:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}],"id":687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7841:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":686,"name":"address","nodeType":"ElementaryTypeName","src":"7841:7:5","typeDescriptions":{}}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7841:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":685,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7816:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7816:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"RevertStatement","src":"7809:47:5"}]}},"id":694,"nodeType":"IfStatement","src":"7665:202:5","trueBody":{"id":677,"nodeType":"Block","src":"7690:55:5","statements":[{"expression":{"arguments":[{"id":672,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":657,"src":"7717:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},{"id":673,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"7724:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"7728:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":671,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"7704:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7704:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"7704:30:5"}]}}]},"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"6894:654:5","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"7562:21:5","nodeType":"FunctionDefinition","parameters":{"id":664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":657,"mutability":"mutable","name":"token","nameLocation":"7593:5:5","nodeType":"VariableDeclaration","scope":696,"src":"7584:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"},"typeName":{"id":656,"nodeType":"UserDefinedTypeName","pathNode":{"id":655,"name":"IERC1363","nameLocations":["7584:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":229,"src":"7584:8:5"},"referencedDeclaration":229,"src":"7584:8:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$229","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":659,"mutability":"mutable","name":"to","nameLocation":"7608:2:5","nodeType":"VariableDeclaration","scope":696,"src":"7600:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":658,"name":"address","nodeType":"ElementaryTypeName","src":"7600:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"value","nameLocation":"7620:5:5","nodeType":"VariableDeclaration","scope":696,"src":"7612:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7612:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"data","nameLocation":"7640:4:5","nodeType":"VariableDeclaration","scope":696,"src":"7627:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":662,"name":"bytes","nodeType":"ElementaryTypeName","src":"7627:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7583:62:5"},"returnParameters":{"id":665,"nodeType":"ParameterList","parameters":[],"src":"7655:0:5"},"scope":779,"src":"7553:320:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":736,"nodeType":"Block","src":"8440:650:5","statements":[{"assignments":[706],"declarations":[{"constant":false,"id":706,"mutability":"mutable","name":"returnSize","nameLocation":"8458:10:5","nodeType":"VariableDeclaration","scope":736,"src":"8450:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"8450:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":707,"nodeType":"VariableDeclarationStatement","src":"8450:18:5"},{"assignments":[709],"declarations":[{"constant":false,"id":709,"mutability":"mutable","name":"returnValue","nameLocation":"8486:11:5","nodeType":"VariableDeclaration","scope":736,"src":"8478:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"8478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":710,"nodeType":"VariableDeclarationStatement","src":"8478:19:5"},{"AST":{"nodeType":"YulBlock","src":"8532:396:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8546:75:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"8566:3:5"},"nodeType":"YulFunctionCall","src":"8566:5:5"},{"name":"token","nodeType":"YulIdentifier","src":"8573:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"8580:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8587:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"8593:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8583:3:5"},"nodeType":"YulFunctionCall","src":"8583:15:5"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8606:4:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8600:5:5"},"nodeType":"YulFunctionCall","src":"8600:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"8613:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8616:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"8561:4:5"},"nodeType":"YulFunctionCall","src":"8561:60:5"},"variables":[{"name":"success","nodeType":"YulTypedName","src":"8550:7:5","type":""}]},{"body":{"nodeType":"YulBlock","src":"8682:157:5","statements":[{"nodeType":"YulVariableDeclaration","src":"8700:22:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8717:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8711:5:5"},"nodeType":"YulFunctionCall","src":"8711:11:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"8704:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8754:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"8759:1:5","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8762:14:5"},"nodeType":"YulFunctionCall","src":"8762:16:5"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"8739:14:5"},"nodeType":"YulFunctionCall","src":"8739:40:5"},"nodeType":"YulExpressionStatement","src":"8739:40:5"},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8803:3:5"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8808:14:5"},"nodeType":"YulFunctionCall","src":"8808:16:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8796:6:5"},"nodeType":"YulFunctionCall","src":"8796:29:5"},"nodeType":"YulExpressionStatement","src":"8796:29:5"}]},"condition":{"arguments":[{"name":"success","nodeType":"YulIdentifier","src":"8673:7:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8666:6:5"},"nodeType":"YulFunctionCall","src":"8666:15:5"},"nodeType":"YulIf","src":"8663:176:5"},{"nodeType":"YulAssignment","src":"8852:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"8866:14:5"},"nodeType":"YulFunctionCall","src":"8866:16:5"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"8852:10:5"}]},{"nodeType":"YulAssignment","src":"8895:23:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8916:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8910:5:5"},"nodeType":"YulFunctionCall","src":"8910:8:5"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"8895:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":702,"isOffset":false,"isSlot":false,"src":"8587:4:5","valueSize":1},{"declaration":702,"isOffset":false,"isSlot":false,"src":"8606:4:5","valueSize":1},{"declaration":706,"isOffset":false,"isSlot":false,"src":"8852:10:5","valueSize":1},{"declaration":709,"isOffset":false,"isSlot":false,"src":"8895:11:5","valueSize":1},{"declaration":700,"isOffset":false,"isSlot":false,"src":"8573:5:5","valueSize":1}],"flags":["memory-safe"],"id":711,"nodeType":"InlineAssembly","src":"8507:421:5"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":712,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"8942:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8956:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8942:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":723,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"8994:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8994:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8942:68:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":717,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"8968:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8960:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:5","typeDescriptions":{}}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8960:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8975:4:5","memberName":"code","nodeType":"MemberAccess","src":"8960:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8980:6:5","memberName":"length","nodeType":"MemberAccess","src":"8960:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8960:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":735,"nodeType":"IfStatement","src":"8938:146:5","trueBody":{"id":734,"nodeType":"Block","src":"9012:72:5","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":730,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"9066:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":729,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9058:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":728,"name":"address","nodeType":"ElementaryTypeName","src":"9058:7:5","typeDescriptions":{}}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9058:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":727,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"9033:24:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9033:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":733,"nodeType":"RevertStatement","src":"9026:47:5"}]}}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"7879:486:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":737,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"8379:19:5","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"token","nameLocation":"8406:5:5","nodeType":"VariableDeclaration","scope":737,"src":"8399:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":699,"nodeType":"UserDefinedTypeName","pathNode":{"id":698,"name":"IERC20","nameLocations":["8399:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"8399:6:5"},"referencedDeclaration":315,"src":"8399:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"data","nameLocation":"8426:4:5","nodeType":"VariableDeclaration","scope":737,"src":"8413:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":701,"name":"bytes","nodeType":"ElementaryTypeName","src":"8413:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8398:33:5"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[],"src":"8440:0:5"},"scope":779,"src":"8370:720:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":777,"nodeType":"Block","src":"9681:391:5","statements":[{"assignments":[749],"declarations":[{"constant":false,"id":749,"mutability":"mutable","name":"success","nameLocation":"9696:7:5","nodeType":"VariableDeclaration","scope":777,"src":"9691:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":748,"name":"bool","nodeType":"ElementaryTypeName","src":"9691:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":750,"nodeType":"VariableDeclarationStatement","src":"9691:12:5"},{"assignments":[752],"declarations":[{"constant":false,"id":752,"mutability":"mutable","name":"returnSize","nameLocation":"9721:10:5","nodeType":"VariableDeclaration","scope":777,"src":"9713:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"9713:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":753,"nodeType":"VariableDeclarationStatement","src":"9713:18:5"},{"assignments":[755],"declarations":[{"constant":false,"id":755,"mutability":"mutable","name":"returnValue","nameLocation":"9749:11:5","nodeType":"VariableDeclaration","scope":777,"src":"9741:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint256","nodeType":"ElementaryTypeName","src":"9741:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":756,"nodeType":"VariableDeclarationStatement","src":"9741:19:5"},{"AST":{"nodeType":"YulBlock","src":"9795:174:5","statements":[{"nodeType":"YulAssignment","src":"9809:71:5","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"9825:3:5"},"nodeType":"YulFunctionCall","src":"9825:5:5"},{"name":"token","nodeType":"YulIdentifier","src":"9832:5:5"},{"kind":"number","nodeType":"YulLiteral","src":"9839:1:5","type":"","value":"0"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9846:4:5"},{"kind":"number","nodeType":"YulLiteral","src":"9852:4:5","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:5"},"nodeType":"YulFunctionCall","src":"9842:15:5"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9865:4:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9859:5:5"},"nodeType":"YulFunctionCall","src":"9859:11:5"},{"kind":"number","nodeType":"YulLiteral","src":"9872:1:5","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9875:4:5","type":"","value":"0x20"}],"functionName":{"name":"call","nodeType":"YulIdentifier","src":"9820:4:5"},"nodeType":"YulFunctionCall","src":"9820:60:5"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"9809:7:5"}]},{"nodeType":"YulAssignment","src":"9893:30:5","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"9907:14:5"},"nodeType":"YulFunctionCall","src":"9907:16:5"},"variableNames":[{"name":"returnSize","nodeType":"YulIdentifier","src":"9893:10:5"}]},{"nodeType":"YulAssignment","src":"9936:23:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9957:1:5","type":"","value":"0"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9951:5:5"},"nodeType":"YulFunctionCall","src":"9951:8:5"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"9936:11:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":743,"isOffset":false,"isSlot":false,"src":"9846:4:5","valueSize":1},{"declaration":743,"isOffset":false,"isSlot":false,"src":"9865:4:5","valueSize":1},{"declaration":752,"isOffset":false,"isSlot":false,"src":"9893:10:5","valueSize":1},{"declaration":755,"isOffset":false,"isSlot":false,"src":"9936:11:5","valueSize":1},{"declaration":749,"isOffset":false,"isSlot":false,"src":"9809:7:5","valueSize":1},{"declaration":741,"isOffset":false,"isSlot":false,"src":"9832:5:5","valueSize":1}],"flags":["memory-safe"],"id":757,"nodeType":"InlineAssembly","src":"9770:199:5"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":758,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":749,"src":"9985:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":759,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"9997:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10011:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9997:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":770,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10048:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10048:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9997:67:5","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":764,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"10023:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}],"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10015:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"10015:7:5","typeDescriptions":{}}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10015:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10030:4:5","memberName":"code","nodeType":"MemberAccess","src":"10015:19:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10035:6:5","memberName":"length","nodeType":"MemberAccess","src":"10015:26:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10044:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10015:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9996:69:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9985:80:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":747,"id":776,"nodeType":"Return","src":"9978:87:5"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"9096:491:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":778,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"9601:23:5","nodeType":"FunctionDefinition","parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":741,"mutability":"mutable","name":"token","nameLocation":"9632:5:5","nodeType":"VariableDeclaration","scope":778,"src":"9625:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"},"typeName":{"id":740,"nodeType":"UserDefinedTypeName","pathNode":{"id":739,"name":"IERC20","nameLocations":["9625:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"9625:6:5"},"referencedDeclaration":315,"src":"9625:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"data","nameLocation":"9652:4:5","nodeType":"VariableDeclaration","scope":778,"src":"9639:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":742,"name":"bytes","nodeType":"ElementaryTypeName","src":"9639:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9624:33:5"},"returnParameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"9675:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":745,"name":"bool","nodeType":"ElementaryTypeName","src":"9675:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9674:6:5"},"scope":779,"src":"9592:480:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":780,"src":"698:9376:5","usedErrors":[327,336],"usedEvents":[]}],"src":"115:9960:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[809]},"id":810,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":781,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":782,"nodeType":"StructuredDocumentation","src":"127:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":809,"linearizedBaseContracts":[809],"name":"Context","nameLocation":"642:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":790,"nodeType":"Block","src":"718:34:6","statements":[{"expression":{"expression":{"id":787,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:6","memberName":"sender","nodeType":"MemberAccess","src":"735:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":786,"id":789,"nodeType":"Return","src":"728:17:6"}]},"id":791,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:6","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[],"src":"675:2:6"},"returnParameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"709:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:6"},"scope":809,"src":"656:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":799,"nodeType":"Block","src":"825:32:6","statements":[{"expression":{"expression":{"id":796,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:6","memberName":"data","nodeType":"MemberAccess","src":"842:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":795,"id":798,"nodeType":"Return","src":"835:15:6"}]},"id":800,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:6","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[],"src":"775:2:6"},"returnParameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":800,"src":"809:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":793,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:6"},"scope":809,"src":"758:99:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":807,"nodeType":"Block","src":"935:25:6","statements":[{"expression":{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":804,"id":806,"nodeType":"Return","src":"945:8:6"}]},"id":808,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:6","nodeType":"FunctionDefinition","parameters":{"id":801,"nodeType":"ParameterList","parameters":[],"src":"892:2:6"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"926:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:6"},"scope":809,"src":"863:97:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":810,"src":"624:338:6","usedErrors":[],"usedEvents":[]}],"src":"101:862:6"},"id":6},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[861]},"id":862,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":811,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"125:489:7","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":861,"linearizedBaseContracts":[861],"name":"Panic","nameLocation":"665:5:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"677:36:7","text":"@dev generic / unspecified error"},"id":816,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:7","nodeType":"VariableDeclaration","scope":861,"src":"718:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"764:37:7","text":"@dev used by the assert() builtin"},"id":820,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:7","nodeType":"VariableDeclaration","scope":861,"src":"806:39:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":818,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"851:41:7","text":"@dev arithmetic underflow or overflow"},"id":824,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:7","nodeType":"VariableDeclaration","scope":861,"src":"897:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:7","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"950:35:7","text":"@dev division or modulo by zero"},"id":828,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:7","nodeType":"VariableDeclaration","scope":861,"src":"990:49:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":826,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:7","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"1045:30:7","text":"@dev enum conversion error"},"id":832,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:7","nodeType":"VariableDeclaration","scope":861,"src":"1080:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:7","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"1140:36:7","text":"@dev invalid encoding in storage"},"id":836,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:7","nodeType":"VariableDeclaration","scope":861,"src":"1181:55:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":834,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:7","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"1242:24:7","text":"@dev empty array pop"},"id":840,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:7","nodeType":"VariableDeclaration","scope":861,"src":"1271:48:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:7","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"1325:35:7","text":"@dev array out of bounds access"},"id":844,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:7","nodeType":"VariableDeclaration","scope":861,"src":"1365:52:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":842,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:7","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1423:65:7","text":"@dev resource error (too large allocation or too large array)"},"id":848,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:7","nodeType":"VariableDeclaration","scope":861,"src":"1493:47:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:7","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"1546:42:7","text":"@dev calling invalid internal function"},"id":852,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:7","nodeType":"VariableDeclaration","scope":861,"src":"1593:58:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:7","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":859,"nodeType":"Block","src":"1819:151:7","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:7","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:7","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:7","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:7"},"nodeType":"YulFunctionCall","src":"1868:24:7"},"nodeType":"YulExpressionStatement","src":"1868:24:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:7","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:7"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:7"},"nodeType":"YulFunctionCall","src":"1905:18:7"},"nodeType":"YulExpressionStatement","src":"1905:18:7"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:7","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:7","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:7"},"nodeType":"YulFunctionCall","src":"1936:18:7"},"nodeType":"YulExpressionStatement","src":"1936:18:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":855,"isOffset":false,"isSlot":false,"src":"1918:4:7","valueSize":1}],"flags":["memory-safe"],"id":858,"nodeType":"InlineAssembly","src":"1829:135:7"}]},"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"1658:113:7","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":860,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:7","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"code","nameLocation":"1799:4:7","nodeType":"VariableDeclaration","scope":860,"src":"1791:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:7"},"returnParameters":{"id":857,"nodeType":"ParameterList","parameters":[],"src":"1819:0:7"},"scope":861,"src":"1776:194:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":862,"src":"657:1315:7","usedErrors":[],"usedEvents":[]}],"src":"99:1874:7"},"id":7},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[930]},"id":931,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":863,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":864,"nodeType":"StructuredDocumentation","src":"135:894:8","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":930,"linearizedBaseContracts":[930],"name":"ReentrancyGuard","nameLocation":"1048:15:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":867,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:8","nodeType":"VariableDeclaration","scope":930,"src":"1818:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":865,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":870,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:8","nodeType":"VariableDeclaration","scope":930,"src":"1864:36:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":872,"mutability":"mutable","name":"_status","nameLocation":"1923:7:8","nodeType":"VariableDeclaration","scope":930,"src":"1907:23:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"1937:52:8","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":875,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:8","nodeType":"ErrorDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"2028:2:8"},"src":"1994:37:8"},{"body":{"id":882,"nodeType":"Block","src":"2051:38:8","statements":[{"expression":{"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":878,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2061:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":879,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2071:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":881,"nodeType":"ExpressionStatement","src":"2061:21:8"}]},"id":883,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":876,"nodeType":"ParameterList","parameters":[],"src":"2048:2:8"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[],"src":"2051:0:8"},"scope":930,"src":"2037:52:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":893,"nodeType":"Block","src":"2490:79:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":886,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"2500:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"2500:21:8"},{"id":889,"nodeType":"PlaceholderStatement","src":"2531:1:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":890,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"2542:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":892,"nodeType":"ExpressionStatement","src":"2542:20:8"}]},"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"2095:366:8","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":894,"name":"nonReentrant","nameLocation":"2475:12:8","nodeType":"ModifierDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[],"src":"2487:2:8"},"src":"2466:103:8","virtual":false,"visibility":"internal"},{"body":{"id":909,"nodeType":"Block","src":"2614:268:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":897,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2702:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":898,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2713:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":904,"nodeType":"IfStatement","src":"2698:86:8","trueBody":{"id":903,"nodeType":"Block","src":"2722:62:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":900,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":875,"src":"2743:28:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"RevertStatement","src":"2736:37:8"}]}},{"expression":{"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":905,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"2858:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":906,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2868:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":908,"nodeType":"ExpressionStatement","src":"2858:17:8"}]},"id":910,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:8","nodeType":"FunctionDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[],"src":"2603:2:8"},"returnParameters":{"id":896,"nodeType":"ParameterList","parameters":[],"src":"2614:0:8"},"scope":930,"src":"2575:307:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":917,"nodeType":"Block","src":"2926:170:8","statements":[{"expression":{"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":913,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"3068:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":914,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"3078:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":916,"nodeType":"ExpressionStatement","src":"3068:21:8"}]},"id":918,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:8","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"2915:2:8"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"2926:0:8"},"scope":930,"src":"2888:208:8","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":928,"nodeType":"Block","src":"3339:42:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":924,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"3356:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":925,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"3367:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":923,"id":927,"nodeType":"Return","src":"3349:25:8"}]},"documentation":{"id":919,"nodeType":"StructuredDocumentation","src":"3102:168:8","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":929,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:8","nodeType":"FunctionDefinition","parameters":{"id":920,"nodeType":"ParameterList","parameters":[],"src":"3307:2:8"},"returnParameters":{"id":923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":929,"src":"3333:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":921,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:8"},"scope":930,"src":"3275:106:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":931,"src":"1030:2353:8","usedErrors":[875],"usedEvents":[]}],"src":"109:3275:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[942]},"id":943,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":932,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"141:280:9","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":942,"linearizedBaseContracts":[942],"name":"IERC165","nameLocation":"432:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":934,"nodeType":"StructuredDocumentation","src":"446:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":941,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:9","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":936,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:9","nodeType":"VariableDeclaration","scope":941,"src":"818:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":935,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:9"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"861:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":938,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:9"},"scope":942,"src":"791:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":943,"src":"422:447:9","usedErrors":[],"usedEvents":[]}],"src":"115:755:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2563],"Panic":[861],"SafeCast":[4328]},"id":2564,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":944,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":946,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2564,"sourceUnit":862,"src":"129:35:10","symbolAliases":[{"foreign":{"id":945,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"137:5:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":948,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2564,"sourceUnit":4329,"src":"165:40:10","symbolAliases":[{"foreign":{"id":947,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"207:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2563,"linearizedBaseContracts":[2563],"name":"Math","nameLocation":"289:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":954,"members":[{"id":950,"name":"Floor","nameLocation":"324:5:10","nodeType":"EnumValue","src":"324:5:10"},{"id":951,"name":"Ceil","nameLocation":"367:4:10","nodeType":"EnumValue","src":"367:4:10"},{"id":952,"name":"Trunc","nameLocation":"409:5:10","nodeType":"EnumValue","src":"409:5:10"},{"id":953,"name":"Expand","nameLocation":"439:6:10","nodeType":"EnumValue","src":"439:6:10"}],"name":"Rounding","nameLocation":"305:8:10","nodeType":"EnumDefinition","src":"300:169:10"},{"body":{"id":967,"nodeType":"Block","src":"731:112:10","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:10","statements":[{"nodeType":"YulAssignment","src":"780:16:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:10"},"nodeType":"YulFunctionCall","src":"787:9:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:10"}]},{"nodeType":"YulAssignment","src":"809:18:10","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:10"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:10"},"nodeType":"YulFunctionCall","src":"817:10:10"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":957,"isOffset":false,"isSlot":false,"src":"791:1:10","valueSize":1},{"declaration":957,"isOffset":false,"isSlot":false,"src":"825:1:10","valueSize":1},{"declaration":959,"isOffset":false,"isSlot":false,"src":"794:1:10","valueSize":1},{"declaration":962,"isOffset":false,"isSlot":false,"src":"809:4:10","valueSize":1},{"declaration":964,"isOffset":false,"isSlot":false,"src":"780:3:10","valueSize":1},{"declaration":964,"isOffset":false,"isSlot":false,"src":"820:3:10","valueSize":1}],"flags":["memory-safe"],"id":966,"nodeType":"InlineAssembly","src":"741:96:10"}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"475:163:10","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":968,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:10","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"a","nameLocation":"667:1:10","nodeType":"VariableDeclaration","scope":968,"src":"659:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":956,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"b","nameLocation":"678:1:10","nodeType":"VariableDeclaration","scope":968,"src":"670:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:10"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":962,"mutability":"mutable","name":"high","nameLocation":"712:4:10","nodeType":"VariableDeclaration","scope":968,"src":"704:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":964,"mutability":"mutable","name":"low","nameLocation":"726:3:10","nodeType":"VariableDeclaration","scope":968,"src":"718:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":963,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:10"},"scope":2563,"src":"643:200:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":981,"nodeType":"Block","src":"1115:462:10","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:10","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:10"},"nodeType":"YulFunctionCall","src":"1474:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:10"},"nodeType":"YulFunctionCall","src":"1461:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:10","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:10"},"nodeType":"YulFunctionCall","src":"1501:9:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:10"}]},{"nodeType":"YulAssignment","src":"1523:38:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:10"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:10"},"nodeType":"YulFunctionCall","src":"1535:12:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:10"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:10"},"nodeType":"YulFunctionCall","src":"1549:11:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:10"},"nodeType":"YulFunctionCall","src":"1531:30:10"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":971,"isOffset":false,"isSlot":false,"src":"1468:1:10","valueSize":1},{"declaration":971,"isOffset":false,"isSlot":false,"src":"1505:1:10","valueSize":1},{"declaration":973,"isOffset":false,"isSlot":false,"src":"1471:1:10","valueSize":1},{"declaration":973,"isOffset":false,"isSlot":false,"src":"1508:1:10","valueSize":1},{"declaration":976,"isOffset":false,"isSlot":false,"src":"1523:4:10","valueSize":1},{"declaration":978,"isOffset":false,"isSlot":false,"src":"1494:3:10","valueSize":1},{"declaration":978,"isOffset":false,"isSlot":false,"src":"1543:3:10","valueSize":1},{"declaration":978,"isOffset":false,"isSlot":false,"src":"1556:3:10","valueSize":1}],"flags":["memory-safe"],"id":980,"nodeType":"InlineAssembly","src":"1412:159:10"}]},"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"849:173:10","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":982,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:10","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":971,"mutability":"mutable","name":"a","nameLocation":"1051:1:10","nodeType":"VariableDeclaration","scope":982,"src":"1043:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"b","nameLocation":"1062:1:10","nodeType":"VariableDeclaration","scope":982,"src":"1054:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:10"},"returnParameters":{"id":979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":976,"mutability":"mutable","name":"high","nameLocation":"1096:4:10","nodeType":"VariableDeclaration","scope":982,"src":"1088:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"low","nameLocation":"1110:3:10","nodeType":"VariableDeclaration","scope":982,"src":"1102:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:10"},"scope":2563,"src":"1027:550:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1016,"nodeType":"Block","src":"1784:149:10","statements":[{"id":1015,"nodeType":"UncheckedBlock","src":"1794:133:10","statements":[{"assignments":[995],"declarations":[{"constant":false,"id":995,"mutability":"mutable","name":"c","nameLocation":"1826:1:10","nodeType":"VariableDeclaration","scope":1015,"src":"1818:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":999,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"1830:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":997,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"1834:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:10"},{"expression":{"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1000,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1849:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1001,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1859:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1002,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"1864:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1005,"nodeType":"ExpressionStatement","src":"1849:16:10"},{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1006,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"1879:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1007,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"1888:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1010,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"1908:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1008,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"1892:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"1892:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1014,"nodeType":"ExpressionStatement","src":"1879:37:10"}]}]},"documentation":{"id":983,"nodeType":"StructuredDocumentation","src":"1583:105:10","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":1017,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:10","nodeType":"FunctionDefinition","parameters":{"id":988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":985,"mutability":"mutable","name":"a","nameLocation":"1717:1:10","nodeType":"VariableDeclaration","scope":1017,"src":"1709:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":987,"mutability":"mutable","name":"b","nameLocation":"1728:1:10","nodeType":"VariableDeclaration","scope":1017,"src":"1720:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":986,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:10"},"returnParameters":{"id":993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"success","nameLocation":"1759:7:10","nodeType":"VariableDeclaration","scope":1017,"src":"1754:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":989,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"result","nameLocation":"1776:6:10","nodeType":"VariableDeclaration","scope":1017,"src":"1768:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:10"},"scope":2563,"src":"1693:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"2143:149:10","statements":[{"id":1050,"nodeType":"UncheckedBlock","src":"2153:133:10","statements":[{"assignments":[1030],"declarations":[{"constant":false,"id":1030,"mutability":"mutable","name":"c","nameLocation":"2185:1:10","nodeType":"VariableDeclaration","scope":1050,"src":"2177:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1034,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1031,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2189:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1032,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"2193:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:10"},{"expression":{"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1035,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"2208:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1036,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2218:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2223:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1040,"nodeType":"ExpressionStatement","src":"2208:16:10"},{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1041,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"2238:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1042,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"2247:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1045,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"2267:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1043,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"2251:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"2251:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1049,"nodeType":"ExpressionStatement","src":"2238:37:10"}]}]},"documentation":{"id":1018,"nodeType":"StructuredDocumentation","src":"1939:108:10","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:10","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1020,"mutability":"mutable","name":"a","nameLocation":"2076:1:10","nodeType":"VariableDeclaration","scope":1052,"src":"2068:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1022,"mutability":"mutable","name":"b","nameLocation":"2087:1:10","nodeType":"VariableDeclaration","scope":1052,"src":"2079:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:10"},"returnParameters":{"id":1028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"success","nameLocation":"2118:7:10","nodeType":"VariableDeclaration","scope":1052,"src":"2113:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1024,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"result","nameLocation":"2135:6:10","nodeType":"VariableDeclaration","scope":1052,"src":"2127:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:10"},"scope":2563,"src":"2052:240:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1081,"nodeType":"Block","src":"2505:391:10","statements":[{"id":1080,"nodeType":"UncheckedBlock","src":"2515:375:10","statements":[{"assignments":[1065],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"c","nameLocation":"2547:1:10","nodeType":"VariableDeclaration","scope":1080,"src":"2539:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1069,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"2551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1067,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"2555:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:10"},{"AST":{"nodeType":"YulBlock","src":"2595:188:10","statements":[{"nodeType":"YulAssignment","src":"2727:42:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:10"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:10"},"nodeType":"YulFunctionCall","src":"2744:9:10"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:10"},"nodeType":"YulFunctionCall","src":"2741:16:10"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:10"},"nodeType":"YulFunctionCall","src":"2759:9:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:10"},"nodeType":"YulFunctionCall","src":"2738:31:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1055,"isOffset":false,"isSlot":false,"src":"2751:1:10","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"2766:1:10","valueSize":1},{"declaration":1057,"isOffset":false,"isSlot":false,"src":"2755:1:10","valueSize":1},{"declaration":1065,"isOffset":false,"isSlot":false,"src":"2748:1:10","valueSize":1},{"declaration":1060,"isOffset":false,"isSlot":false,"src":"2727:7:10","valueSize":1}],"flags":["memory-safe"],"id":1070,"nodeType":"InlineAssembly","src":"2570:213:10"},{"expression":{"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"2842:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1072,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"2851:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1075,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"2871:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1073,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"2855:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"2855:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1079,"nodeType":"ExpressionStatement","src":"2842:37:10"}]}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"2298:111:10","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":1082,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:10","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"a","nameLocation":"2438:1:10","nodeType":"VariableDeclaration","scope":1082,"src":"2430:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"b","nameLocation":"2449:1:10","nodeType":"VariableDeclaration","scope":1082,"src":"2441:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:10"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"success","nameLocation":"2480:7:10","nodeType":"VariableDeclaration","scope":1082,"src":"2475:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1059,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"result","nameLocation":"2497:6:10","nodeType":"VariableDeclaration","scope":1082,"src":"2489:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:10"},"scope":2563,"src":"2414:482:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1102,"nodeType":"Block","src":"3111:231:10","statements":[{"id":1101,"nodeType":"UncheckedBlock","src":"3121:215:10","statements":[{"expression":{"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1094,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"3145:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"3155:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1099,"nodeType":"ExpressionStatement","src":"3145:15:10"},{"AST":{"nodeType":"YulBlock","src":"3199:127:10","statements":[{"nodeType":"YulAssignment","src":"3293:19:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:10"},"nodeType":"YulFunctionCall","src":"3303:9:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1085,"isOffset":false,"isSlot":false,"src":"3307:1:10","valueSize":1},{"declaration":1087,"isOffset":false,"isSlot":false,"src":"3310:1:10","valueSize":1},{"declaration":1092,"isOffset":false,"isSlot":false,"src":"3293:6:10","valueSize":1}],"flags":["memory-safe"],"id":1100,"nodeType":"InlineAssembly","src":"3174:152:10"}]}]},"documentation":{"id":1083,"nodeType":"StructuredDocumentation","src":"2902:113:10","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1103,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:10","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"a","nameLocation":"3044:1:10","nodeType":"VariableDeclaration","scope":1103,"src":"3036:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1084,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"b","nameLocation":"3055:1:10","nodeType":"VariableDeclaration","scope":1103,"src":"3047:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:10"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1090,"mutability":"mutable","name":"success","nameLocation":"3086:7:10","nodeType":"VariableDeclaration","scope":1103,"src":"3081:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1089,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1092,"mutability":"mutable","name":"result","nameLocation":"3103:6:10","nodeType":"VariableDeclaration","scope":1103,"src":"3095:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1091,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:10"},"scope":2563,"src":"3020:322:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1123,"nodeType":"Block","src":"3567:231:10","statements":[{"id":1122,"nodeType":"UncheckedBlock","src":"3577:215:10","statements":[{"expression":{"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1115,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"3601:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1116,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"3611:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1120,"nodeType":"ExpressionStatement","src":"3601:15:10"},{"AST":{"nodeType":"YulBlock","src":"3655:127:10","statements":[{"nodeType":"YulAssignment","src":"3749:19:10","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:10"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:10"},"nodeType":"YulFunctionCall","src":"3759:9:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1106,"isOffset":false,"isSlot":false,"src":"3763:1:10","valueSize":1},{"declaration":1108,"isOffset":false,"isSlot":false,"src":"3766:1:10","valueSize":1},{"declaration":1113,"isOffset":false,"isSlot":false,"src":"3749:6:10","valueSize":1}],"flags":["memory-safe"],"id":1121,"nodeType":"InlineAssembly","src":"3630:152:10"}]}]},"documentation":{"id":1104,"nodeType":"StructuredDocumentation","src":"3348:123:10","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1124,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:10","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1106,"mutability":"mutable","name":"a","nameLocation":"3500:1:10","nodeType":"VariableDeclaration","scope":1124,"src":"3492:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"b","nameLocation":"3511:1:10","nodeType":"VariableDeclaration","scope":1124,"src":"3503:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1107,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:10"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"success","nameLocation":"3542:7:10","nodeType":"VariableDeclaration","scope":1124,"src":"3537:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1110,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"result","nameLocation":"3559:6:10","nodeType":"VariableDeclaration","scope":1124,"src":"3551:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:10"},"scope":2563,"src":"3476:322:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1153,"nodeType":"Block","src":"3989:122:10","statements":[{"assignments":[1135,1137],"declarations":[{"constant":false,"id":1135,"mutability":"mutable","name":"success","nameLocation":"4005:7:10","nodeType":"VariableDeclaration","scope":1153,"src":"4000:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1134,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"result","nameLocation":"4022:6:10","nodeType":"VariableDeclaration","scope":1153,"src":"4014:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1142,"initialValue":{"arguments":[{"id":1139,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1127,"src":"4039:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1140,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"4042:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1138,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"4032:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:10"},{"expression":{"arguments":[{"id":1144,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"4069:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1145,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"4078:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1146,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:10","memberName":"max","nodeType":"MemberAccess","src":"4086:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1143,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4061:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1133,"id":1152,"nodeType":"Return","src":"4054:50:10"}]},"documentation":{"id":1125,"nodeType":"StructuredDocumentation","src":"3804:103:10","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:10","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"a","nameLocation":"3943:1:10","nodeType":"VariableDeclaration","scope":1154,"src":"3935:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1126,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"b","nameLocation":"3954:1:10","nodeType":"VariableDeclaration","scope":1154,"src":"3946:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:10"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1154,"src":"3980:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:10"},"scope":2563,"src":"3912:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1173,"nodeType":"Block","src":"4294:73:10","statements":[{"assignments":[null,1165],"declarations":[null,{"constant":false,"id":1165,"mutability":"mutable","name":"result","nameLocation":"4315:6:10","nodeType":"VariableDeclaration","scope":1173,"src":"4307:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1170,"initialValue":{"arguments":[{"id":1167,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"4332:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1168,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"4335:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1166,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4325:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:10"},{"expression":{"id":1171,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"4354:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1163,"id":1172,"nodeType":"Return","src":"4347:13:10"}]},"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"4117:95:10","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":1174,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:10","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"a","nameLocation":"4248:1:10","nodeType":"VariableDeclaration","scope":1174,"src":"4240:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"b","nameLocation":"4259:1:10","nodeType":"VariableDeclaration","scope":1174,"src":"4251:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:10"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1174,"src":"4285:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:10"},"scope":2563,"src":"4217:150:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1203,"nodeType":"Block","src":"4564:122:10","statements":[{"assignments":[1185,1187],"declarations":[{"constant":false,"id":1185,"mutability":"mutable","name":"success","nameLocation":"4580:7:10","nodeType":"VariableDeclaration","scope":1203,"src":"4575:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1184,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"result","nameLocation":"4597:6:10","nodeType":"VariableDeclaration","scope":1203,"src":"4589:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1192,"initialValue":{"arguments":[{"id":1189,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"4614:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1190,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"4617:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1188,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"4607:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:10"},{"expression":{"arguments":[{"id":1194,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"4644:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1195,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"4653:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1197,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1196,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:10","memberName":"max","nodeType":"MemberAccess","src":"4661:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1193,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"4636:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1183,"id":1202,"nodeType":"Return","src":"4629:50:10"}]},"documentation":{"id":1175,"nodeType":"StructuredDocumentation","src":"4373:109:10","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1204,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:10","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"a","nameLocation":"4518:1:10","nodeType":"VariableDeclaration","scope":1204,"src":"4510:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1176,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"b","nameLocation":"4529:1:10","nodeType":"VariableDeclaration","scope":1204,"src":"4521:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1178,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:10"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1204,"src":"4555:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:10"},"scope":2563,"src":"4487:199:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1230,"nodeType":"Block","src":"5158:207:10","statements":[{"id":1229,"nodeType":"UncheckedBlock","src":"5168:191:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1216,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"5306:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1217,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1209,"src":"5312:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1218,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1211,"src":"5316:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1223,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"5337:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1221,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"5321:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"5321:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1226,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1215,"id":1228,"nodeType":"Return","src":"5299:49:10"}]}]},"documentation":{"id":1205,"nodeType":"StructuredDocumentation","src":"4692:374:10","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1231,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:10","nodeType":"FunctionDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"mutability":"mutable","name":"condition","nameLocation":"5093:9:10","nodeType":"VariableDeclaration","scope":1231,"src":"5088:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1206,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"a","nameLocation":"5112:1:10","nodeType":"VariableDeclaration","scope":1231,"src":"5104:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1211,"mutability":"mutable","name":"b","nameLocation":"5123:1:10","nodeType":"VariableDeclaration","scope":1231,"src":"5115:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:10"},"returnParameters":{"id":1215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1214,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1231,"src":"5149:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:10"},"scope":2563,"src":"5071:294:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1249,"nodeType":"Block","src":"5502:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1242,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5527:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1243,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"5531:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"5534:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1246,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"5537:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1241,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"5519:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1240,"id":1248,"nodeType":"Return","src":"5512:27:10"}]},"documentation":{"id":1232,"nodeType":"StructuredDocumentation","src":"5371:59:10","text":" @dev Returns the largest of two numbers."},"id":1250,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:10","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1234,"mutability":"mutable","name":"a","nameLocation":"5456:1:10","nodeType":"VariableDeclaration","scope":1250,"src":"5448:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1233,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1236,"mutability":"mutable","name":"b","nameLocation":"5467:1:10","nodeType":"VariableDeclaration","scope":1250,"src":"5459:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1235,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:10"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1250,"src":"5493:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:10"},"scope":2563,"src":"5435:111:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1268,"nodeType":"Block","src":"5684:44:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"5709:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1262,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"5713:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1264,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"5716:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1265,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"5719:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1260,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"5701:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1259,"id":1267,"nodeType":"Return","src":"5694:27:10"}]},"documentation":{"id":1251,"nodeType":"StructuredDocumentation","src":"5552:60:10","text":" @dev Returns the smallest of two numbers."},"id":1269,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:10","nodeType":"FunctionDefinition","parameters":{"id":1256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1253,"mutability":"mutable","name":"a","nameLocation":"5638:1:10","nodeType":"VariableDeclaration","scope":1269,"src":"5630:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1255,"mutability":"mutable","name":"b","nameLocation":"5649:1:10","nodeType":"VariableDeclaration","scope":1269,"src":"5641:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:10"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1269,"src":"5675:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1257,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:10"},"scope":2563,"src":"5617:111:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"5912:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"5967:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1280,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"5971:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1272,"src":"5977:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1284,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"5981:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1278,"id":1290,"nodeType":"Return","src":"5959:28:10"}]},"documentation":{"id":1270,"nodeType":"StructuredDocumentation","src":"5734:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:10","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"a","nameLocation":"5866:1:10","nodeType":"VariableDeclaration","scope":1292,"src":"5858:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1274,"mutability":"mutable","name":"b","nameLocation":"5877:1:10","nodeType":"VariableDeclaration","scope":1292,"src":"5869:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:10"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1292,"src":"5903:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1276,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:10"},"scope":2563,"src":"5841:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1332,"nodeType":"Block","src":"6286:633:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6300:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1313,"nodeType":"IfStatement","src":"6296:150:10","trueBody":{"id":1312,"nodeType":"Block","src":"6308:138:10","statements":[{"expression":{"arguments":[{"expression":{"id":1308,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"6412:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":828,"src":"6412:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1305,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"6400:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":860,"src":"6400:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1311,"nodeType":"ExpressionStatement","src":"6400:35:10"}]}},{"id":1331,"nodeType":"UncheckedBlock","src":"6829:84:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1316,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6876:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1314,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"6860:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":1315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"6860:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"6887:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6896:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1301,"id":1330,"nodeType":"Return","src":"6853:49:10"}]}]},"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"6000:210:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1333,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:10","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"a","nameLocation":"6240:1:10","nodeType":"VariableDeclaration","scope":1333,"src":"6232:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"b","nameLocation":"6251:1:10","nodeType":"VariableDeclaration","scope":1333,"src":"6243:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:10"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1333,"src":"6277:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:10"},"scope":2563,"src":"6215:704:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1468,"nodeType":"Block","src":"7340:3585:10","statements":[{"id":1467,"nodeType":"UncheckedBlock","src":"7350:3569:10","statements":[{"assignments":[1346,1348],"declarations":[{"constant":false,"id":1346,"mutability":"mutable","name":"high","nameLocation":"7383:4:10","nodeType":"VariableDeclaration","scope":1467,"src":"7375:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"low","nameLocation":"7397:3:10","nodeType":"VariableDeclaration","scope":1467,"src":"7389:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1347,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1353,"initialValue":{"arguments":[{"id":1350,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"7411:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1351,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"7414:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1349,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"7404:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1354,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"7498:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1362,"nodeType":"IfStatement","src":"7494:365:10","trueBody":{"id":1361,"nodeType":"Block","src":"7509:350:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1357,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"7827:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1358,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"7833:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1344,"id":1360,"nodeType":"Return","src":"7820:24:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"7969:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1364,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"7984:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1381,"nodeType":"IfStatement","src":"7965:142:10","trueBody":{"id":1380,"nodeType":"Block","src":"7990:117:10","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1370,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"8028:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1373,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"8046:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":828,"src":"8046:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1375,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"8070:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:10","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":824,"src":"8070:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1369,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"8020:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1366,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"8008:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":860,"src":"8008:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1379,"nodeType":"ExpressionStatement","src":"8008:84:10"}]}},{"assignments":[1383],"declarations":[{"constant":false,"id":1383,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:10","nodeType":"VariableDeclaration","scope":1467,"src":"8359:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1382,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1384,"nodeType":"VariableDeclarationStatement","src":"8359:17:10"},{"AST":{"nodeType":"YulBlock","src":"8415:283:10","statements":[{"nodeType":"YulAssignment","src":"8484:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:10"},"nodeType":"YulFunctionCall","src":"8497:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:10"}]},{"nodeType":"YulAssignment","src":"8604:37:10","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:10"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:10"},"nodeType":"YulFunctionCall","src":"8622:18:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:10"},"nodeType":"YulFunctionCall","src":"8612:29:10"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:10"}]},{"nodeType":"YulAssignment","src":"8658:26:10","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:10"},"nodeType":"YulFunctionCall","src":"8665:19:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1340,"isOffset":false,"isSlot":false,"src":"8510:11:10","valueSize":1},{"declaration":1346,"isOffset":false,"isSlot":false,"src":"8604:4:10","valueSize":1},{"declaration":1346,"isOffset":false,"isSlot":false,"src":"8616:4:10","valueSize":1},{"declaration":1348,"isOffset":false,"isSlot":false,"src":"8636:3:10","valueSize":1},{"declaration":1348,"isOffset":false,"isSlot":false,"src":"8658:3:10","valueSize":1},{"declaration":1348,"isOffset":false,"isSlot":false,"src":"8669:3:10","valueSize":1},{"declaration":1383,"isOffset":false,"isSlot":false,"src":"8484:9:10","valueSize":1},{"declaration":1383,"isOffset":false,"isSlot":false,"src":"8625:9:10","valueSize":1},{"declaration":1383,"isOffset":false,"isSlot":false,"src":"8674:9:10","valueSize":1},{"declaration":1336,"isOffset":false,"isSlot":false,"src":"8504:1:10","valueSize":1},{"declaration":1338,"isOffset":false,"isSlot":false,"src":"8507:1:10","valueSize":1}],"flags":["memory-safe"],"id":1385,"nodeType":"InlineAssembly","src":"8390:308:10"},{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"twos","nameLocation":"8910:4:10","nodeType":"VariableDeclaration","scope":1467,"src":"8902:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1394,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1388,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"8917:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1390,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"8936:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1392,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:10"},{"AST":{"nodeType":"YulBlock","src":"8987:359:10","statements":[{"nodeType":"YulAssignment","src":"9052:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:10"},"nodeType":"YulFunctionCall","src":"9067:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:10"}]},{"nodeType":"YulAssignment","src":"9153:21:10","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:10"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:10"},"nodeType":"YulFunctionCall","src":"9160:14:10"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:10"}]},{"nodeType":"YulAssignment","src":"9293:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:10"},"nodeType":"YulFunctionCall","src":"9309:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:10"},"nodeType":"YulFunctionCall","src":"9305:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:10"},"nodeType":"YulFunctionCall","src":"9301:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1340,"isOffset":false,"isSlot":false,"src":"9052:11:10","valueSize":1},{"declaration":1340,"isOffset":false,"isSlot":false,"src":"9071:11:10","valueSize":1},{"declaration":1348,"isOffset":false,"isSlot":false,"src":"9153:3:10","valueSize":1},{"declaration":1348,"isOffset":false,"isSlot":false,"src":"9164:3:10","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"9084:4:10","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"9169:4:10","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"9293:4:10","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"9316:4:10","valueSize":1},{"declaration":1387,"isOffset":false,"isSlot":false,"src":"9323:4:10","valueSize":1}],"flags":["memory-safe"],"id":1395,"nodeType":"InlineAssembly","src":"8962:384:10"},{"expression":{"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1396,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"9409:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"9416:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1398,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9423:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1401,"nodeType":"ExpressionStatement","src":"9409:18:10"},{"assignments":[1403],"declarations":[{"constant":false,"id":1403,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:10","nodeType":"VariableDeclaration","scope":1467,"src":"9762:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1402,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1410,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1405,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"9785:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1407,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:10"},{"expression":{"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10018:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1413,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"10033:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1414,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10047:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1418,"nodeType":"ExpressionStatement","src":"10018:36:10"},{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1419,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10088:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1421,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"10103:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1422,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10117:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"10088:36:10"},{"expression":{"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1427,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10160:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1429,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"10175:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1430,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1434,"nodeType":"ExpressionStatement","src":"10160:36:10"},{"expression":{"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1435,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10231:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"10246:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1438,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10260:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1442,"nodeType":"ExpressionStatement","src":"10231:36:10"},{"expression":{"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1443,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10304:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1445,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"10319:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1446,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10333:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1450,"nodeType":"ExpressionStatement","src":"10304:36:10"},{"expression":{"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1451,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10378:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"10393:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1454,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10407:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1458,"nodeType":"ExpressionStatement","src":"10378:36:10"},{"expression":{"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1459,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"10859:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1460,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"10868:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1461,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1403,"src":"10874:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"nodeType":"ExpressionStatement","src":"10859:22:10"},{"expression":{"id":1465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"10902:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1344,"id":1466,"nodeType":"Return","src":"10895:13:10"}]}]},"documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"6925:312:10","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:10","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1336,"mutability":"mutable","name":"x","nameLocation":"7266:1:10","nodeType":"VariableDeclaration","scope":1469,"src":"7258:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"y","nameLocation":"7277:1:10","nodeType":"VariableDeclaration","scope":1469,"src":"7269:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:10","nodeType":"VariableDeclaration","scope":1469,"src":"7280:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:10"},"returnParameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"result","nameLocation":"7332:6:10","nodeType":"VariableDeclaration","scope":1469,"src":"7324:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:10"},"scope":2563,"src":"7242:3683:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1505,"nodeType":"Block","src":"11164:128:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1485,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"11188:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1486,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"11191:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1487,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"11194:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1484,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1469,1506],"referencedDeclaration":1469,"src":"11181:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1492,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"11242:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}],"id":1491,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"11225:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1495,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"11262:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1496,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"11265:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1497,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"11268:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1494,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1489,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"11209:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"11209:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1483,"id":1504,"nodeType":"Return","src":"11174:111:10"}]},"documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"10931:118:10","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1506,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:10","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"x","nameLocation":"11078:1:10","nodeType":"VariableDeclaration","scope":1506,"src":"11070:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"y","nameLocation":"11089:1:10","nodeType":"VariableDeclaration","scope":1506,"src":"11081:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:10","nodeType":"VariableDeclaration","scope":1506,"src":"11092:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1475,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:10","nodeType":"VariableDeclaration","scope":1506,"src":"11113:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"},"typeName":{"id":1478,"nodeType":"UserDefinedTypeName","pathNode":{"id":1477,"name":"Rounding","nameLocations":["11113:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"11113:8:10"},"referencedDeclaration":954,"src":"11113:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:10"},"returnParameters":{"id":1483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1506,"src":"11155:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:10"},"scope":2563,"src":"11054:238:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1555,"nodeType":"Block","src":"11500:245:10","statements":[{"id":1554,"nodeType":"UncheckedBlock","src":"11510:229:10","statements":[{"assignments":[1519,1521],"declarations":[{"constant":false,"id":1519,"mutability":"mutable","name":"high","nameLocation":"11543:4:10","nodeType":"VariableDeclaration","scope":1554,"src":"11535:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1518,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"low","nameLocation":"11557:3:10","nodeType":"VariableDeclaration","scope":1554,"src":"11549:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1526,"initialValue":{"arguments":[{"id":1523,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"11571:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1524,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"11574:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1522,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"11564:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1527,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"11594:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1529,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"11607:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1540,"nodeType":"IfStatement","src":"11590:86:10","trueBody":{"id":1539,"nodeType":"Block","src":"11610:66:10","statements":[{"expression":{"arguments":[{"expression":{"id":1535,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"11640:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:10","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":824,"src":"11640:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1532,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"11628:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":860,"src":"11628:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"ExpressionStatement","src":"11628:33:10"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"11697:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1543,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"11712:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":1545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:10","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1547,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1548,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"11719:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":1549,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"11726:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1517,"id":1553,"nodeType":"Return","src":"11689:39:10"}]}]},"documentation":{"id":1507,"nodeType":"StructuredDocumentation","src":"11298:111:10","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:10","nodeType":"FunctionDefinition","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"x","nameLocation":"11438:1:10","nodeType":"VariableDeclaration","scope":1556,"src":"11430:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"y","nameLocation":"11449:1:10","nodeType":"VariableDeclaration","scope":1556,"src":"11441:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1513,"mutability":"mutable","name":"n","nameLocation":"11458:1:10","nodeType":"VariableDeclaration","scope":1556,"src":"11452:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1512,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:10"},"returnParameters":{"id":1517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1516,"mutability":"mutable","name":"result","nameLocation":"11492:6:10","nodeType":"VariableDeclaration","scope":1556,"src":"11484:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1515,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:10"},"scope":2563,"src":"11414:331:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"11963:113:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1572,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"11987:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1573,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"11990:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1574,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"11993:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1571,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[1556,1595],"referencedDeclaration":1556,"src":"11980:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1579,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"12031:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}],"id":1578,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"12014:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1582,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"12051:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1583,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"12054:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1585,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1563,"src":"12062:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1581,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1576,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"11998:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"11998:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1570,"id":1593,"nodeType":"Return","src":"11973:96:10"}]},"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"11751:109:10","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:10","nodeType":"FunctionDefinition","parameters":{"id":1567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1559,"mutability":"mutable","name":"x","nameLocation":"11889:1:10","nodeType":"VariableDeclaration","scope":1595,"src":"11881:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"y","nameLocation":"11900:1:10","nodeType":"VariableDeclaration","scope":1595,"src":"11892:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"n","nameLocation":"11909:1:10","nodeType":"VariableDeclaration","scope":1595,"src":"11903:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1562,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1566,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:10","nodeType":"VariableDeclaration","scope":1595,"src":"11912:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"},"typeName":{"id":1565,"nodeType":"UserDefinedTypeName","pathNode":{"id":1564,"name":"Rounding","nameLocations":["11912:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"11912:8:10"},"referencedDeclaration":954,"src":"11912:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:10"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1595,"src":"11954:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1568,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:10"},"scope":2563,"src":"11865:211:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1691,"nodeType":"Block","src":"12710:1849:10","statements":[{"id":1690,"nodeType":"UncheckedBlock","src":"12720:1833:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"12748:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1610,"nodeType":"IfStatement","src":"12744:20:10","trueBody":{"expression":{"hexValue":"30","id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1604,"id":1609,"nodeType":"Return","src":"12756:8:10"}},{"assignments":[1612],"declarations":[{"constant":false,"id":1612,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:10","nodeType":"VariableDeclaration","scope":1690,"src":"13235:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1611,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1616,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"13255:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1614,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"13259:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:10"},{"assignments":[1618],"declarations":[{"constant":false,"id":1618,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:10","nodeType":"VariableDeclaration","scope":1690,"src":"13274:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1617,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1620,"initialValue":{"id":1619,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"13288:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:10"},{"assignments":[1622],"declarations":[{"constant":false,"id":1622,"mutability":"mutable","name":"x","nameLocation":"13432:1:10","nodeType":"VariableDeclaration","scope":1690,"src":"13425:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1621,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1624,"initialValue":{"hexValue":"30","id":1623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:10"},{"assignments":[1626],"declarations":[{"constant":false,"id":1626,"mutability":"mutable","name":"y","nameLocation":"13458:1:10","nodeType":"VariableDeclaration","scope":1690,"src":"13451:8:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1625,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1628,"initialValue":{"hexValue":"31","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:10"},{"body":{"id":1665,"nodeType":"Block","src":"13501:882:10","statements":[{"assignments":[1633],"declarations":[{"constant":false,"id":1633,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:10","nodeType":"VariableDeclaration","scope":1665,"src":"13519:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1637,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1634,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"13538:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1635,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"13544:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:10"},{"expression":{"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1638,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"13573:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1639,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"13578:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1640,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1641,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"13678:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1642,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"13923:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1643,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"13929:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1644,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"13941:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1647,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:10","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1649,"nodeType":"ExpressionStatement","src":"13572:395:10"},{"expression":{"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1650,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"13987:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1651,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"13990:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1652,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1653,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"14072:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1654,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"14326:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1655,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"14330:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1658,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"14341:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1656,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:10","typeDescriptions":{}}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1662,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:10","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1664,"nodeType":"ExpressionStatement","src":"13986:382:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1629,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1612,"src":"13485:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1666,"nodeType":"WhileStatement","src":"13478:905:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1667,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1618,"src":"14401:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1672,"nodeType":"IfStatement","src":"14397:22:10","trueBody":{"expression":{"hexValue":"30","id":1670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1604,"id":1671,"nodeType":"Return","src":"14411:8:10"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1674,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"14470:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1677,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1600,"src":"14477:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:10","subExpression":{"id":1680,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"14490:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1678,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:10","typeDescriptions":{}}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1686,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1622,"src":"14502:1:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:10","typeDescriptions":{}}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1673,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"14462:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1604,"id":1689,"nodeType":"Return","src":"14455:50:10"}]}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"12082:553:10","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":1692,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:10","nodeType":"FunctionDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1598,"mutability":"mutable","name":"a","nameLocation":"12664:1:10","nodeType":"VariableDeclaration","scope":1692,"src":"12656:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1597,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"n","nameLocation":"12675:1:10","nodeType":"VariableDeclaration","scope":1692,"src":"12667:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:10"},"returnParameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1692,"src":"12701:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:10"},"scope":2563,"src":"12640:1919:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1712,"nodeType":"Block","src":"15159:82:10","statements":[{"id":1711,"nodeType":"UncheckedBlock","src":"15169:66:10","statements":[{"expression":{"arguments":[{"id":1704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"15212:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1705,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"15215:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1708,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"15222:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1702,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"15200:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2563_$","typeString":"type(library Math)"}},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:10","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1749,"src":"15200:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1701,"id":1710,"nodeType":"Return","src":"15193:31:10"}]}]},"documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"14565:514:10","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:10","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"a","nameLocation":"15113:1:10","nodeType":"VariableDeclaration","scope":1713,"src":"15105:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1694,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1697,"mutability":"mutable","name":"p","nameLocation":"15124:1:10","nodeType":"VariableDeclaration","scope":1713,"src":"15116:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:10"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1713,"src":"15150:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:10"},"scope":2563,"src":"15084:157:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1748,"nodeType":"Block","src":"16011:174:10","statements":[{"assignments":[1726,1728],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"success","nameLocation":"16027:7:10","nodeType":"VariableDeclaration","scope":1748,"src":"16022:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"result","nameLocation":"16044:6:10","nodeType":"VariableDeclaration","scope":1748,"src":"16036:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1734,"initialValue":{"arguments":[{"id":1730,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"16064:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1731,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"16067:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1732,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"16070:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1729,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1773,1855],"referencedDeclaration":1773,"src":"16054:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:10"},{"condition":{"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:10","subExpression":{"id":1735,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"16087:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1745,"nodeType":"IfStatement","src":"16082:74:10","trueBody":{"id":1744,"nodeType":"Block","src":"16096:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":1740,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"16122:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":828,"src":"16122:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1737,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"16110:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":860,"src":"16110:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1743,"nodeType":"ExpressionStatement","src":"16110:35:10"}]}},{"expression":{"id":1746,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"16172:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1724,"id":1747,"nodeType":"Return","src":"16165:13:10"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"15247:678:10","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1749,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:10","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"b","nameLocation":"15954:1:10","nodeType":"VariableDeclaration","scope":1749,"src":"15946:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1718,"mutability":"mutable","name":"e","nameLocation":"15965:1:10","nodeType":"VariableDeclaration","scope":1749,"src":"15957:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"m","nameLocation":"15976:1:10","nodeType":"VariableDeclaration","scope":1749,"src":"15968:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:10"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1749,"src":"16002:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:10"},"scope":2563,"src":"15930:255:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1772,"nodeType":"Block","src":"17039:1493:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1763,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"17053:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1770,"nodeType":"IfStatement","src":"17049:29:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1762,"id":1769,"nodeType":"Return","src":"17061:17:10"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:10","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:10","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:10"},"nodeType":"YulFunctionCall","src":"17138:11:10"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:10","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:10"},"nodeType":"YulFunctionCall","src":"18050:17:10"},"nodeType":"YulExpressionStatement","src":"18050:17:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:10"},"nodeType":"YulFunctionCall","src":"18087:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:10"},"nodeType":"YulFunctionCall","src":"18080:28:10"},"nodeType":"YulExpressionStatement","src":"18080:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:10","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:10"},"nodeType":"YulFunctionCall","src":"18128:14:10"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:10","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:10"},"nodeType":"YulFunctionCall","src":"18121:28:10"},"nodeType":"YulExpressionStatement","src":"18121:28:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:10","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:10"},"nodeType":"YulFunctionCall","src":"18169:14:10"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:10"},"nodeType":"YulFunctionCall","src":"18162:25:10"},"nodeType":"YulExpressionStatement","src":"18162:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:10","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:10"},"nodeType":"YulFunctionCall","src":"18207:14:10"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:10"},"nodeType":"YulFunctionCall","src":"18200:25:10"},"nodeType":"YulExpressionStatement","src":"18200:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:10","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:10"},"nodeType":"YulFunctionCall","src":"18245:14:10"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:10"},"nodeType":"YulFunctionCall","src":"18238:25:10"},"nodeType":"YulExpressionStatement","src":"18238:25:10"},{"nodeType":"YulAssignment","src":"18425:57:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:10"},"nodeType":"YulFunctionCall","src":"18447:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:10","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:10"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:10","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:10","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:10","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:10"},"nodeType":"YulFunctionCall","src":"18436:46:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:10"}]},{"nodeType":"YulAssignment","src":"18495:21:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:10","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:10"},"nodeType":"YulFunctionCall","src":"18505:11:10"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1752,"isOffset":false,"isSlot":false,"src":"18185:1:10","valueSize":1},{"declaration":1754,"isOffset":false,"isSlot":false,"src":"18223:1:10","valueSize":1},{"declaration":1756,"isOffset":false,"isSlot":false,"src":"18261:1:10","valueSize":1},{"declaration":1761,"isOffset":false,"isSlot":false,"src":"18495:6:10","valueSize":1},{"declaration":1759,"isOffset":false,"isSlot":false,"src":"18425:7:10","valueSize":1}],"flags":["memory-safe"],"id":1771,"nodeType":"InlineAssembly","src":"17088:1438:10"}]},"documentation":{"id":1750,"nodeType":"StructuredDocumentation","src":"16191:738:10","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1773,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:10","nodeType":"FunctionDefinition","parameters":{"id":1757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"b","nameLocation":"16961:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"16953:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1751,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1754,"mutability":"mutable","name":"e","nameLocation":"16972:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"16964:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"m","nameLocation":"16983:1:10","nodeType":"VariableDeclaration","scope":1773,"src":"16975:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1755,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:10"},"returnParameters":{"id":1762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"success","nameLocation":"17014:7:10","nodeType":"VariableDeclaration","scope":1773,"src":"17009:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1758,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1761,"mutability":"mutable","name":"result","nameLocation":"17031:6:10","nodeType":"VariableDeclaration","scope":1773,"src":"17023:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:10"},"scope":2563,"src":"16934:1598:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1808,"nodeType":"Block","src":"18729:179:10","statements":[{"assignments":[1786,1788],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"success","nameLocation":"18745:7:10","nodeType":"VariableDeclaration","scope":1808,"src":"18740:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1785,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1788,"mutability":"mutable","name":"result","nameLocation":"18767:6:10","nodeType":"VariableDeclaration","scope":1808,"src":"18754:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1787,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1794,"initialValue":{"arguments":[{"id":1790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"18787:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1791,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"18790:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1792,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1780,"src":"18793:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1789,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1773,1855],"referencedDeclaration":1855,"src":"18777:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:10"},{"condition":{"id":1796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:10","subExpression":{"id":1795,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"18810:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1805,"nodeType":"IfStatement","src":"18805:74:10","trueBody":{"id":1804,"nodeType":"Block","src":"18819:60:10","statements":[{"expression":{"arguments":[{"expression":{"id":1800,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"18845:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:10","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":828,"src":"18845:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1797,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"18833:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$861_$","typeString":"type(library Panic)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:10","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":860,"src":"18833:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1803,"nodeType":"ExpressionStatement","src":"18833:35:10"}]}},{"expression":{"id":1806,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1788,"src":"18895:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1784,"id":1807,"nodeType":"Return","src":"18888:13:10"}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"18538:85:10","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1809,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:10","nodeType":"FunctionDefinition","parameters":{"id":1781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"b","nameLocation":"18657:1:10","nodeType":"VariableDeclaration","scope":1809,"src":"18644:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1775,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1778,"mutability":"mutable","name":"e","nameLocation":"18673:1:10","nodeType":"VariableDeclaration","scope":1809,"src":"18660:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1777,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1780,"mutability":"mutable","name":"m","nameLocation":"18689:1:10","nodeType":"VariableDeclaration","scope":1809,"src":"18676:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1779,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:10"},"returnParameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1809,"src":"18715:12:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1782,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:10"},"scope":2563,"src":"18628:280:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1854,"nodeType":"Block","src":"19162:771:10","statements":[{"condition":{"arguments":[{"id":1824,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"19187:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1823,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1888,"src":"19176:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1833,"nodeType":"IfStatement","src":"19172:47:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1827,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1822,"id":1832,"nodeType":"Return","src":"19191:28:10"}},{"assignments":[1835],"declarations":[{"constant":false,"id":1835,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:10","nodeType":"VariableDeclaration","scope":1854,"src":"19230:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1838,"initialValue":{"expression":{"id":1836,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"19245:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:10","memberName":"length","nodeType":"MemberAccess","src":"19245:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:10"},{"expression":{"id":1851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"19335:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1842,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"19361:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:10","memberName":"length","nodeType":"MemberAccess","src":"19361:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1844,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"19371:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:10","memberName":"length","nodeType":"MemberAccess","src":"19371:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1846,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"19381:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1847,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"19387:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1848,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"19390:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1849,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"19393:1:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1840,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:10","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:10","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1852,"nodeType":"ExpressionStatement","src":"19335:60:10"},{"AST":{"nodeType":"YulBlock","src":"19431:496:10","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:10","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:10"},"nodeType":"YulFunctionCall","src":"19460:17:10"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:10","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:10","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:10"},"nodeType":"YulFunctionCall","src":"19589:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:10","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:10"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:10"},"nodeType":"YulFunctionCall","src":"19611:13:10"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:10"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:10"},"nodeType":"YulFunctionCall","src":"19578:62:10"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:10"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:10"},"nodeType":"YulFunctionCall","src":"19789:20:10"},"nodeType":"YulExpressionStatement","src":"19789:20:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:10","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:10"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:10"},"nodeType":"YulFunctionCall","src":"19898:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:10"},"nodeType":"YulFunctionCall","src":"19885:32:10"},"nodeType":"YulExpressionStatement","src":"19885:32:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1835,"isOffset":false,"isSlot":false,"src":"19635:4:10","valueSize":1},{"declaration":1835,"isOffset":false,"isSlot":false,"src":"19804:4:10","valueSize":1},{"declaration":1835,"isOffset":false,"isSlot":false,"src":"19911:4:10","valueSize":1},{"declaration":1821,"isOffset":false,"isSlot":false,"src":"19464:6:10","valueSize":1},{"declaration":1821,"isOffset":false,"isSlot":false,"src":"19617:6:10","valueSize":1},{"declaration":1821,"isOffset":false,"isSlot":false,"src":"19796:6:10","valueSize":1},{"declaration":1819,"isOffset":false,"isSlot":false,"src":"19567:7:10","valueSize":1}],"flags":["memory-safe"],"id":1853,"nodeType":"InlineAssembly","src":"19406:521:10"}]},"documentation":{"id":1810,"nodeType":"StructuredDocumentation","src":"18914:88:10","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:10","nodeType":"FunctionDefinition","parameters":{"id":1817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"b","nameLocation":"19048:1:10","nodeType":"VariableDeclaration","scope":1855,"src":"19035:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1811,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"e","nameLocation":"19072:1:10","nodeType":"VariableDeclaration","scope":1855,"src":"19059:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1813,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1816,"mutability":"mutable","name":"m","nameLocation":"19096:1:10","nodeType":"VariableDeclaration","scope":1855,"src":"19083:14:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1815,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:10"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1819,"mutability":"mutable","name":"success","nameLocation":"19132:7:10","nodeType":"VariableDeclaration","scope":1855,"src":"19127:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1818,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"result","nameLocation":"19154:6:10","nodeType":"VariableDeclaration","scope":1855,"src":"19141:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1820,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:10"},"scope":2563,"src":"19007:926:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1887,"nodeType":"Block","src":"20088:176:10","statements":[{"body":{"id":1883,"nodeType":"Block","src":"20145:92:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1874,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"20163:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1876,"indexExpression":{"id":1875,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"20173:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1882,"nodeType":"IfStatement","src":"20159:68:10","trueBody":{"id":1881,"nodeType":"Block","src":"20182:45:10","statements":[{"expression":{"hexValue":"66616c7365","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1862,"id":1880,"nodeType":"Return","src":"20200:12:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1867,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"20118:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1868,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"20122:9:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:10","memberName":"length","nodeType":"MemberAccess","src":"20122:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1884,"initializationExpression":{"assignments":[1864],"declarations":[{"constant":false,"id":1864,"mutability":"mutable","name":"i","nameLocation":"20111:1:10","nodeType":"VariableDeclaration","scope":1884,"src":"20103:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1866,"initialValue":{"hexValue":"30","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:10"},"loopExpression":{"expression":{"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:10","subExpression":{"id":1871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"20142:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1873,"nodeType":"ExpressionStatement","src":"20140:3:10"},"nodeType":"ForStatement","src":"20098:139:10"},{"expression":{"hexValue":"74727565","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1862,"id":1886,"nodeType":"Return","src":"20246:11:10"}]},"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"19939:72:10","text":" @dev Returns whether the provided byte array is zero."},"id":1888,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:10","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:10","nodeType":"VariableDeclaration","scope":1888,"src":"20036:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1857,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:10"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1888,"src":"20082:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1860,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:10"},"scope":2563,"src":"20016:248:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2106,"nodeType":"Block","src":"20624:5124:10","statements":[{"id":2105,"nodeType":"UncheckedBlock","src":"20634:5108:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1896,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"20728:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1902,"nodeType":"IfStatement","src":"20724:53:10","trueBody":{"id":1901,"nodeType":"Block","src":"20736:41:10","statements":[{"expression":{"id":1899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"20761:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1895,"id":1900,"nodeType":"Return","src":"20754:8:10"}]}},{"assignments":[1904],"declarations":[{"constant":false,"id":1904,"mutability":"mutable","name":"aa","nameLocation":"21712:2:10","nodeType":"VariableDeclaration","scope":2105,"src":"21704:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1906,"initialValue":{"id":1905,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"21717:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:10"},{"assignments":[1908],"declarations":[{"constant":false,"id":1908,"mutability":"mutable","name":"xn","nameLocation":"21740:2:10","nodeType":"VariableDeclaration","scope":2105,"src":"21732:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1907,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1910,"initialValue":{"hexValue":"31","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1911,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"21765:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1926,"nodeType":"IfStatement","src":"21761:92:10","trueBody":{"id":1925,"nodeType":"Block","src":"21783:70:10","statements":[{"expression":{"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1917,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"21801:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1920,"nodeType":"ExpressionStatement","src":"21801:10:10"},{"expression":{"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1921,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"21829:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1924,"nodeType":"ExpressionStatement","src":"21829:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1927,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"21870:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1930,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1931,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1942,"nodeType":"IfStatement","src":"21866:90:10","trueBody":{"id":1941,"nodeType":"Block","src":"21887:69:10","statements":[{"expression":{"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1933,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"21905:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1936,"nodeType":"ExpressionStatement","src":"21905:9:10"},{"expression":{"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1937,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"21932:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":1938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1940,"nodeType":"ExpressionStatement","src":"21932:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1943,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"21973:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1958,"nodeType":"IfStatement","src":"21969:90:10","trueBody":{"id":1957,"nodeType":"Block","src":"21990:69:10","statements":[{"expression":{"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1949,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"22008:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1952,"nodeType":"ExpressionStatement","src":"22008:9:10"},{"expression":{"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1953,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"22035:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1956,"nodeType":"ExpressionStatement","src":"22035:9:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1959,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"22076:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:10","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1974,"nodeType":"IfStatement","src":"22072:89:10","trueBody":{"id":1973,"nodeType":"Block","src":"22093:68:10","statements":[{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1965,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"22111:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1968,"nodeType":"ExpressionStatement","src":"22111:9:10"},{"expression":{"id":1971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1969,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"22138:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":1970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1972,"nodeType":"ExpressionStatement","src":"22138:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"22178:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1990,"nodeType":"IfStatement","src":"22174:87:10","trueBody":{"id":1989,"nodeType":"Block","src":"22194:67:10","statements":[{"expression":{"id":1983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1981,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"22212:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1984,"nodeType":"ExpressionStatement","src":"22212:8:10"},{"expression":{"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1985,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"22238:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1988,"nodeType":"ExpressionStatement","src":"22238:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"22278:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1995,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2006,"nodeType":"IfStatement","src":"22274:87:10","trueBody":{"id":2005,"nodeType":"Block","src":"22294:67:10","statements":[{"expression":{"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1997,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"22312:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2000,"nodeType":"ExpressionStatement","src":"22312:8:10"},{"expression":{"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2001,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"22338:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2004,"nodeType":"ExpressionStatement","src":"22338:8:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2007,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"22378:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2018,"nodeType":"IfStatement","src":"22374:61:10","trueBody":{"id":2017,"nodeType":"Block","src":"22394:41:10","statements":[{"expression":{"id":2015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2013,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"22412:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2016,"nodeType":"ExpressionStatement","src":"22412:8:10"}]}},{"expression":{"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2019,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"22855:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2021,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"22865:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2027,"nodeType":"ExpressionStatement","src":"22855:18:10"},{"expression":{"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2028,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24760:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2029,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24766:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"24771:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2031,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24775:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2034,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2038,"nodeType":"ExpressionStatement","src":"24760:23:10"},{"expression":{"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2039,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24869:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2040,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24875:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"24880:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2042,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24884:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2045,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2049,"nodeType":"ExpressionStatement","src":"24869:23:10"},{"expression":{"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2050,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24980:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2051,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24986:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2052,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"24991:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2053,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"24995:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2060,"nodeType":"ExpressionStatement","src":"24980:23:10"},{"expression":{"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2061,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25089:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25095:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"25100:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2064,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25104:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2067,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2071,"nodeType":"ExpressionStatement","src":"25089:23:10"},{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2072,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25199:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2073,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25205:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2074,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"25210:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2075,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25214:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2082,"nodeType":"ExpressionStatement","src":"25199:23:10"},{"expression":{"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2083,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25309:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25315:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"25320:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2086,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25324:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2089,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2093,"nodeType":"ExpressionStatement","src":"25309:23:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25698:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25719:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"25724:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2099,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1908,"src":"25728:2:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2095,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"25703:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"25703:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1895,"id":2104,"nodeType":"Return","src":"25691:40:10"}]}]},"documentation":{"id":1889,"nodeType":"StructuredDocumentation","src":"20270:292:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2107,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:10","nodeType":"FunctionDefinition","parameters":{"id":1892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1891,"mutability":"mutable","name":"a","nameLocation":"20589:1:10","nodeType":"VariableDeclaration","scope":2107,"src":"20581:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:10"},"returnParameters":{"id":1895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2107,"src":"20615:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:10"},"scope":2563,"src":"20567:5181:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2140,"nodeType":"Block","src":"25921:171:10","statements":[{"id":2139,"nodeType":"UncheckedBlock","src":"25931:155:10","statements":[{"assignments":[2119],"declarations":[{"constant":false,"id":2119,"mutability":"mutable","name":"result","nameLocation":"25963:6:10","nodeType":"VariableDeclaration","scope":2139,"src":"25955:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2118,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2123,"initialValue":{"arguments":[{"id":2121,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"25977:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2120,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2107,2141],"referencedDeclaration":2107,"src":"25972:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2124,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"26000:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2128,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"26042:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}],"id":2127,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"26025:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"26055:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2131,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2119,"src":"26064:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"26073:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2125,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"26009:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"26009:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2117,"id":2138,"nodeType":"Return","src":"25993:82:10"}]}]},"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"25754:86:10","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2141,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:10","nodeType":"FunctionDefinition","parameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"a","nameLocation":"25867:1:10","nodeType":"VariableDeclaration","scope":2141,"src":"25859:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2113,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:10","nodeType":"VariableDeclaration","scope":2141,"src":"25870:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"},"typeName":{"id":2112,"nodeType":"UserDefinedTypeName","pathNode":{"id":2111,"name":"Rounding","nameLocations":["25870:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"25870:8:10"},"referencedDeclaration":954,"src":"25870:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:10"},"returnParameters":{"id":2117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2141,"src":"25912:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2115,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:10"},"scope":2563,"src":"25845:247:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2231,"nodeType":"Block","src":"26281:2334:10","statements":[{"expression":{"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2149,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26363:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2152,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"26383:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2150,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"26367:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"26367:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2159,"nodeType":"ExpressionStatement","src":"26363:64:10"},{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2160,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26503:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2163,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"26525:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2164,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26530:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2161,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"26508:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"26508:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:10","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2173,"nodeType":"ExpressionStatement","src":"26503:56:10"},{"expression":{"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2174,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26634:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2177,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"26656:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2178,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26661:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2180,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2175,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"26639:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"26639:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:10","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2187,"nodeType":"ExpressionStatement","src":"26634:48:10"},{"expression":{"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2188,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26757:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2191,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"26779:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2192,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26784:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2194,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:10","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2189,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"26762:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"26762:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2201,"nodeType":"ExpressionStatement","src":"26757:44:10"},{"expression":{"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2202,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26874:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2205,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"26896:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2206,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26901:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2208,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2203,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"26879:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"26879:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2215,"nodeType":"ExpressionStatement","src":"26874:42:10"},{"expression":{"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2216,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"26988:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2144,"src":"27010:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2220,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"27015:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2217,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"26993:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"26993:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2229,"nodeType":"ExpressionStatement","src":"26988:41:10"},{"AST":{"nodeType":"YulBlock","src":"28490:119:10","statements":[{"nodeType":"YulAssignment","src":"28504:95:10","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:10"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:10"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:10"},"nodeType":"YulFunctionCall","src":"28520:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:10","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:10"},"nodeType":"YulFunctionCall","src":"28515:83:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:10"},"nodeType":"YulFunctionCall","src":"28509:90:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2147,"isOffset":false,"isSlot":false,"src":"28504:1:10","valueSize":1},{"declaration":2147,"isOffset":false,"isSlot":false,"src":"28512:1:10","valueSize":1},{"declaration":2147,"isOffset":false,"isSlot":false,"src":"28524:1:10","valueSize":1},{"declaration":2144,"isOffset":false,"isSlot":false,"src":"28527:1:10","valueSize":1}],"flags":["memory-safe"],"id":2230,"nodeType":"InlineAssembly","src":"28465:144:10"}]},"documentation":{"id":2142,"nodeType":"StructuredDocumentation","src":"26098:119:10","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2232,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:10","nodeType":"FunctionDefinition","parameters":{"id":2145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2144,"mutability":"mutable","name":"x","nameLocation":"26244:1:10","nodeType":"VariableDeclaration","scope":2232,"src":"26236:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2143,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:10"},"returnParameters":{"id":2148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2147,"mutability":"mutable","name":"r","nameLocation":"26278:1:10","nodeType":"VariableDeclaration","scope":2232,"src":"26270:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2146,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:10"},"scope":2563,"src":"26222:2393:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2265,"nodeType":"Block","src":"28848:175:10","statements":[{"id":2264,"nodeType":"UncheckedBlock","src":"28858:159:10","statements":[{"assignments":[2244],"declarations":[{"constant":false,"id":2244,"mutability":"mutable","name":"result","nameLocation":"28890:6:10","nodeType":"VariableDeclaration","scope":2264,"src":"28882:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2248,"initialValue":{"arguments":[{"id":2246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"28904:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2245,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2232,2266],"referencedDeclaration":2232,"src":"28899:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2249,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"28931:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2253,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"28973:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}],"id":2252,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"28956:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2256,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"28991:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2235,"src":"29000:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2250,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"28940:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"28940:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2242,"id":2263,"nodeType":"Return","src":"28924:82:10"}]}]},"documentation":{"id":2233,"nodeType":"StructuredDocumentation","src":"28621:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2266,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:10","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2235,"mutability":"mutable","name":"value","nameLocation":"28790:5:10","nodeType":"VariableDeclaration","scope":2266,"src":"28782:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2234,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:10","nodeType":"VariableDeclaration","scope":2266,"src":"28797:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"},"typeName":{"id":2237,"nodeType":"UserDefinedTypeName","pathNode":{"id":2236,"name":"Rounding","nameLocations":["28797:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"28797:8:10"},"referencedDeclaration":954,"src":"28797:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:10"},"returnParameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2266,"src":"28839:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:10"},"scope":2563,"src":"28768:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2394,"nodeType":"Block","src":"29216:854:10","statements":[{"assignments":[2275],"declarations":[{"constant":false,"id":2275,"mutability":"mutable","name":"result","nameLocation":"29234:6:10","nodeType":"VariableDeclaration","scope":2394,"src":"29226:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2277,"initialValue":{"hexValue":"30","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:10"},{"id":2391,"nodeType":"UncheckedBlock","src":"29254:787:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29282:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2294,"nodeType":"IfStatement","src":"29278:103:10","trueBody":{"id":2293,"nodeType":"Block","src":"29301:80:10","statements":[{"expression":{"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29319:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2288,"nodeType":"ExpressionStatement","src":"29319:17:10"},{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2289,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"29354:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ExpressionStatement","src":"29354:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29398:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2311,"nodeType":"IfStatement","src":"29394:103:10","trueBody":{"id":2310,"nodeType":"Block","src":"29417:80:10","statements":[{"expression":{"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29435:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2305,"nodeType":"ExpressionStatement","src":"29435:17:10"},{"expression":{"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"29470:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2309,"nodeType":"ExpressionStatement","src":"29470:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29514:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2328,"nodeType":"IfStatement","src":"29510:103:10","trueBody":{"id":2327,"nodeType":"Block","src":"29533:80:10","statements":[{"expression":{"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29551:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2322,"nodeType":"ExpressionStatement","src":"29551:17:10"},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"29586:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"29586:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29630:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2345,"nodeType":"IfStatement","src":"29626:100:10","trueBody":{"id":2344,"nodeType":"Block","src":"29648:78:10","statements":[{"expression":{"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29666:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2339,"nodeType":"ExpressionStatement","src":"29666:16:10"},{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2340,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"29700:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2343,"nodeType":"ExpressionStatement","src":"29700:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29743:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2362,"nodeType":"IfStatement","src":"29739:100:10","trueBody":{"id":2361,"nodeType":"Block","src":"29761:78:10","statements":[{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29779:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"29779:16:10"},{"expression":{"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2357,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"29813:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2360,"nodeType":"ExpressionStatement","src":"29813:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29856:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2379,"nodeType":"IfStatement","src":"29852:100:10","trueBody":{"id":2378,"nodeType":"Block","src":"29874:78:10","statements":[{"expression":{"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29892:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2373,"nodeType":"ExpressionStatement","src":"29892:16:10"},{"expression":{"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2374,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"29926:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2377,"nodeType":"ExpressionStatement","src":"29926:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2269,"src":"29969:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2390,"nodeType":"IfStatement","src":"29965:66:10","trueBody":{"id":2389,"nodeType":"Block","src":"29987:44:10","statements":[{"expression":{"id":2387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2385,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"30005:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2388,"nodeType":"ExpressionStatement","src":"30005:11:10"}]}}]},{"expression":{"id":2392,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"30057:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2273,"id":2393,"nodeType":"Return","src":"30050:13:10"}]},"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"29029:120:10","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2395,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:10","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"value","nameLocation":"29177:5:10","nodeType":"VariableDeclaration","scope":2395,"src":"29169:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:10"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2395,"src":"29207:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2271,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:10"},"scope":2563,"src":"29154:916:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2428,"nodeType":"Block","src":"30305:177:10","statements":[{"id":2427,"nodeType":"UncheckedBlock","src":"30315:161:10","statements":[{"assignments":[2407],"declarations":[{"constant":false,"id":2407,"mutability":"mutable","name":"result","nameLocation":"30347:6:10","nodeType":"VariableDeclaration","scope":2427,"src":"30339:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2411,"initialValue":{"arguments":[{"id":2409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"30362:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2408,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2395,2429],"referencedDeclaration":2395,"src":"30356:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2412,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"30389:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2416,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"30431:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}],"id":2415,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"30414:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"30450:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2398,"src":"30459:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2413,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"30398:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"30398:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2405,"id":2426,"nodeType":"Return","src":"30382:83:10"}]}]},"documentation":{"id":2396,"nodeType":"StructuredDocumentation","src":"30076:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2429,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:10","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"value","nameLocation":"30247:5:10","nodeType":"VariableDeclaration","scope":2429,"src":"30239:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2397,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2401,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:10","nodeType":"VariableDeclaration","scope":2429,"src":"30254:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"},"typeName":{"id":2400,"nodeType":"UserDefinedTypeName","pathNode":{"id":2399,"name":"Rounding","nameLocations":["30254:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"30254:8:10"},"referencedDeclaration":954,"src":"30254:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:10"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2429,"src":"30296:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:10"},"scope":2563,"src":"30224:258:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2505,"nodeType":"Block","src":"30800:675:10","statements":[{"expression":{"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2437,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"30882:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2440,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"30902:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:10","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2438,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"30886:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"30886:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2447,"nodeType":"ExpressionStatement","src":"30882:64:10"},{"expression":{"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2448,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"31022:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2451,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"31044:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2452,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"31049:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:10","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2449,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31027:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"31027:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:10","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2461,"nodeType":"ExpressionStatement","src":"31022:56:10"},{"expression":{"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2462,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"31153:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2465,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"31175:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2466,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"31180:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:10","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2463,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31158:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"31158:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:10","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2475,"nodeType":"ExpressionStatement","src":"31153:48:10"},{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2476,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"31276:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2479,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"31298:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2480,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"31303:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:10","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2477,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31281:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"31281:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"31276:44:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2490,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"31426:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2496,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"31453:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2497,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"31458:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2494,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31436:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"31436:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2436,"id":2504,"nodeType":"Return","src":"31418:50:10"}]},"documentation":{"id":2430,"nodeType":"StructuredDocumentation","src":"30488:246:10","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2506,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:10","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2432,"mutability":"mutable","name":"x","nameLocation":"30763:1:10","nodeType":"VariableDeclaration","scope":2506,"src":"30755:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:10"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"r","nameLocation":"30797:1:10","nodeType":"VariableDeclaration","scope":2506,"src":"30789:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:10"},"scope":2563,"src":"30739:736:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2542,"nodeType":"Block","src":"31712:184:10","statements":[{"id":2541,"nodeType":"UncheckedBlock","src":"31722:168:10","statements":[{"assignments":[2518],"declarations":[{"constant":false,"id":2518,"mutability":"mutable","name":"result","nameLocation":"31754:6:10","nodeType":"VariableDeclaration","scope":2541,"src":"31746:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2517,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2522,"initialValue":{"arguments":[{"id":2520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"31770:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2519,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2506,2543],"referencedDeclaration":2506,"src":"31763:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"31797:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2527,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"31839:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}],"id":2526,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2562,"src":"31822:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$954_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"31858:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2533,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"31873:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2524,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4328,"src":"31806:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4328_$","typeString":"type(library SafeCast)"}},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4327,"src":"31806:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2516,"id":2540,"nodeType":"Return","src":"31790:89:10"}]}]},"documentation":{"id":2507,"nodeType":"StructuredDocumentation","src":"31481:144:10","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2543,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:10","nodeType":"FunctionDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2509,"mutability":"mutable","name":"value","nameLocation":"31654:5:10","nodeType":"VariableDeclaration","scope":2543,"src":"31646:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2512,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:10","nodeType":"VariableDeclaration","scope":2543,"src":"31661:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"},"typeName":{"id":2511,"nodeType":"UserDefinedTypeName","pathNode":{"id":2510,"name":"Rounding","nameLocations":["31661:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"31661:8:10"},"referencedDeclaration":954,"src":"31661:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:10"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2543,"src":"31703:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2514,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:10"},"scope":2563,"src":"31630:266:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2561,"nodeType":"Block","src":"32094:48:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2554,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"32117:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}],"id":2553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2552,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:10","typeDescriptions":{}}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2551,"id":2560,"nodeType":"Return","src":"32104:31:10"}]},"documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"31902:113:10","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2562,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:10","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:10","nodeType":"VariableDeclaration","scope":2562,"src":"32046:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"},"typeName":{"id":2546,"nodeType":"UserDefinedTypeName","pathNode":{"id":2545,"name":"Rounding","nameLocations":["32046:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"32046:8:10"},"referencedDeclaration":954,"src":"32046:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$954","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:10"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2562,"src":"32088:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2549,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:10"},"scope":2563,"src":"32020:122:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2564,"src":"281:31863:10","usedErrors":[],"usedEvents":[]}],"src":"103:32042:10"},"id":10},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4328]},"id":4329,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2565,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"218:550:11","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4328,"linearizedBaseContracts":[4328],"name":"SafeCast","nameLocation":"777:8:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"792:68:11","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":2573,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:11","nodeType":"ErrorDefinition","parameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"bits","nameLocation":"908:4:11","nodeType":"VariableDeclaration","scope":2573,"src":"902:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2568,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"value","nameLocation":"922:5:11","nodeType":"VariableDeclaration","scope":2573,"src":"914:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:11"},"src":"865:64:11"},{"documentation":{"id":2574,"nodeType":"StructuredDocumentation","src":"935:75:11","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":2578,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:11","nodeType":"ErrorDefinition","parameters":{"id":2577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"value","nameLocation":"1056:5:11","nodeType":"VariableDeclaration","scope":2578,"src":"1049:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2575,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:11"},"src":"1015:48:11"},{"documentation":{"id":2579,"nodeType":"StructuredDocumentation","src":"1069:67:11","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2585,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:11","nodeType":"ErrorDefinition","parameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2581,"mutability":"mutable","name":"bits","nameLocation":"1183:4:11","nodeType":"VariableDeclaration","scope":2585,"src":"1177:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2580,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2583,"mutability":"mutable","name":"value","nameLocation":"1196:5:11","nodeType":"VariableDeclaration","scope":2585,"src":"1189:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2582,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:11"},"src":"1141:62:11"},{"documentation":{"id":2586,"nodeType":"StructuredDocumentation","src":"1209:75:11","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2590,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:11","nodeType":"ErrorDefinition","parameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"value","nameLocation":"1331:5:11","nodeType":"VariableDeclaration","scope":2590,"src":"1323:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:11"},"src":"1289:49:11"},{"body":{"id":2617,"nodeType":"Block","src":"1695:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"1709:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2600,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2599,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:11","memberName":"max","nodeType":"MemberAccess","src":"1717:17:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2611,"nodeType":"IfStatement","src":"1705:105:11","trueBody":{"id":2610,"nodeType":"Block","src":"1736:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"1793:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2605,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"1757:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2609,"nodeType":"RevertStatement","src":"1750:49:11"}]}},{"expression":{"arguments":[{"id":2614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"1834:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2612,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:11","typeDescriptions":{}}},"id":2615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2597,"id":2616,"nodeType":"Return","src":"1819:21:11"}]},"documentation":{"id":2591,"nodeType":"StructuredDocumentation","src":"1344:280:11","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2618,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:11","nodeType":"FunctionDefinition","parameters":{"id":2594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2593,"mutability":"mutable","name":"value","nameLocation":"1656:5:11","nodeType":"VariableDeclaration","scope":2618,"src":"1648:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:11"},"returnParameters":{"id":2597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2618,"src":"1686:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2595,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:11","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:11"},"scope":4328,"src":"1629:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2645,"nodeType":"Block","src":"2204:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2218:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2628,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2627,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:11","memberName":"max","nodeType":"MemberAccess","src":"2226:17:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2639,"nodeType":"IfStatement","src":"2214:105:11","trueBody":{"id":2638,"nodeType":"Block","src":"2245:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2302:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2633,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"2266:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2637,"nodeType":"RevertStatement","src":"2259:49:11"}]}},{"expression":{"arguments":[{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"2343:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2640,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:11","typeDescriptions":{}}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2625,"id":2644,"nodeType":"Return","src":"2328:21:11"}]},"documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"1853:280:11","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2646,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:11","nodeType":"FunctionDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"value","nameLocation":"2165:5:11","nodeType":"VariableDeclaration","scope":2646,"src":"2157:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:11"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2646,"src":"2195:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2623,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:11","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:11"},"scope":4328,"src":"2138:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2673,"nodeType":"Block","src":"2713:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"2727:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2656,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2655,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:11","memberName":"max","nodeType":"MemberAccess","src":"2735:17:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2667,"nodeType":"IfStatement","src":"2723:105:11","trueBody":{"id":2666,"nodeType":"Block","src":"2754:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"2811:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2661,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"2775:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2665,"nodeType":"RevertStatement","src":"2768:49:11"}]}},{"expression":{"arguments":[{"id":2670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"2852:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2668,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:11","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2653,"id":2672,"nodeType":"Return","src":"2837:21:11"}]},"documentation":{"id":2647,"nodeType":"StructuredDocumentation","src":"2362:280:11","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2674,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:11","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"value","nameLocation":"2674:5:11","nodeType":"VariableDeclaration","scope":2674,"src":"2666:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:11"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"2704:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2651,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:11","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:11"},"scope":4328,"src":"2647:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2701,"nodeType":"Block","src":"3222:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3236:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2684,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2683,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:11","memberName":"max","nodeType":"MemberAccess","src":"3244:17:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2695,"nodeType":"IfStatement","src":"3232:105:11","trueBody":{"id":2694,"nodeType":"Block","src":"3263:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3320:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2689,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"3284:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2693,"nodeType":"RevertStatement","src":"3277:49:11"}]}},{"expression":{"arguments":[{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"3361:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2696,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:11","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2681,"id":2700,"nodeType":"Return","src":"3346:21:11"}]},"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"2871:280:11","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2702,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:11","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"value","nameLocation":"3183:5:11","nodeType":"VariableDeclaration","scope":2702,"src":"3175:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:11"},"returnParameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2702,"src":"3213:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2679,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:11","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:11"},"scope":4328,"src":"3156:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2729,"nodeType":"Block","src":"3731:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2712,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2711,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:11","memberName":"max","nodeType":"MemberAccess","src":"3753:17:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"nodeType":"IfStatement","src":"3741:105:11","trueBody":{"id":2722,"nodeType":"Block","src":"3772:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"3829:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"3793:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2721,"nodeType":"RevertStatement","src":"3786:49:11"}]}},{"expression":{"arguments":[{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"3870:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2724,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:11","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2709,"id":2728,"nodeType":"Return","src":"3855:21:11"}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"3380:280:11","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2730,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:11","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"value","nameLocation":"3692:5:11","nodeType":"VariableDeclaration","scope":2730,"src":"3684:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:11"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2730,"src":"3722:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2707,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:11","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:11"},"scope":4328,"src":"3665:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2757,"nodeType":"Block","src":"4240:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"4254:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2740,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2739,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:11","memberName":"max","nodeType":"MemberAccess","src":"4262:17:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2751,"nodeType":"IfStatement","src":"4250:105:11","trueBody":{"id":2750,"nodeType":"Block","src":"4281:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"4338:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2745,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"4302:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2749,"nodeType":"RevertStatement","src":"4295:49:11"}]}},{"expression":{"arguments":[{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"4379:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2752,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:11","typeDescriptions":{}}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2737,"id":2756,"nodeType":"Return","src":"4364:21:11"}]},"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"3889:280:11","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:11","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"value","nameLocation":"4201:5:11","nodeType":"VariableDeclaration","scope":2758,"src":"4193:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:11"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2758,"src":"4231:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2735,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:11","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:11"},"scope":4328,"src":"4174:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"4749:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"4763:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2768,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:11","memberName":"max","nodeType":"MemberAccess","src":"4771:17:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2779,"nodeType":"IfStatement","src":"4759:105:11","trueBody":{"id":2778,"nodeType":"Block","src":"4790:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"4847:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2773,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"4811:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2777,"nodeType":"RevertStatement","src":"4804:49:11"}]}},{"expression":{"arguments":[{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"4888:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2780,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:11","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2765,"id":2784,"nodeType":"Return","src":"4873:21:11"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"4398:280:11","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:11","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"value","nameLocation":"4710:5:11","nodeType":"VariableDeclaration","scope":2786,"src":"4702:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:11"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"4740:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2763,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:11","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:11"},"scope":4328,"src":"4683:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2813,"nodeType":"Block","src":"5258:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"5272:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2796,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2795,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:11","memberName":"max","nodeType":"MemberAccess","src":"5280:17:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2807,"nodeType":"IfStatement","src":"5268:105:11","trueBody":{"id":2806,"nodeType":"Block","src":"5299:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"5356:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2801,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"5320:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2805,"nodeType":"RevertStatement","src":"5313:49:11"}]}},{"expression":{"arguments":[{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"5397:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2808,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:11","typeDescriptions":{}}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2793,"id":2812,"nodeType":"Return","src":"5382:21:11"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"4907:280:11","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2814,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:11","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"value","nameLocation":"5219:5:11","nodeType":"VariableDeclaration","scope":2814,"src":"5211:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:11"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2814,"src":"5249:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2791,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:11","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:11"},"scope":4328,"src":"5192:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2841,"nodeType":"Block","src":"5767:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"5781:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2824,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2823,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:11","memberName":"max","nodeType":"MemberAccess","src":"5789:17:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2835,"nodeType":"IfStatement","src":"5777:105:11","trueBody":{"id":2834,"nodeType":"Block","src":"5808:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"5865:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"5829:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2833,"nodeType":"RevertStatement","src":"5822:49:11"}]}},{"expression":{"arguments":[{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"5906:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2836,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:11","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2821,"id":2840,"nodeType":"Return","src":"5891:21:11"}]},"documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"5416:280:11","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2842,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:11","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"value","nameLocation":"5728:5:11","nodeType":"VariableDeclaration","scope":2842,"src":"5720:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:11"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2842,"src":"5758:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2819,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:11","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:11"},"scope":4328,"src":"5701:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"6276:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"6290:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2852,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":2851,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:11","memberName":"max","nodeType":"MemberAccess","src":"6298:17:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2863,"nodeType":"IfStatement","src":"6286:105:11","trueBody":{"id":2862,"nodeType":"Block","src":"6317:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"6374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2857,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"6338:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2861,"nodeType":"RevertStatement","src":"6331:49:11"}]}},{"expression":{"arguments":[{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"6415:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2864,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:11","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":2849,"id":2868,"nodeType":"Return","src":"6400:21:11"}]},"documentation":{"id":2843,"nodeType":"StructuredDocumentation","src":"5925:280:11","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:11","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"value","nameLocation":"6237:5:11","nodeType":"VariableDeclaration","scope":2870,"src":"6229:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:11"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"6267:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":2847,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:11","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:11"},"scope":4328,"src":"6210:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2897,"nodeType":"Block","src":"6785:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"6799:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2880,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":2879,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:11","memberName":"max","nodeType":"MemberAccess","src":"6807:17:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2891,"nodeType":"IfStatement","src":"6795:105:11","trueBody":{"id":2890,"nodeType":"Block","src":"6826:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"6883:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2885,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"6847:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2889,"nodeType":"RevertStatement","src":"6840:49:11"}]}},{"expression":{"arguments":[{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"6924:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2892,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:11","typeDescriptions":{}}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":2877,"id":2896,"nodeType":"Return","src":"6909:21:11"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"6434:280:11","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:11","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"value","nameLocation":"6746:5:11","nodeType":"VariableDeclaration","scope":2898,"src":"6738:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:11"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"6776:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":2875,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:11","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:11"},"scope":4328,"src":"6719:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2925,"nodeType":"Block","src":"7294:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"7308:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2908,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":2907,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:11","memberName":"max","nodeType":"MemberAccess","src":"7316:17:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2919,"nodeType":"IfStatement","src":"7304:105:11","trueBody":{"id":2918,"nodeType":"Block","src":"7335:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"7392:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2913,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"7356:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2917,"nodeType":"RevertStatement","src":"7349:49:11"}]}},{"expression":{"arguments":[{"id":2922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"7433:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2920,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:11","typeDescriptions":{}}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":2905,"id":2924,"nodeType":"Return","src":"7418:21:11"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"6943:280:11","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":2926,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:11","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"value","nameLocation":"7255:5:11","nodeType":"VariableDeclaration","scope":2926,"src":"7247:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:11"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2926,"src":"7285:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2903,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:11","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:11"},"scope":4328,"src":"7228:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2953,"nodeType":"Block","src":"7803:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"7817:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2936,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":2935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:11","memberName":"max","nodeType":"MemberAccess","src":"7825:17:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2947,"nodeType":"IfStatement","src":"7813:105:11","trueBody":{"id":2946,"nodeType":"Block","src":"7844:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":2943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"7901:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2941,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"7865:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2945,"nodeType":"RevertStatement","src":"7858:49:11"}]}},{"expression":{"arguments":[{"id":2950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"7942:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2948,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:11","typeDescriptions":{}}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":2933,"id":2952,"nodeType":"Return","src":"7927:21:11"}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"7452:280:11","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":2954,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:11","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"value","nameLocation":"7764:5:11","nodeType":"VariableDeclaration","scope":2954,"src":"7756:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:11"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2954,"src":"7794:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":2931,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:11","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:11"},"scope":4328,"src":"7737:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2981,"nodeType":"Block","src":"8312:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8326:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2964,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":2963,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:11","memberName":"max","nodeType":"MemberAccess","src":"8334:17:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2975,"nodeType":"IfStatement","src":"8322:105:11","trueBody":{"id":2974,"nodeType":"Block","src":"8353:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8410:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2969,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"8374:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2973,"nodeType":"RevertStatement","src":"8367:49:11"}]}},{"expression":{"arguments":[{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"8451:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2976,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:11","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":2961,"id":2980,"nodeType":"Return","src":"8436:21:11"}]},"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"7961:280:11","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":2982,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:11","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"value","nameLocation":"8273:5:11","nodeType":"VariableDeclaration","scope":2982,"src":"8265:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:11"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2982,"src":"8303:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":2959,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:11","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:11"},"scope":4328,"src":"8246:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3009,"nodeType":"Block","src":"8821:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"8835:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":2992,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":2991,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:11","memberName":"max","nodeType":"MemberAccess","src":"8843:17:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3003,"nodeType":"IfStatement","src":"8831:105:11","trueBody":{"id":3002,"nodeType":"Block","src":"8862:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":2999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"8919:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2997,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"8883:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3001,"nodeType":"RevertStatement","src":"8876:49:11"}]}},{"expression":{"arguments":[{"id":3006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"8960:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3004,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:11","typeDescriptions":{}}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":2989,"id":3008,"nodeType":"Return","src":"8945:21:11"}]},"documentation":{"id":2983,"nodeType":"StructuredDocumentation","src":"8470:280:11","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:11","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"value","nameLocation":"8782:5:11","nodeType":"VariableDeclaration","scope":3010,"src":"8774:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:11"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3010,"src":"8812:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":2987,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:11","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:11"},"scope":4328,"src":"8755:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3037,"nodeType":"Block","src":"9330:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"9344:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3020,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3019,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:11","memberName":"max","nodeType":"MemberAccess","src":"9352:17:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3031,"nodeType":"IfStatement","src":"9340:105:11","trueBody":{"id":3030,"nodeType":"Block","src":"9371:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"9428:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3025,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"9392:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3029,"nodeType":"RevertStatement","src":"9385:49:11"}]}},{"expression":{"arguments":[{"id":3034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"9469:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3032,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:11","typeDescriptions":{}}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3017,"id":3036,"nodeType":"Return","src":"9454:21:11"}]},"documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"8979:280:11","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3038,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:11","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"value","nameLocation":"9291:5:11","nodeType":"VariableDeclaration","scope":3038,"src":"9283:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:11"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3038,"src":"9321:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3015,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:11","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:11"},"scope":4328,"src":"9264:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3065,"nodeType":"Block","src":"9839:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"9853:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3048,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3047,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:11","memberName":"max","nodeType":"MemberAccess","src":"9861:17:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3059,"nodeType":"IfStatement","src":"9849:105:11","trueBody":{"id":3058,"nodeType":"Block","src":"9880:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"9937:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3053,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"9901:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3057,"nodeType":"RevertStatement","src":"9894:49:11"}]}},{"expression":{"arguments":[{"id":3062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"9978:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3060,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:11","typeDescriptions":{}}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3045,"id":3064,"nodeType":"Return","src":"9963:21:11"}]},"documentation":{"id":3039,"nodeType":"StructuredDocumentation","src":"9488:280:11","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3066,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:11","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"value","nameLocation":"9800:5:11","nodeType":"VariableDeclaration","scope":3066,"src":"9792:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:11"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3066,"src":"9830:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3043,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:11","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:11"},"scope":4328,"src":"9773:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"10348:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"10362:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3076,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3075,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:11","memberName":"max","nodeType":"MemberAccess","src":"10370:17:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3087,"nodeType":"IfStatement","src":"10358:105:11","trueBody":{"id":3086,"nodeType":"Block","src":"10389:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"10446:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"10410:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3085,"nodeType":"RevertStatement","src":"10403:49:11"}]}},{"expression":{"arguments":[{"id":3090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"10487:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3088,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:11","typeDescriptions":{}}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3073,"id":3092,"nodeType":"Return","src":"10472:21:11"}]},"documentation":{"id":3067,"nodeType":"StructuredDocumentation","src":"9997:280:11","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:11","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"value","nameLocation":"10309:5:11","nodeType":"VariableDeclaration","scope":3094,"src":"10301:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:11"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"10339:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3071,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:11","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:11"},"scope":4328,"src":"10282:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3121,"nodeType":"Block","src":"10857:152:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"10871:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3104,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3103,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:11","memberName":"max","nodeType":"MemberAccess","src":"10879:17:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3115,"nodeType":"IfStatement","src":"10867:105:11","trueBody":{"id":3114,"nodeType":"Block","src":"10898:74:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"10955:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3109,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"10919:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3113,"nodeType":"RevertStatement","src":"10912:49:11"}]}},{"expression":{"arguments":[{"id":3118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"10996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3116,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:11","typeDescriptions":{}}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3101,"id":3120,"nodeType":"Return","src":"10981:21:11"}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"10506:280:11","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3122,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:11","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"value","nameLocation":"10818:5:11","nodeType":"VariableDeclaration","scope":3122,"src":"10810:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:11"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3122,"src":"10848:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3099,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:11","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:11"},"scope":4328,"src":"10791:218:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3149,"nodeType":"Block","src":"11360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"11374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3132,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:11","memberName":"max","nodeType":"MemberAccess","src":"11382:16:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3143,"nodeType":"IfStatement","src":"11370:103:11","trueBody":{"id":3142,"nodeType":"Block","src":"11400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"11456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3137,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"11421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3141,"nodeType":"RevertStatement","src":"11414:48:11"}]}},{"expression":{"arguments":[{"id":3146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"11496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3144,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:11","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3129,"id":3148,"nodeType":"Return","src":"11482:20:11"}]},"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"11015:276:11","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3150,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"value","nameLocation":"11322:5:11","nodeType":"VariableDeclaration","scope":3150,"src":"11314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:11"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3150,"src":"11352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3127,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:11","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:11"},"scope":4328,"src":"11296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3177,"nodeType":"Block","src":"11860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"11874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3160,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3159,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:11","memberName":"max","nodeType":"MemberAccess","src":"11882:16:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3171,"nodeType":"IfStatement","src":"11870:103:11","trueBody":{"id":3170,"nodeType":"Block","src":"11900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"11956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3165,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"11921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3169,"nodeType":"RevertStatement","src":"11914:48:11"}]}},{"expression":{"arguments":[{"id":3174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"11996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3172,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:11","typeDescriptions":{}}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3157,"id":3176,"nodeType":"Return","src":"11982:20:11"}]},"documentation":{"id":3151,"nodeType":"StructuredDocumentation","src":"11515:276:11","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3178,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"value","nameLocation":"11822:5:11","nodeType":"VariableDeclaration","scope":3178,"src":"11814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:11"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3178,"src":"11852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3155,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:11","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:11"},"scope":4328,"src":"11796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3205,"nodeType":"Block","src":"12360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"12374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3188,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:11","memberName":"max","nodeType":"MemberAccess","src":"12382:16:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3199,"nodeType":"IfStatement","src":"12370:103:11","trueBody":{"id":3198,"nodeType":"Block","src":"12400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"12456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3193,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"12421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3197,"nodeType":"RevertStatement","src":"12414:48:11"}]}},{"expression":{"arguments":[{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"12496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3200,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:11","typeDescriptions":{}}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3185,"id":3204,"nodeType":"Return","src":"12482:20:11"}]},"documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"12015:276:11","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"value","nameLocation":"12322:5:11","nodeType":"VariableDeclaration","scope":3206,"src":"12314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:11"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"12352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3183,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:11","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:11"},"scope":4328,"src":"12296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3233,"nodeType":"Block","src":"12860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"12874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3216,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3215,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:11","memberName":"max","nodeType":"MemberAccess","src":"12882:16:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3227,"nodeType":"IfStatement","src":"12870:103:11","trueBody":{"id":3226,"nodeType":"Block","src":"12900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"12956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3221,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"12921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3225,"nodeType":"RevertStatement","src":"12914:48:11"}]}},{"expression":{"arguments":[{"id":3230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"12996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3228,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:11","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3213,"id":3232,"nodeType":"Return","src":"12982:20:11"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"12515:276:11","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3234,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"value","nameLocation":"12822:5:11","nodeType":"VariableDeclaration","scope":3234,"src":"12814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:11"},"returnParameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3234,"src":"12852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3211,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:11","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:11"},"scope":4328,"src":"12796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3261,"nodeType":"Block","src":"13360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"13374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3244,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3243,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:11","memberName":"max","nodeType":"MemberAccess","src":"13382:16:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3255,"nodeType":"IfStatement","src":"13370:103:11","trueBody":{"id":3254,"nodeType":"Block","src":"13400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"13456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3249,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"13421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3253,"nodeType":"RevertStatement","src":"13414:48:11"}]}},{"expression":{"arguments":[{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"13496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3256,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:11","typeDescriptions":{}}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3241,"id":3260,"nodeType":"Return","src":"13482:20:11"}]},"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"13015:276:11","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3262,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"value","nameLocation":"13322:5:11","nodeType":"VariableDeclaration","scope":3262,"src":"13314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:11"},"returnParameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3262,"src":"13352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3239,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:11","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:11"},"scope":4328,"src":"13296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"13860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"13874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3272,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:11","memberName":"max","nodeType":"MemberAccess","src":"13882:16:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"nodeType":"IfStatement","src":"13870:103:11","trueBody":{"id":3282,"nodeType":"Block","src":"13900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"13956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3277,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"13921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3281,"nodeType":"RevertStatement","src":"13914:48:11"}]}},{"expression":{"arguments":[{"id":3286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"13996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3284,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:11","typeDescriptions":{}}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3269,"id":3288,"nodeType":"Return","src":"13982:20:11"}]},"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"13515:276:11","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"value","nameLocation":"13822:5:11","nodeType":"VariableDeclaration","scope":3290,"src":"13814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:11"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"13852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3267,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:11","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:11"},"scope":4328,"src":"13796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3317,"nodeType":"Block","src":"14360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"14374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3300,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3299,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:11","memberName":"max","nodeType":"MemberAccess","src":"14382:16:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3311,"nodeType":"IfStatement","src":"14370:103:11","trueBody":{"id":3310,"nodeType":"Block","src":"14400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"14456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3305,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"14421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3309,"nodeType":"RevertStatement","src":"14414:48:11"}]}},{"expression":{"arguments":[{"id":3314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"14496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3312,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:11","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3297,"id":3316,"nodeType":"Return","src":"14482:20:11"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"14015:276:11","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3318,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"value","nameLocation":"14322:5:11","nodeType":"VariableDeclaration","scope":3318,"src":"14314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:11"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3318,"src":"14352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3295,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:11","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:11"},"scope":4328,"src":"14296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"14860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"14874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3328,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3327,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:11","memberName":"max","nodeType":"MemberAccess","src":"14882:16:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3339,"nodeType":"IfStatement","src":"14870:103:11","trueBody":{"id":3338,"nodeType":"Block","src":"14900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"14956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3333,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"14921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3337,"nodeType":"RevertStatement","src":"14914:48:11"}]}},{"expression":{"arguments":[{"id":3342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"14996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3340,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:11","typeDescriptions":{}}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3325,"id":3344,"nodeType":"Return","src":"14982:20:11"}]},"documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"14515:276:11","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"value","nameLocation":"14822:5:11","nodeType":"VariableDeclaration","scope":3346,"src":"14814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:11"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"14852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3323,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:11","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:11"},"scope":4328,"src":"14796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3373,"nodeType":"Block","src":"15360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"15374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3356,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3355,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:11","memberName":"max","nodeType":"MemberAccess","src":"15382:16:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3367,"nodeType":"IfStatement","src":"15370:103:11","trueBody":{"id":3366,"nodeType":"Block","src":"15400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"15456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3361,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"15421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3365,"nodeType":"RevertStatement","src":"15414:48:11"}]}},{"expression":{"arguments":[{"id":3370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"15496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3368,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:11","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3353,"id":3372,"nodeType":"Return","src":"15482:20:11"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"15015:276:11","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3374,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"value","nameLocation":"15322:5:11","nodeType":"VariableDeclaration","scope":3374,"src":"15314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:11"},"returnParameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3374,"src":"15352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3351,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:11","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:11"},"scope":4328,"src":"15296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"15860:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15874:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3384,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:11","memberName":"max","nodeType":"MemberAccess","src":"15882:16:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"15870:103:11","trueBody":{"id":3394,"nodeType":"Block","src":"15900:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15956:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3389,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"15921:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3393,"nodeType":"RevertStatement","src":"15914:48:11"}]}},{"expression":{"arguments":[{"id":3398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15996:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3396,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:11","typeDescriptions":{}}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3381,"id":3400,"nodeType":"Return","src":"15982:20:11"}]},"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"15515:276:11","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:11","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"value","nameLocation":"15822:5:11","nodeType":"VariableDeclaration","scope":3402,"src":"15814:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:11"},"returnParameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"15852:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3379,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:11"},"scope":4328,"src":"15796:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3429,"nodeType":"Block","src":"16360:149:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"16374:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3412,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:11","memberName":"max","nodeType":"MemberAccess","src":"16382:16:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"IfStatement","src":"16370:103:11","trueBody":{"id":3422,"nodeType":"Block","src":"16400:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"16456:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3417,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"16421:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3421,"nodeType":"RevertStatement","src":"16414:48:11"}]}},{"expression":{"arguments":[{"id":3426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"16496:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3424,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:11","typeDescriptions":{}}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3409,"id":3428,"nodeType":"Return","src":"16482:20:11"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"16015:276:11","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:11","nodeType":"FunctionDefinition","parameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"value","nameLocation":"16322:5:11","nodeType":"VariableDeclaration","scope":3430,"src":"16314:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:11"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3430,"src":"16352:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3407,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:11","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:11"},"scope":4328,"src":"16296:213:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3457,"nodeType":"Block","src":"16854:146:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"16868:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3440,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3439,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:11","memberName":"max","nodeType":"MemberAccess","src":"16876:15:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3451,"nodeType":"IfStatement","src":"16864:101:11","trueBody":{"id":3450,"nodeType":"Block","src":"16893:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"16948:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3445,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"16914:30:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3449,"nodeType":"RevertStatement","src":"16907:47:11"}]}},{"expression":{"arguments":[{"id":3454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"16987:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3452,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:11","typeDescriptions":{}}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3437,"id":3456,"nodeType":"Return","src":"16974:19:11"}]},"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"16515:272:11","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3458,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:11","nodeType":"FunctionDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"value","nameLocation":"16817:5:11","nodeType":"VariableDeclaration","scope":3458,"src":"16809:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:11"},"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3458,"src":"16847:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3435,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:11"},"scope":4328,"src":"16792:208:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"17236:128:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"17250:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3474,"nodeType":"IfStatement","src":"17246:81:11","trueBody":{"id":3473,"nodeType":"Block","src":"17261:66:11","statements":[{"errorCall":{"arguments":[{"id":3470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"17310:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3469,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2578,"src":"17282:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3472,"nodeType":"RevertStatement","src":"17275:41:11"}]}},{"expression":{"arguments":[{"id":3477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"17351:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3476,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3475,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:11","typeDescriptions":{}}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3465,"id":3479,"nodeType":"Return","src":"17336:21:11"}]},"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"17006:160:11","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:11","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"value","nameLocation":"17197:5:11","nodeType":"VariableDeclaration","scope":3481,"src":"17190:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3460,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:11"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"17227:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:11"},"scope":4328,"src":"17171:193:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3506,"nodeType":"Block","src":"17761:150:11","statements":[{"expression":{"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3489,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"17771:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"17791:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3490,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:11","typeDescriptions":{}}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3495,"nodeType":"ExpressionStatement","src":"17771:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"17811:10:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"17825:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3505,"nodeType":"IfStatement","src":"17807:98:11","trueBody":{"id":3504,"nodeType":"Block","src":"17832:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:11","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3501,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"17888:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3499,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"17853:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3503,"nodeType":"RevertStatement","src":"17846:48:11"}]}}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"17370:312:11","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3507,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:11","nodeType":"FunctionDefinition","parameters":{"id":3485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"value","nameLocation":"17712:5:11","nodeType":"VariableDeclaration","scope":3507,"src":"17705:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3483,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:11"},"returnParameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3487,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:11","nodeType":"VariableDeclaration","scope":3507,"src":"17742:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3486,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:11","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:11"},"scope":4328,"src":"17687:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3532,"nodeType":"Block","src":"18308:150:11","statements":[{"expression":{"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3515,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"18318:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"18338:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3516,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:11","typeDescriptions":{}}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3521,"nodeType":"ExpressionStatement","src":"18318:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3513,"src":"18358:10:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"18372:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3531,"nodeType":"IfStatement","src":"18354:98:11","trueBody":{"id":3530,"nodeType":"Block","src":"18379:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:11","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"18435:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3525,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"18400:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3529,"nodeType":"RevertStatement","src":"18393:48:11"}]}}]},"documentation":{"id":3508,"nodeType":"StructuredDocumentation","src":"17917:312:11","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3533,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:11","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3510,"mutability":"mutable","name":"value","nameLocation":"18259:5:11","nodeType":"VariableDeclaration","scope":3533,"src":"18252:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3509,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:11"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:11","nodeType":"VariableDeclaration","scope":3533,"src":"18289:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3512,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:11","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:11"},"scope":4328,"src":"18234:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3558,"nodeType":"Block","src":"18855:150:11","statements":[{"expression":{"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3541,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"18865:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"18885:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":3542,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:11","typeDescriptions":{}}},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":3547,"nodeType":"ExpressionStatement","src":"18865:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3548,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3539,"src":"18905:10:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"18919:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3557,"nodeType":"IfStatement","src":"18901:98:11","trueBody":{"id":3556,"nodeType":"Block","src":"18926:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:11","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3553,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"18982:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3551,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"18947:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3555,"nodeType":"RevertStatement","src":"18940:48:11"}]}}]},"documentation":{"id":3534,"nodeType":"StructuredDocumentation","src":"18464:312:11","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3559,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:11","nodeType":"FunctionDefinition","parameters":{"id":3537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"value","nameLocation":"18806:5:11","nodeType":"VariableDeclaration","scope":3559,"src":"18799:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3535,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:11"},"returnParameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:11","nodeType":"VariableDeclaration","scope":3559,"src":"18836:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3538,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:11","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:11"},"scope":4328,"src":"18781:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3584,"nodeType":"Block","src":"19402:150:11","statements":[{"expression":{"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"19412:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"19432:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":3568,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:11","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":3573,"nodeType":"ExpressionStatement","src":"19412:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3574,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"19452:10:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"19466:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3583,"nodeType":"IfStatement","src":"19448:98:11","trueBody":{"id":3582,"nodeType":"Block","src":"19473:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:11","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"19529:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3577,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"19494:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3581,"nodeType":"RevertStatement","src":"19487:48:11"}]}}]},"documentation":{"id":3560,"nodeType":"StructuredDocumentation","src":"19011:312:11","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3585,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:11","nodeType":"FunctionDefinition","parameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"value","nameLocation":"19353:5:11","nodeType":"VariableDeclaration","scope":3585,"src":"19346:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3561,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:11"},"returnParameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:11","nodeType":"VariableDeclaration","scope":3585,"src":"19383:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":3564,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:11","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:11"},"scope":4328,"src":"19328:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3610,"nodeType":"Block","src":"19949:150:11","statements":[{"expression":{"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3593,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"19959:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"19979:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3594,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:11","typeDescriptions":{}}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3599,"nodeType":"ExpressionStatement","src":"19959:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3600,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"19999:10:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"20013:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3609,"nodeType":"IfStatement","src":"19995:98:11","trueBody":{"id":3608,"nodeType":"Block","src":"20020:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:11","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"20076:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3603,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"20041:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3607,"nodeType":"RevertStatement","src":"20034:48:11"}]}}]},"documentation":{"id":3586,"nodeType":"StructuredDocumentation","src":"19558:312:11","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3611,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:11","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3588,"mutability":"mutable","name":"value","nameLocation":"19900:5:11","nodeType":"VariableDeclaration","scope":3611,"src":"19893:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3587,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:11"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:11","nodeType":"VariableDeclaration","scope":3611,"src":"19930:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3590,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:11","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:11"},"scope":4328,"src":"19875:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3636,"nodeType":"Block","src":"20496:150:11","statements":[{"expression":{"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3619,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"20506:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"20526:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3620,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:11","typeDescriptions":{}}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3625,"nodeType":"ExpressionStatement","src":"20506:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3626,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"20546:10:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"20560:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3635,"nodeType":"IfStatement","src":"20542:98:11","trueBody":{"id":3634,"nodeType":"Block","src":"20567:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:11","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"20623:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3629,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"20588:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3633,"nodeType":"RevertStatement","src":"20581:48:11"}]}}]},"documentation":{"id":3612,"nodeType":"StructuredDocumentation","src":"20105:312:11","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3637,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:11","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"value","nameLocation":"20447:5:11","nodeType":"VariableDeclaration","scope":3637,"src":"20440:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3613,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:11"},"returnParameters":{"id":3618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:11","nodeType":"VariableDeclaration","scope":3637,"src":"20477:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3616,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:11","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:11"},"scope":4328,"src":"20422:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3662,"nodeType":"Block","src":"21043:150:11","statements":[{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3645,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"21053:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"21073:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3646,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:11","typeDescriptions":{}}},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3651,"nodeType":"ExpressionStatement","src":"21053:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"21093:10:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3653,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"21107:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3661,"nodeType":"IfStatement","src":"21089:98:11","trueBody":{"id":3660,"nodeType":"Block","src":"21114:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:11","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"21170:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3655,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"21135:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3659,"nodeType":"RevertStatement","src":"21128:48:11"}]}}]},"documentation":{"id":3638,"nodeType":"StructuredDocumentation","src":"20652:312:11","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3663,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:11","nodeType":"FunctionDefinition","parameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3640,"mutability":"mutable","name":"value","nameLocation":"20994:5:11","nodeType":"VariableDeclaration","scope":3663,"src":"20987:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3639,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:11"},"returnParameters":{"id":3644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3643,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:11","nodeType":"VariableDeclaration","scope":3663,"src":"21024:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3642,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:11","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:11"},"scope":4328,"src":"20969:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3688,"nodeType":"Block","src":"21590:150:11","statements":[{"expression":{"id":3676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3671,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"21600:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"21620:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3672,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:11","typeDescriptions":{}}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3677,"nodeType":"ExpressionStatement","src":"21600:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3680,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3678,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3669,"src":"21640:10:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"21654:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3687,"nodeType":"IfStatement","src":"21636:98:11","trueBody":{"id":3686,"nodeType":"Block","src":"21661:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:11","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"21717:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3681,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"21682:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3685,"nodeType":"RevertStatement","src":"21675:48:11"}]}}]},"documentation":{"id":3664,"nodeType":"StructuredDocumentation","src":"21199:312:11","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3689,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:11","nodeType":"FunctionDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3666,"mutability":"mutable","name":"value","nameLocation":"21541:5:11","nodeType":"VariableDeclaration","scope":3689,"src":"21534:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3665,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:11"},"returnParameters":{"id":3670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:11","nodeType":"VariableDeclaration","scope":3689,"src":"21571:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3668,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:11","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:11"},"scope":4328,"src":"21516:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3714,"nodeType":"Block","src":"22137:150:11","statements":[{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"22147:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"22167:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3698,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:11","typeDescriptions":{}}},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3703,"nodeType":"ExpressionStatement","src":"22147:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3695,"src":"22187:10:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"22201:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3713,"nodeType":"IfStatement","src":"22183:98:11","trueBody":{"id":3712,"nodeType":"Block","src":"22208:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:11","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"22264:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3707,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"22229:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3711,"nodeType":"RevertStatement","src":"22222:48:11"}]}}]},"documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"21746:312:11","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3715,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:11","nodeType":"FunctionDefinition","parameters":{"id":3693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"value","nameLocation":"22088:5:11","nodeType":"VariableDeclaration","scope":3715,"src":"22081:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3691,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:11"},"returnParameters":{"id":3696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3695,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:11","nodeType":"VariableDeclaration","scope":3715,"src":"22118:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3694,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:11","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:11"},"scope":4328,"src":"22063:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3740,"nodeType":"Block","src":"22684:150:11","statements":[{"expression":{"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3723,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"22694:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"22714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3724,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:11","typeDescriptions":{}}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3729,"nodeType":"ExpressionStatement","src":"22694:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3730,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3721,"src":"22734:10:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"22748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3739,"nodeType":"IfStatement","src":"22730:98:11","trueBody":{"id":3738,"nodeType":"Block","src":"22755:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:11","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3718,"src":"22811:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3733,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"22776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3737,"nodeType":"RevertStatement","src":"22769:48:11"}]}}]},"documentation":{"id":3716,"nodeType":"StructuredDocumentation","src":"22293:312:11","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3741,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:11","nodeType":"FunctionDefinition","parameters":{"id":3719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3718,"mutability":"mutable","name":"value","nameLocation":"22635:5:11","nodeType":"VariableDeclaration","scope":3741,"src":"22628:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3717,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:11"},"returnParameters":{"id":3722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3721,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:11","nodeType":"VariableDeclaration","scope":3741,"src":"22665:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3720,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:11","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:11"},"scope":4328,"src":"22610:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3766,"nodeType":"Block","src":"23231:150:11","statements":[{"expression":{"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"23241:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"23261:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3750,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:11","typeDescriptions":{}}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3755,"nodeType":"ExpressionStatement","src":"23241:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3756,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"23281:10:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"23295:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3765,"nodeType":"IfStatement","src":"23277:98:11","trueBody":{"id":3764,"nodeType":"Block","src":"23302:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:11","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3744,"src":"23358:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3759,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"23323:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3763,"nodeType":"RevertStatement","src":"23316:48:11"}]}}]},"documentation":{"id":3742,"nodeType":"StructuredDocumentation","src":"22840:312:11","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3767,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:11","nodeType":"FunctionDefinition","parameters":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3744,"mutability":"mutable","name":"value","nameLocation":"23182:5:11","nodeType":"VariableDeclaration","scope":3767,"src":"23175:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3743,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:11"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:11","nodeType":"VariableDeclaration","scope":3767,"src":"23212:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3746,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:11","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:11"},"scope":4328,"src":"23157:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3792,"nodeType":"Block","src":"23778:150:11","statements":[{"expression":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"23788:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"23808:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3776,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:11","typeDescriptions":{}}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3781,"nodeType":"ExpressionStatement","src":"23788:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3782,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3773,"src":"23828:10:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"23842:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3791,"nodeType":"IfStatement","src":"23824:98:11","trueBody":{"id":3790,"nodeType":"Block","src":"23849:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:11","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"23905:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3785,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"23870:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3789,"nodeType":"RevertStatement","src":"23863:48:11"}]}}]},"documentation":{"id":3768,"nodeType":"StructuredDocumentation","src":"23387:312:11","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3793,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:11","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3770,"mutability":"mutable","name":"value","nameLocation":"23729:5:11","nodeType":"VariableDeclaration","scope":3793,"src":"23722:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3769,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:11"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:11","nodeType":"VariableDeclaration","scope":3793,"src":"23759:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3772,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:11","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:11"},"scope":4328,"src":"23704:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3818,"nodeType":"Block","src":"24325:150:11","statements":[{"expression":{"id":3806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3801,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"24335:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"24355:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":3802,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:11","typeDescriptions":{}}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":3807,"nodeType":"ExpressionStatement","src":"24335:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3808,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3799,"src":"24375:10:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"24389:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3817,"nodeType":"IfStatement","src":"24371:98:11","trueBody":{"id":3816,"nodeType":"Block","src":"24396:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:11","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3796,"src":"24452:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3811,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"24417:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"RevertStatement","src":"24410:48:11"}]}}]},"documentation":{"id":3794,"nodeType":"StructuredDocumentation","src":"23934:312:11","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3819,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:11","nodeType":"FunctionDefinition","parameters":{"id":3797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"value","nameLocation":"24276:5:11","nodeType":"VariableDeclaration","scope":3819,"src":"24269:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3795,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:11"},"returnParameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3799,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:11","nodeType":"VariableDeclaration","scope":3819,"src":"24306:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3798,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:11","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:11"},"scope":4328,"src":"24251:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3844,"nodeType":"Block","src":"24872:150:11","statements":[{"expression":{"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3827,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"24882:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"24902:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":3828,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:11","typeDescriptions":{}}},"id":3831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":3833,"nodeType":"ExpressionStatement","src":"24882:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3834,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"24922:10:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"24936:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3843,"nodeType":"IfStatement","src":"24918:98:11","trueBody":{"id":3842,"nodeType":"Block","src":"24943:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:11","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"24999:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3837,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"24964:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3841,"nodeType":"RevertStatement","src":"24957:48:11"}]}}]},"documentation":{"id":3820,"nodeType":"StructuredDocumentation","src":"24481:312:11","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3845,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:11","nodeType":"FunctionDefinition","parameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"value","nameLocation":"24823:5:11","nodeType":"VariableDeclaration","scope":3845,"src":"24816:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3821,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:11"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:11","nodeType":"VariableDeclaration","scope":3845,"src":"24853:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":3824,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:11","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:11"},"scope":4328,"src":"24798:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3870,"nodeType":"Block","src":"25419:150:11","statements":[{"expression":{"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3853,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"25429:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"25449:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":3854,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:11","typeDescriptions":{}}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":3859,"nodeType":"ExpressionStatement","src":"25429:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3860,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3851,"src":"25469:10:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"25483:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3869,"nodeType":"IfStatement","src":"25465:98:11","trueBody":{"id":3868,"nodeType":"Block","src":"25490:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:11","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"25546:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3863,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"25511:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3867,"nodeType":"RevertStatement","src":"25504:48:11"}]}}]},"documentation":{"id":3846,"nodeType":"StructuredDocumentation","src":"25028:312:11","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3871,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:11","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3848,"mutability":"mutable","name":"value","nameLocation":"25370:5:11","nodeType":"VariableDeclaration","scope":3871,"src":"25363:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3847,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:11"},"returnParameters":{"id":3852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3851,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:11","nodeType":"VariableDeclaration","scope":3871,"src":"25400:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":3850,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:11","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:11"},"scope":4328,"src":"25345:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3896,"nodeType":"Block","src":"25966:150:11","statements":[{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3879,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"25976:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"25996:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":3880,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:11","typeDescriptions":{}}},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3885,"nodeType":"ExpressionStatement","src":"25976:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3886,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"26016:10:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"26030:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3895,"nodeType":"IfStatement","src":"26012:98:11","trueBody":{"id":3894,"nodeType":"Block","src":"26037:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:11","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"26093:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3889,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"26058:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3893,"nodeType":"RevertStatement","src":"26051:48:11"}]}}]},"documentation":{"id":3872,"nodeType":"StructuredDocumentation","src":"25575:312:11","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3897,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:11","nodeType":"FunctionDefinition","parameters":{"id":3875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3874,"mutability":"mutable","name":"value","nameLocation":"25917:5:11","nodeType":"VariableDeclaration","scope":3897,"src":"25910:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3873,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:11"},"returnParameters":{"id":3878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:11","nodeType":"VariableDeclaration","scope":3897,"src":"25947:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3876,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:11","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:11"},"scope":4328,"src":"25892:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3922,"nodeType":"Block","src":"26513:150:11","statements":[{"expression":{"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3905,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"26523:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"26543:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":3906,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:11","typeDescriptions":{}}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":3911,"nodeType":"ExpressionStatement","src":"26523:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3912,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"26563:10:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"26577:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3921,"nodeType":"IfStatement","src":"26559:98:11","trueBody":{"id":3920,"nodeType":"Block","src":"26584:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:11","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"26640:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3915,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"26605:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3919,"nodeType":"RevertStatement","src":"26598:48:11"}]}}]},"documentation":{"id":3898,"nodeType":"StructuredDocumentation","src":"26122:312:11","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3923,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:11","nodeType":"FunctionDefinition","parameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"value","nameLocation":"26464:5:11","nodeType":"VariableDeclaration","scope":3923,"src":"26457:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3899,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:11"},"returnParameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:11","nodeType":"VariableDeclaration","scope":3923,"src":"26494:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":3902,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:11","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:11"},"scope":4328,"src":"26439:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3948,"nodeType":"Block","src":"27060:150:11","statements":[{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3931,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"27070:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"27090:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":3932,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:11","typeDescriptions":{}}},"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":3937,"nodeType":"ExpressionStatement","src":"27070:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"27110:10:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"27124:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3947,"nodeType":"IfStatement","src":"27106:98:11","trueBody":{"id":3946,"nodeType":"Block","src":"27131:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:11","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"27187:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3941,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"27152:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3945,"nodeType":"RevertStatement","src":"27145:48:11"}]}}]},"documentation":{"id":3924,"nodeType":"StructuredDocumentation","src":"26669:312:11","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3949,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:11","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"value","nameLocation":"27011:5:11","nodeType":"VariableDeclaration","scope":3949,"src":"27004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3925,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:11"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:11","nodeType":"VariableDeclaration","scope":3949,"src":"27041:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":3928,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:11","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:11"},"scope":4328,"src":"26986:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3974,"nodeType":"Block","src":"27607:150:11","statements":[{"expression":{"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"27617:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"27637:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":3958,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:11","typeDescriptions":{}}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":3963,"nodeType":"ExpressionStatement","src":"27617:26:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"27657:10:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"27671:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3973,"nodeType":"IfStatement","src":"27653:98:11","trueBody":{"id":3972,"nodeType":"Block","src":"27678:73:11","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:11","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3952,"src":"27734:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3967,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"27699:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3971,"nodeType":"RevertStatement","src":"27692:48:11"}]}}]},"documentation":{"id":3950,"nodeType":"StructuredDocumentation","src":"27216:312:11","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3975,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:11","nodeType":"FunctionDefinition","parameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"value","nameLocation":"27558:5:11","nodeType":"VariableDeclaration","scope":3975,"src":"27551:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3951,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:11"},"returnParameters":{"id":3956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:11","nodeType":"VariableDeclaration","scope":3975,"src":"27588:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":3954,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:11","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:11"},"scope":4328,"src":"27533:224:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4000,"nodeType":"Block","src":"28147:148:11","statements":[{"expression":{"id":3988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3983,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"28157:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"28176:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":3984,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:11","typeDescriptions":{}}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":3989,"nodeType":"ExpressionStatement","src":"28157:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"28196:10:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"28210:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3999,"nodeType":"IfStatement","src":"28192:97:11","trueBody":{"id":3998,"nodeType":"Block","src":"28217:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:11","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3978,"src":"28272:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3993,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"28238:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":3996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3997,"nodeType":"RevertStatement","src":"28231:47:11"}]}}]},"documentation":{"id":3976,"nodeType":"StructuredDocumentation","src":"27763:307:11","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4001,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:11","nodeType":"FunctionDefinition","parameters":{"id":3979,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3978,"mutability":"mutable","name":"value","nameLocation":"28099:5:11","nodeType":"VariableDeclaration","scope":4001,"src":"28092:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3977,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:11"},"returnParameters":{"id":3982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:11","nodeType":"VariableDeclaration","scope":4001,"src":"28129:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":3980,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:11","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:11"},"scope":4328,"src":"28075:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4026,"nodeType":"Block","src":"28685:148:11","statements":[{"expression":{"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4009,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"28695:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"28714:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4010,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:11","typeDescriptions":{}}},"id":4013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4015,"nodeType":"ExpressionStatement","src":"28695:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"28734:10:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"28748:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4025,"nodeType":"IfStatement","src":"28730:97:11","trueBody":{"id":4024,"nodeType":"Block","src":"28755:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:11","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"28810:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4019,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"28776:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4023,"nodeType":"RevertStatement","src":"28769:47:11"}]}}]},"documentation":{"id":4002,"nodeType":"StructuredDocumentation","src":"28301:307:11","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4027,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:11","nodeType":"FunctionDefinition","parameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"value","nameLocation":"28637:5:11","nodeType":"VariableDeclaration","scope":4027,"src":"28630:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4003,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:11"},"returnParameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:11","nodeType":"VariableDeclaration","scope":4027,"src":"28667:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4006,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:11","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:11"},"scope":4328,"src":"28613:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4052,"nodeType":"Block","src":"29223:148:11","statements":[{"expression":{"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"29233:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"29252:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4036,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:11","typeDescriptions":{}}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4041,"nodeType":"ExpressionStatement","src":"29233:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"29272:10:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"29286:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4051,"nodeType":"IfStatement","src":"29268:97:11","trueBody":{"id":4050,"nodeType":"Block","src":"29293:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:11","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4030,"src":"29348:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4045,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"29314:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4049,"nodeType":"RevertStatement","src":"29307:47:11"}]}}]},"documentation":{"id":4028,"nodeType":"StructuredDocumentation","src":"28839:307:11","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4053,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:11","nodeType":"FunctionDefinition","parameters":{"id":4031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4030,"mutability":"mutable","name":"value","nameLocation":"29175:5:11","nodeType":"VariableDeclaration","scope":4053,"src":"29168:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4029,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:11"},"returnParameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4033,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:11","nodeType":"VariableDeclaration","scope":4053,"src":"29205:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4032,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:11","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:11"},"scope":4328,"src":"29151:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4078,"nodeType":"Block","src":"29761:148:11","statements":[{"expression":{"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4061,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"29771:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"29790:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4062,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:11","typeDescriptions":{}}},"id":4065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4067,"nodeType":"ExpressionStatement","src":"29771:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"29810:10:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"29824:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4077,"nodeType":"IfStatement","src":"29806:97:11","trueBody":{"id":4076,"nodeType":"Block","src":"29831:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:11","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"29886:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4071,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"29852:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4075,"nodeType":"RevertStatement","src":"29845:47:11"}]}}]},"documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"29377:307:11","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4079,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:11","nodeType":"FunctionDefinition","parameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"value","nameLocation":"29713:5:11","nodeType":"VariableDeclaration","scope":4079,"src":"29706:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4055,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:11"},"returnParameters":{"id":4060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4059,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:11","nodeType":"VariableDeclaration","scope":4079,"src":"29743:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4058,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:11","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:11"},"scope":4328,"src":"29689:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4104,"nodeType":"Block","src":"30299:148:11","statements":[{"expression":{"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"30309:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"30328:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4088,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:11","typeDescriptions":{}}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4093,"nodeType":"ExpressionStatement","src":"30309:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"30348:10:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"30362:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4103,"nodeType":"IfStatement","src":"30344:97:11","trueBody":{"id":4102,"nodeType":"Block","src":"30369:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:11","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4082,"src":"30424:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4097,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"30390:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4101,"nodeType":"RevertStatement","src":"30383:47:11"}]}}]},"documentation":{"id":4080,"nodeType":"StructuredDocumentation","src":"29915:307:11","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4105,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:11","nodeType":"FunctionDefinition","parameters":{"id":4083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4082,"mutability":"mutable","name":"value","nameLocation":"30251:5:11","nodeType":"VariableDeclaration","scope":4105,"src":"30244:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4081,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:11"},"returnParameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:11","nodeType":"VariableDeclaration","scope":4105,"src":"30281:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4084,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:11","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:11"},"scope":4328,"src":"30227:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4130,"nodeType":"Block","src":"30837:148:11","statements":[{"expression":{"id":4118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4113,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"30847:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"30866:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4114,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:11","typeDescriptions":{}}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4119,"nodeType":"ExpressionStatement","src":"30847:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"30886:10:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"30900:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4129,"nodeType":"IfStatement","src":"30882:97:11","trueBody":{"id":4128,"nodeType":"Block","src":"30907:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:11","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4108,"src":"30962:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4123,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"30928:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4127,"nodeType":"RevertStatement","src":"30921:47:11"}]}}]},"documentation":{"id":4106,"nodeType":"StructuredDocumentation","src":"30453:307:11","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4131,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:11","nodeType":"FunctionDefinition","parameters":{"id":4109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4108,"mutability":"mutable","name":"value","nameLocation":"30789:5:11","nodeType":"VariableDeclaration","scope":4131,"src":"30782:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4107,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:11"},"returnParameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:11","nodeType":"VariableDeclaration","scope":4131,"src":"30819:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4110,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:11","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:11"},"scope":4328,"src":"30765:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4156,"nodeType":"Block","src":"31375:148:11","statements":[{"expression":{"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4139,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"31385:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"31404:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4140,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:11","typeDescriptions":{}}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4145,"nodeType":"ExpressionStatement","src":"31385:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"31424:10:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"31438:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4155,"nodeType":"IfStatement","src":"31420:97:11","trueBody":{"id":4154,"nodeType":"Block","src":"31445:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:11","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4134,"src":"31500:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4149,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"31466:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4153,"nodeType":"RevertStatement","src":"31459:47:11"}]}}]},"documentation":{"id":4132,"nodeType":"StructuredDocumentation","src":"30991:307:11","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4157,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:11","nodeType":"FunctionDefinition","parameters":{"id":4135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4134,"mutability":"mutable","name":"value","nameLocation":"31327:5:11","nodeType":"VariableDeclaration","scope":4157,"src":"31320:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4133,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:11"},"returnParameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4137,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:11","nodeType":"VariableDeclaration","scope":4157,"src":"31357:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4136,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:11","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:11"},"scope":4328,"src":"31303:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4182,"nodeType":"Block","src":"31913:148:11","statements":[{"expression":{"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4165,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"31923:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"31942:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4166,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:11","typeDescriptions":{}}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4171,"nodeType":"ExpressionStatement","src":"31923:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"31962:10:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"31976:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4181,"nodeType":"IfStatement","src":"31958:97:11","trueBody":{"id":4180,"nodeType":"Block","src":"31983:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:11","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4177,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4160,"src":"32038:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4175,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"32004:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4179,"nodeType":"RevertStatement","src":"31997:47:11"}]}}]},"documentation":{"id":4158,"nodeType":"StructuredDocumentation","src":"31529:307:11","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4183,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:11","nodeType":"FunctionDefinition","parameters":{"id":4161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"value","nameLocation":"31865:5:11","nodeType":"VariableDeclaration","scope":4183,"src":"31858:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4159,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:11"},"returnParameters":{"id":4164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4163,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:11","nodeType":"VariableDeclaration","scope":4183,"src":"31895:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4162,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:11","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:11"},"scope":4328,"src":"31841:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4208,"nodeType":"Block","src":"32451:148:11","statements":[{"expression":{"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4191,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"32461:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"32480:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4192,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:11","typeDescriptions":{}}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4197,"nodeType":"ExpressionStatement","src":"32461:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4189,"src":"32500:10:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"32514:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4207,"nodeType":"IfStatement","src":"32496:97:11","trueBody":{"id":4206,"nodeType":"Block","src":"32521:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:11","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"32576:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4201,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"32542:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4205,"nodeType":"RevertStatement","src":"32535:47:11"}]}}]},"documentation":{"id":4184,"nodeType":"StructuredDocumentation","src":"32067:307:11","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4209,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:11","nodeType":"FunctionDefinition","parameters":{"id":4187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"value","nameLocation":"32403:5:11","nodeType":"VariableDeclaration","scope":4209,"src":"32396:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4185,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:11"},"returnParameters":{"id":4190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4189,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:11","nodeType":"VariableDeclaration","scope":4209,"src":"32433:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4188,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:11","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:11"},"scope":4328,"src":"32379:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4234,"nodeType":"Block","src":"32989:148:11","statements":[{"expression":{"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4217,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"32999:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"33018:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4218,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:11","typeDescriptions":{}}},"id":4221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4223,"nodeType":"ExpressionStatement","src":"32999:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"33038:10:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"33052:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4233,"nodeType":"IfStatement","src":"33034:97:11","trueBody":{"id":4232,"nodeType":"Block","src":"33059:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:11","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4212,"src":"33114:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4227,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"33080:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4231,"nodeType":"RevertStatement","src":"33073:47:11"}]}}]},"documentation":{"id":4210,"nodeType":"StructuredDocumentation","src":"32605:307:11","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4235,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:11","nodeType":"FunctionDefinition","parameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4212,"mutability":"mutable","name":"value","nameLocation":"32941:5:11","nodeType":"VariableDeclaration","scope":4235,"src":"32934:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4211,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:11"},"returnParameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:11","nodeType":"VariableDeclaration","scope":4235,"src":"32971:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4214,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:11"},"scope":4328,"src":"32917:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4260,"nodeType":"Block","src":"33527:148:11","statements":[{"expression":{"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4243,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"33537:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"33556:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4244,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:11","typeDescriptions":{}}},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4249,"nodeType":"ExpressionStatement","src":"33537:25:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4241,"src":"33576:10:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"33590:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4259,"nodeType":"IfStatement","src":"33572:97:11","trueBody":{"id":4258,"nodeType":"Block","src":"33597:72:11","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:11","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"33652:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4253,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"33618:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4257,"nodeType":"RevertStatement","src":"33611:47:11"}]}}]},"documentation":{"id":4236,"nodeType":"StructuredDocumentation","src":"33143:307:11","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4261,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:11","nodeType":"FunctionDefinition","parameters":{"id":4239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4238,"mutability":"mutable","name":"value","nameLocation":"33479:5:11","nodeType":"VariableDeclaration","scope":4261,"src":"33472:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4237,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:11"},"returnParameters":{"id":4242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:11","nodeType":"VariableDeclaration","scope":4261,"src":"33509:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4240,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:11","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:11"},"scope":4328,"src":"33455:220:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4286,"nodeType":"Block","src":"34058:146:11","statements":[{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4269,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"34068:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"34086:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4270,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:11","typeDescriptions":{}}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4275,"nodeType":"ExpressionStatement","src":"34068:24:11"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4267,"src":"34106:10:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"34120:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4285,"nodeType":"IfStatement","src":"34102:96:11","trueBody":{"id":4284,"nodeType":"Block","src":"34127:71:11","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:11","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"34181:5:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4279,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"34148:29:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4283,"nodeType":"RevertStatement","src":"34141:46:11"}]}}]},"documentation":{"id":4262,"nodeType":"StructuredDocumentation","src":"33681:302:11","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4287,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:11","nodeType":"FunctionDefinition","parameters":{"id":4265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4264,"mutability":"mutable","name":"value","nameLocation":"34011:5:11","nodeType":"VariableDeclaration","scope":4287,"src":"34004:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4263,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:11"},"returnParameters":{"id":4268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4267,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:11","nodeType":"VariableDeclaration","scope":4287,"src":"34041:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4266,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:11","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:11"},"scope":4328,"src":"33988:216:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4316,"nodeType":"Block","src":"34444:250:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"34557:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4299,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:11","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4298,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:11","memberName":"max","nodeType":"MemberAccess","src":"34573:16:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:11","typeDescriptions":{}}},"id":4303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4310,"nodeType":"IfStatement","src":"34553:105:11","trueBody":{"id":4309,"nodeType":"Block","src":"34592:66:11","statements":[{"errorCall":{"arguments":[{"id":4306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"34641:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4305,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"34613:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4308,"nodeType":"RevertStatement","src":"34606:41:11"}]}},{"expression":{"arguments":[{"id":4313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"34681:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4311,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:11","typeDescriptions":{}}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4294,"id":4315,"nodeType":"Return","src":"34667:20:11"}]},"documentation":{"id":4288,"nodeType":"StructuredDocumentation","src":"34210:165:11","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4317,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:11","nodeType":"FunctionDefinition","parameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"value","nameLocation":"34406:5:11","nodeType":"VariableDeclaration","scope":4317,"src":"34398:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:11"},"returnParameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4317,"src":"34436:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4292,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:11","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:11"},"scope":4328,"src":"34380:314:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4326,"nodeType":"Block","src":"34853:87:11","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:11","statements":[{"nodeType":"YulAssignment","src":"34902:22:11","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:11"},"nodeType":"YulFunctionCall","src":"34914:9:11"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:11"},"nodeType":"YulFunctionCall","src":"34907:17:11"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4320,"isOffset":false,"isSlot":false,"src":"34921:1:11","valueSize":1},{"declaration":4323,"isOffset":false,"isSlot":false,"src":"34902:1:11","valueSize":1}],"flags":["memory-safe"],"id":4325,"nodeType":"InlineAssembly","src":"34863:71:11"}]},"documentation":{"id":4318,"nodeType":"StructuredDocumentation","src":"34700:90:11","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4327,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:11","nodeType":"FunctionDefinition","parameters":{"id":4321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4320,"mutability":"mutable","name":"b","nameLocation":"34816:1:11","nodeType":"VariableDeclaration","scope":4327,"src":"34811:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4319,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:11"},"returnParameters":{"id":4324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4323,"mutability":"mutable","name":"u","nameLocation":"34850:1:11","nodeType":"VariableDeclaration","scope":4327,"src":"34842:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4322,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:11"},"scope":4328,"src":"34795:145:11","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4329,"src":"769:34173:11","usedErrors":[2573,2578,2585,2590],"usedEvents":[]}],"src":"192:34751:11"},"id":11},"contracts/GalileoJackpot.sol":{"ast":{"absolutePath":"contracts/GalileoJackpot.sol","exportedSymbols":{"Context":[809],"GalileoJackpot":[5554],"IERC1363":[229],"IERC20":[315],"IGalileoJackpotHistory":[4347],"Math":[2563],"Ownable":[147],"Panic":[861],"ReentrancyGuard":[930],"SafeCast":[4328],"SafeERC20":[779]},"id":5555,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4330,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4331,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5555,"sourceUnit":316,"src":"58:56:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":4332,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5555,"sourceUnit":780,"src":"115:65:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4333,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5555,"sourceUnit":148,"src":"181:52:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":4334,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5555,"sourceUnit":931,"src":"234:59:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4335,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5555,"sourceUnit":2564,"src":"294:53:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IGalileoJackpotHistory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4347,"linearizedBaseContracts":[4347],"name":"IGalileoJackpotHistory","nameLocation":"396:22:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"b9cc78ea","id":4346,"implemented":false,"kind":"function","modifiers":[],"name":"recordWinner","nameLocation":"434:12:12","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4337,"mutability":"mutable","name":"roundId","nameLocation":"455:7:12","nodeType":"VariableDeclaration","scope":4346,"src":"447:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4336,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4339,"mutability":"mutable","name":"winner","nameLocation":"472:6:12","nodeType":"VariableDeclaration","scope":4346,"src":"464:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4338,"name":"address","nodeType":"ElementaryTypeName","src":"464:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"winningTicketId","nameLocation":"488:15:12","nodeType":"VariableDeclaration","scope":4346,"src":"480:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4340,"name":"uint256","nodeType":"ElementaryTypeName","src":"480:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"prizeAmount","nameLocation":"513:11:12","nodeType":"VariableDeclaration","scope":4346,"src":"505:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4342,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"446:79:12"},"returnParameters":{"id":4345,"nodeType":"ParameterList","parameters":[],"src":"534:0:12"},"scope":4347,"src":"425:110:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5555,"src":"386:151:12","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":4349,"name":"Ownable","nameLocations":["641:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"641:7:12"},"id":4350,"nodeType":"InheritanceSpecifier","src":"641:7:12"},{"baseName":{"id":4351,"name":"ReentrancyGuard","nameLocations":["650:15:12"],"nodeType":"IdentifierPath","referencedDeclaration":930,"src":"650:15:12"},"id":4352,"nodeType":"InheritanceSpecifier","src":"650:15:12"}],"canonicalName":"GalileoJackpot","contractDependencies":[],"contractKind":"contract","documentation":{"id":4348,"nodeType":"StructuredDocumentation","src":"539:74:12","text":" @title GalileoJackpot\n @dev Lottery system on Galileo testnet"},"fullyImplemented":true,"id":5554,"linearizedBaseContracts":[5554,930,147,809],"name":"GalileoJackpot","nameLocation":"623:14:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4356,"libraryName":{"id":4353,"name":"SafeERC20","nameLocations":["678:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"678:9:12"},"nodeType":"UsingForDirective","src":"672:27:12","typeName":{"id":4355,"nodeType":"UserDefinedTypeName","pathNode":{"id":4354,"name":"IERC20","nameLocations":["692:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":315,"src":"692:6:12"},"referencedDeclaration":315,"src":"692:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$315","typeString":"contract IERC20"}}},{"canonicalName":"GalileoJackpot.Round","id":4371,"members":[{"constant":false,"id":4358,"mutability":"mutable","name":"id","nameLocation":"763:2:12","nodeType":"VariableDeclaration","scope":4371,"src":"755:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4357,"name":"uint256","nodeType":"ElementaryTypeName","src":"755:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4360,"mutability":"mutable","name":"startTime","nameLocation":"783:9:12","nodeType":"VariableDeclaration","scope":4371,"src":"775:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4359,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4362,"mutability":"mutable","name":"endTime","nameLocation":"810:7:12","nodeType":"VariableDeclaration","scope":4371,"src":"802:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4361,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4364,"mutability":"mutable","name":"totalPool","nameLocation":"835:9:12","nodeType":"VariableDeclaration","scope":4371,"src":"827:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4363,"name":"uint256","nodeType":"ElementaryTypeName","src":"827:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4366,"mutability":"mutable","name":"winner","nameLocation":"862:6:12","nodeType":"VariableDeclaration","scope":4371,"src":"854:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4365,"name":"address","nodeType":"ElementaryTypeName","src":"854:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4368,"mutability":"mutable","name":"winningTicketId","nameLocation":"886:15:12","nodeType":"VariableDeclaration","scope":4371,"src":"878:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"878:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"completed","nameLocation":"916:9:12","nodeType":"VariableDeclaration","scope":4371,"src":"911:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4369,"name":"bool","nodeType":"ElementaryTypeName","src":"911:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Round","nameLocation":"739:5:12","nodeType":"StructDefinition","scope":5554,"src":"732:200:12","visibility":"public"},{"canonicalName":"GalileoJackpot.Ticket","id":4380,"members":[{"constant":false,"id":4373,"mutability":"mutable","name":"id","nameLocation":"998:2:12","nodeType":"VariableDeclaration","scope":4380,"src":"990:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4375,"mutability":"mutable","name":"owner","nameLocation":"1018:5:12","nodeType":"VariableDeclaration","scope":4380,"src":"1010:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4374,"name":"address","nodeType":"ElementaryTypeName","src":"1010:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4377,"mutability":"mutable","name":"roundId","nameLocation":"1041:7:12","nodeType":"VariableDeclaration","scope":4380,"src":"1033:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"1033:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4379,"mutability":"mutable","name":"timestamp","nameLocation":"1066:9:12","nodeType":"VariableDeclaration","scope":4380,"src":"1058:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1058:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Ticket","nameLocation":"973:6:12","nodeType":"StructDefinition","scope":5554,"src":"966:116:12","visibility":"public"},{"constant":true,"functionSelector":"e1e158a5","id":4383,"mutability":"constant","name":"MIN_DEPOSIT","nameLocation":"1139:11:12","nodeType":"VariableDeclaration","scope":5554,"src":"1115:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3031","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1153:10:12","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"visibility":"public"},{"constant":true,"functionSelector":"6641ea08","id":4386,"mutability":"constant","name":"ROUND_DURATION","nameLocation":"1232:14:12","nodeType":"VariableDeclaration","scope":5554,"src":"1208:50:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1208:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1249:9:12","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"2"},"visibility":"public"},{"constant":true,"functionSelector":"a8a3221e","id":4389,"mutability":"constant","name":"OWNER_FEE_PERCENT","nameLocation":"1326:17:12","nodeType":"VariableDeclaration","scope":5554,"src":"1302:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1302:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":4388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1346:1:12","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"public"},{"constant":false,"functionSelector":"9cbe5efd","id":4392,"mutability":"mutable","name":"currentRoundId","nameLocation":"1397:14:12","nodeType":"VariableDeclaration","scope":5554,"src":"1382:33:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1382:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1414:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"8c4d59d0","id":4395,"mutability":"mutable","name":"ticketCounter","nameLocation":"1463:13:12","nodeType":"VariableDeclaration","scope":5554,"src":"1448:32:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1448:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1479:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"public"},{"constant":false,"functionSelector":"8c65c81f","id":4400,"mutability":"mutable","name":"rounds","nameLocation":"1549:6:12","nodeType":"VariableDeclaration","scope":5554,"src":"1516:39:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round)"},"typeName":{"id":4399,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1524:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1516:25:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4398,"nodeType":"UserDefinedTypeName","pathNode":{"id":4397,"name":"Round","nameLocations":["1535:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":4371,"src":"1535:5:12"},"referencedDeclaration":4371,"src":"1535:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"}}},"visibility":"public"},{"constant":false,"functionSelector":"50b44712","id":4405,"mutability":"mutable","name":"tickets","nameLocation":"1626:7:12","nodeType":"VariableDeclaration","scope":5554,"src":"1592:41:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$4380_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Ticket)"},"typeName":{"id":4404,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"1600:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1592:26:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$4380_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Ticket)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":4403,"nodeType":"UserDefinedTypeName","pathNode":{"id":4402,"name":"Ticket","nameLocations":["1611:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":4380,"src":"1611:6:12"},"referencedDeclaration":4380,"src":"1611:6:12","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$4380_storage_ptr","typeString":"struct GalileoJackpot.Ticket"}}},"visibility":"public"},{"constant":false,"functionSelector":"7169c711","id":4410,"mutability":"mutable","name":"roundTickets","nameLocation":"1718:12:12","nodeType":"VariableDeclaration","scope":5554,"src":"1681:49:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"typeName":{"id":4409,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"1689:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1681:29:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1700:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4408,"nodeType":"ArrayTypeName","src":"1700:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"cf260baf","id":4415,"mutability":"mutable","name":"userTickets","nameLocation":"1809:11:12","nodeType":"VariableDeclaration","scope":5554,"src":"1772:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":4414,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4411,"name":"address","nodeType":"ElementaryTypeName","src":"1780:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1772:29:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":4412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4413,"nodeType":"ArrayTypeName","src":"1791:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"61d027b3","id":4417,"mutability":"mutable","name":"treasury","nameLocation":"1881:8:12","nodeType":"VariableDeclaration","scope":5554,"src":"1866:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4416,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"cc158921","id":4419,"mutability":"mutable","name":"historyContract","nameLocation":"1947:15:12","nodeType":"VariableDeclaration","scope":5554,"src":"1932:30:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4418,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"96541f70da731142b18e96f1def4d2a7733deb7d784723106d52c1d906d4c67a","id":4429,"name":"TicketPurchased","nameLocation":"1993:15:12","nodeType":"EventDefinition","parameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4421,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"2025:5:12","nodeType":"VariableDeclaration","scope":4429,"src":"2009:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4420,"name":"address","nodeType":"ElementaryTypeName","src":"2009:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4423,"indexed":false,"mutability":"mutable","name":"ticketId","nameLocation":"2040:8:12","nodeType":"VariableDeclaration","scope":4429,"src":"2032:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4422,"name":"uint256","nodeType":"ElementaryTypeName","src":"2032:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4425,"indexed":false,"mutability":"mutable","name":"roundId","nameLocation":"2058:7:12","nodeType":"VariableDeclaration","scope":4429,"src":"2050:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4424,"name":"uint256","nodeType":"ElementaryTypeName","src":"2050:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4427,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2075:9:12","nodeType":"VariableDeclaration","scope":4429,"src":"2067:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2067:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2008:77:12"},"src":"1987:99:12"},{"anonymous":false,"eventSelector":"a359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d","id":4437,"name":"RoundStarted","nameLocation":"2097:12:12","nodeType":"EventDefinition","parameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4431,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"2126:7:12","nodeType":"VariableDeclaration","scope":4437,"src":"2110:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4430,"name":"uint256","nodeType":"ElementaryTypeName","src":"2110:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4433,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"2143:9:12","nodeType":"VariableDeclaration","scope":4437,"src":"2135:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4432,"name":"uint256","nodeType":"ElementaryTypeName","src":"2135:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4435,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"2162:7:12","nodeType":"VariableDeclaration","scope":4437,"src":"2154:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:61:12"},"src":"2091:80:12"},{"anonymous":false,"eventSelector":"1901cd171c04e8157b30c71ff94388f4eda84b287b8e58b357b408fe85916da0","id":4447,"name":"RoundCompleted","nameLocation":"2182:14:12","nodeType":"EventDefinition","parameters":{"id":4446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4439,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"2213:7:12","nodeType":"VariableDeclaration","scope":4447,"src":"2197:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4438,"name":"uint256","nodeType":"ElementaryTypeName","src":"2197:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4441,"indexed":false,"mutability":"mutable","name":"winner","nameLocation":"2230:6:12","nodeType":"VariableDeclaration","scope":4447,"src":"2222:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4440,"name":"address","nodeType":"ElementaryTypeName","src":"2222:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4443,"indexed":false,"mutability":"mutable","name":"winningTicketId","nameLocation":"2246:15:12","nodeType":"VariableDeclaration","scope":4447,"src":"2238:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4442,"name":"uint256","nodeType":"ElementaryTypeName","src":"2238:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4445,"indexed":false,"mutability":"mutable","name":"prize","nameLocation":"2271:5:12","nodeType":"VariableDeclaration","scope":4447,"src":"2263:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4444,"name":"uint256","nodeType":"ElementaryTypeName","src":"2263:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2196:81:12"},"src":"2176:102:12"},{"anonymous":false,"eventSelector":"ed1c7c79dbd4938e6495c716b5f244d9ed315871a4455a1f46fbbf8090b43cc9","id":4455,"name":"OwnerFeeCollected","nameLocation":"2289:17:12","nodeType":"EventDefinition","parameters":{"id":4454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"2323:7:12","nodeType":"VariableDeclaration","scope":4455,"src":"2307:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4451,"indexed":false,"mutability":"mutable","name":"treasury","nameLocation":"2340:8:12","nodeType":"VariableDeclaration","scope":4455,"src":"2332:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4450,"name":"address","nodeType":"ElementaryTypeName","src":"2332:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4453,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2358:6:12","nodeType":"VariableDeclaration","scope":4455,"src":"2350:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"2350:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2306:59:12"},"src":"2283:83:12"},{"anonymous":false,"eventSelector":"0e718441e2c8ed8399d302c4091ea86c90cd23783c3c1f299b278a8eefa8fd14","id":4459,"name":"HistoryContractUpdated","nameLocation":"2377:22:12","nodeType":"EventDefinition","parameters":{"id":4458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4457,"indexed":true,"mutability":"mutable","name":"historyContract","nameLocation":"2416:15:12","nodeType":"VariableDeclaration","scope":4459,"src":"2400:31:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4456,"name":"address","nodeType":"ElementaryTypeName","src":"2400:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2399:33:12"},"src":"2371:62:12"},{"errorSelector":"0e1eddda","id":4461,"name":"InsufficientDeposit","nameLocation":"2470:19:12","nodeType":"ErrorDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[],"src":"2489:2:12"},"src":"2464:28:12"},{"errorSelector":"7c752836","id":4463,"name":"RoundAlreadyCompleted","nameLocation":"2503:21:12","nodeType":"ErrorDefinition","parameters":{"id":4462,"nodeType":"ParameterList","parameters":[],"src":"2524:2:12"},"src":"2497:30:12"},{"errorSelector":"8e9c6e1c","id":4465,"name":"RoundNotStarted","nameLocation":"2538:15:12","nodeType":"ErrorDefinition","parameters":{"id":4464,"nodeType":"ParameterList","parameters":[],"src":"2553:2:12"},"src":"2532:24:12"},{"errorSelector":"58e2bd7f","id":4467,"name":"RoundNotFinished","nameLocation":"2567:16:12","nodeType":"ErrorDefinition","parameters":{"id":4466,"nodeType":"ParameterList","parameters":[],"src":"2583:2:12"},"src":"2561:25:12"},{"errorSelector":"a8d8f349","id":4469,"name":"NotEnoughTickets","nameLocation":"2597:16:12","nodeType":"ErrorDefinition","parameters":{"id":4468,"nodeType":"ParameterList","parameters":[],"src":"2613:2:12"},"src":"2591:25:12"},{"errorSelector":"e6c4247b","id":4471,"name":"InvalidAddress","nameLocation":"2627:14:12","nodeType":"ErrorDefinition","parameters":{"id":4470,"nodeType":"ParameterList","parameters":[],"src":"2641:2:12"},"src":"2621:23:12"},{"errorSelector":"90b8ec18","id":4473,"name":"TransferFailed","nameLocation":"2655:14:12","nodeType":"ErrorDefinition","parameters":{"id":4472,"nodeType":"ParameterList","parameters":[],"src":"2669:2:12"},"src":"2649:23:12"},{"errorSelector":"0b514352","id":4475,"name":"ZeroRange","nameLocation":"2683:9:12","nodeType":"ErrorDefinition","parameters":{"id":4474,"nodeType":"ParameterList","parameters":[],"src":"2692:2:12"},"src":"2677:18:12"},{"body":{"id":4504,"nodeType":"Block","src":"2739:379:12","statements":[{"expression":{"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4482,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"2783:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4484,"indexExpression":{"id":4483,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2790:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2783:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4486,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"2832:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2871:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2895:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2921:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2944:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4490,"name":"address","nodeType":"ElementaryTypeName","src":"2944:7:12","typeDescriptions":{}}},"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2944:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2985:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3011:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4485,"name":"Round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"2808:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Round_$4371_storage_ptr_$","typeString":"type(struct GalileoJackpot.Round storage pointer)"}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2828:2:12","2860:9:12","2886:7:12","2910:9:12","2936:6:12","2968:15:12","3000:9:12"],"names":["id","startTime","endTime","totalPool","winner","winningTicketId","completed"],"nodeType":"FunctionCall","src":"2808:219:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_memory_ptr","typeString":"struct GalileoJackpot.Round memory"}},"src":"2783:244:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":4498,"nodeType":"ExpressionStatement","src":"2783:244:12"},{"expression":{"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4499,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"3093:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":4500,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3104:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3104:7:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3093:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4503,"nodeType":"ExpressionStatement","src":"3093:18:12"}]},"id":4505,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":4478,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2727:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2731:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2727:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4480,"kind":"baseConstructorSpecifier","modifierName":{"id":4477,"name":"Ownable","nameLocations":["2719:7:12"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2719:7:12"},"nodeType":"ModifierInvocation","src":"2719:19:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4476,"nodeType":"ParameterList","parameters":[],"src":"2716:2:12"},"returnParameters":{"id":4481,"nodeType":"ParameterList","parameters":[],"src":"2739:0:12"},"scope":5554,"src":"2705:413:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4531,"nodeType":"Block","src":"3321:175:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"_historyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"3335:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3363:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3355:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4514,"name":"address","nodeType":"ElementaryTypeName","src":"3355:7:12","typeDescriptions":{}}},"id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3355:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3335:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4522,"nodeType":"IfStatement","src":"3331:59:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4519,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"3374:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3374:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4521,"nodeType":"RevertStatement","src":"3367:23:12"}},{"expression":{"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4523,"name":"historyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"3400:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4524,"name":"_historyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"3418:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3400:34:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4526,"nodeType":"ExpressionStatement","src":"3400:34:12"},{"eventCall":{"arguments":[{"id":4528,"name":"_historyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"3472:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4527,"name":"HistoryContractUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"3449:22:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3449:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4530,"nodeType":"EmitStatement","src":"3444:45:12"}]},"documentation":{"id":4506,"nodeType":"StructuredDocumentation","src":"3128:115:12","text":" @dev Set history contract address\n @param _historyContract Address of the history contract"},"functionSelector":"9bb3503d","id":4532,"implemented":true,"kind":"function","modifiers":[{"id":4511,"kind":"modifierInvocation","modifierName":{"id":4510,"name":"onlyOwner","nameLocations":["3311:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3311:9:12"},"nodeType":"ModifierInvocation","src":"3311:9:12"}],"name":"setHistoryContract","nameLocation":"3257:18:12","nodeType":"FunctionDefinition","parameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"_historyContract","nameLocation":"3284:16:12","nodeType":"VariableDeclaration","scope":4532,"src":"3276:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4507,"name":"address","nodeType":"ElementaryTypeName","src":"3276:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3275:26:12"},"returnParameters":{"id":4512,"nodeType":"ParameterList","parameters":[],"src":"3321:0:12"},"scope":5554,"src":"3248:248:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4666,"nodeType":"Block","src":"3617:1572:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3631:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3635:5:12","memberName":"value","nodeType":"MemberAccess","src":"3631:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4540,"name":"MIN_DEPOSIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"3643:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3631:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4545,"nodeType":"IfStatement","src":"3627:57:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4542,"name":"InsufficientDeposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"3663:19:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3663:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4544,"nodeType":"RevertStatement","src":"3656:28:12"}},{"condition":{"expression":{"baseExpression":{"id":4546,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"3698:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4548,"indexExpression":{"id":4547,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"3705:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3698:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":4549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3721:9:12","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":4370,"src":"3698:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4553,"nodeType":"IfStatement","src":"3694:68:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4550,"name":"RoundAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"3739:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4552,"nodeType":"RevertStatement","src":"3732:30:12"}},{"assignments":[4555],"declarations":[{"constant":false,"id":4555,"mutability":"mutable","name":"numTickets","nameLocation":"3828:10:12","nodeType":"VariableDeclaration","scope":4666,"src":"3820:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3820:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4560,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4556,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3841:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3845:5:12","memberName":"value","nodeType":"MemberAccess","src":"3841:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4558,"name":"MIN_DEPOSIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"3853:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3841:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3820:44:12"},{"body":{"id":4611,"nodeType":"Block","src":"3947:663:12","statements":[{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4001:15:12","subExpression":{"id":4571,"name":"ticketCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"4001:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4573,"nodeType":"ExpressionStatement","src":"4001:15:12"},{"expression":{"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4574,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"4076:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$4380_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Ticket storage ref)"}},"id":4576,"indexExpression":{"id":4575,"name":"ticketCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"4084:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4076:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$4380_storage","typeString":"struct GalileoJackpot.Ticket storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4578,"name":"ticketCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"4130:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4579,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4168:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4172:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4168:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4581,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4205:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4582,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4248:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4254:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"4248:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4577,"name":"Ticket","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"4101:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Ticket_$4380_storage_ptr_$","typeString":"type(struct GalileoJackpot.Ticket storage pointer)"}},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4126:2:12","4161:5:12","4196:7:12","4237:9:12"],"names":["id","owner","roundId","timestamp"],"nodeType":"FunctionCall","src":"4101:177:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$4380_memory_ptr","typeString":"struct GalileoJackpot.Ticket memory"}},"src":"4076:202:12","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$4380_storage","typeString":"struct GalileoJackpot.Ticket storage ref"}},"id":4586,"nodeType":"ExpressionStatement","src":"4076:202:12"},{"expression":{"arguments":[{"id":4591,"name":"ticketCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"4374:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":4587,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"4340:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":4589,"indexExpression":{"id":4588,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4353:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4340:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4369:4:12","memberName":"push","nodeType":"MemberAccess","src":"4340:33:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4340:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4593,"nodeType":"ExpressionStatement","src":"4340:48:12"},{"expression":{"arguments":[{"id":4599,"name":"ticketCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"4478:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":4594,"name":"userTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"4449:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":4597,"indexExpression":{"expression":{"id":4595,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4461:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4465:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4461:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4449:23:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4473:4:12","memberName":"push","nodeType":"MemberAccess","src":"4449:28:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4449:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4601,"nodeType":"ExpressionStatement","src":"4449:43:12"},{"eventCall":{"arguments":[{"expression":{"id":4603,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4540:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4544:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4540:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4605,"name":"ticketCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4395,"src":"4552:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4606,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4567:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4607,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4583:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4589:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"4583:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4602,"name":"TicketPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4429,"src":"4524:15:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4524:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4610,"nodeType":"EmitStatement","src":"4519:80:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4565,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3926:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4566,"name":"numTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3930:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3926:14:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4612,"initializationExpression":{"assignments":[4562],"declarations":[{"constant":false,"id":4562,"mutability":"mutable","name":"i","nameLocation":"3919:1:12","nodeType":"VariableDeclaration","scope":4612,"src":"3911:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3911:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4564,"initialValue":{"hexValue":"30","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3923:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3911:13:12"},"loopExpression":{"expression":{"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3942:3:12","subExpression":{"id":4568,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3942:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4570,"nodeType":"ExpressionStatement","src":"3942:3:12"},"nodeType":"ForStatement","src":"3906:704:12"},{"expression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4613,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"4651:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4615,"indexExpression":{"id":4614,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4658:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4651:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":4616,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4674:9:12","memberName":"totalPool","nodeType":"MemberAccess","referencedDeclaration":4364,"src":"4651:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4617,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4687:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:5:12","memberName":"value","nodeType":"MemberAccess","src":"4687:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4651:45:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4620,"nodeType":"ExpressionStatement","src":"4651:45:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4621,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"4793:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":4623,"indexExpression":{"id":4622,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4806:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4793:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:6:12","memberName":"length","nodeType":"MemberAccess","src":"4793:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":4625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4832:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4793:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4627,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"4837:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4629,"indexExpression":{"id":4628,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4844:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4837:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":4630,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4860:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"4837:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4873:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4837:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4793:81:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4665,"nodeType":"IfStatement","src":"4789:394:12","trueBody":{"id":4664,"nodeType":"Block","src":"4876:307:12","statements":[{"expression":{"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4634,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"4917:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4636,"indexExpression":{"id":4635,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4924:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4917:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":4637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4940:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"4917:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4638,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4952:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4958:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"4952:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4917:50:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4641,"nodeType":"ExpressionStatement","src":"4917:50:12"},{"expression":{"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":4642,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"4981:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4644,"indexExpression":{"id":4643,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"4988:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4981:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":4645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5004:7:12","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4362,"src":"4981:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4646,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5014:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5020:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"5014:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4648,"name":"ROUND_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"5032:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5014:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4981:65:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4651,"nodeType":"ExpressionStatement","src":"4981:65:12"},{"eventCall":{"arguments":[{"id":4653,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5091:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4654,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"5107:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4656,"indexExpression":{"id":4655,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5114:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5107:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":4657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5130:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"5107:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":4658,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"5141:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4660,"indexExpression":{"id":4659,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5148:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5141:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":4661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:7:12","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4362,"src":"5141:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4652,"name":"RoundStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"5078:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5078:94:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4663,"nodeType":"EmitStatement","src":"5073:99:12"}]}}]},"documentation":{"id":4533,"nodeType":"StructuredDocumentation","src":"3506:54:12","text":" @dev Buy tickets with native tokens"},"functionSelector":"c8199826","id":4667,"implemented":true,"kind":"function","modifiers":[{"id":4536,"kind":"modifierInvocation","modifierName":{"id":4535,"name":"nonReentrant","nameLocations":["3604:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"3604:12:12"},"nodeType":"ModifierInvocation","src":"3604:12:12"}],"name":"buyTickets","nameLocation":"3574:10:12","nodeType":"FunctionDefinition","parameters":{"id":4534,"nodeType":"ParameterList","parameters":[],"src":"3584:2:12"},"returnParameters":{"id":4537,"nodeType":"ParameterList","parameters":[],"src":"3617:0:12"},"scope":5554,"src":"3565:1624:12","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4856,"nodeType":"Block","src":"5307:2144:12","statements":[{"assignments":[4675],"declarations":[{"constant":false,"id":4675,"mutability":"mutable","name":"round","nameLocation":"5331:5:12","nodeType":"VariableDeclaration","scope":4856,"src":"5317:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"},"typeName":{"id":4674,"nodeType":"UserDefinedTypeName","pathNode":{"id":4673,"name":"Round","nameLocations":["5317:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":4371,"src":"5317:5:12"},"referencedDeclaration":4371,"src":"5317:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"}},"visibility":"internal"}],"id":4679,"initialValue":{"baseExpression":{"id":4676,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"5339:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4678,"indexExpression":{"id":4677,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5346:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5339:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5317:44:12"},{"condition":{"expression":{"id":4680,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"5384:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5390:9:12","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":4370,"src":"5384:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4685,"nodeType":"IfStatement","src":"5380:51:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4682,"name":"RoundAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"5408:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4684,"nodeType":"RevertStatement","src":"5401:30:12"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4686,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"5445:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4687,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5451:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"5445:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5464:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5445:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4693,"nodeType":"IfStatement","src":"5441:50:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4690,"name":"RoundNotStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"5474:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5474:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4692,"nodeType":"RevertStatement","src":"5467:24:12"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4694,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5505:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5511:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"5505:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4696,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"5523:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5529:7:12","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4362,"src":"5523:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5505:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4702,"nodeType":"IfStatement","src":"5501:62:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4699,"name":"RoundNotFinished","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"5545:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5545:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4701,"nodeType":"RevertStatement","src":"5538:25:12"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4703,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"5577:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":4705,"indexExpression":{"id":4704,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5590:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5577:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5606:6:12","memberName":"length","nodeType":"MemberAccess","src":"5577:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":4707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5615:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5577:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4712,"nodeType":"IfStatement","src":"5573:70:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4709,"name":"NotEnoughTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"5625:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5625:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4711,"nodeType":"RevertStatement","src":"5618:25:12"}},{"expression":{"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4713,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"5697:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5703:9:12","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":4370,"src":"5697:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5715:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5697:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4718,"nodeType":"ExpressionStatement","src":"5697:22:12"},{"assignments":[4720],"declarations":[{"constant":false,"id":4720,"mutability":"mutable","name":"ticketIndex","nameLocation":"5779:11:12","nodeType":"VariableDeclaration","scope":4856,"src":"5771:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4719,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4727,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":4722,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"5813:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":4724,"indexExpression":{"id":4723,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5826:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5842:6:12","memberName":"length","nodeType":"MemberAccess","src":"5813:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4721,"name":"_pseudoRandomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"5793:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5793:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5771:78:12"},{"assignments":[4729],"declarations":[{"constant":false,"id":4729,"mutability":"mutable","name":"winningTicketId","nameLocation":"5867:15:12","nodeType":"VariableDeclaration","scope":4856,"src":"5859:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"5859:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4735,"initialValue":{"baseExpression":{"baseExpression":{"id":4730,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"5885:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":4732,"indexExpression":{"id":4731,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"5898:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5885:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":4734,"indexExpression":{"id":4733,"name":"ticketIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"5914:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5885:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5859:67:12"},{"assignments":[4737],"declarations":[{"constant":false,"id":4737,"mutability":"mutable","name":"winner","nameLocation":"5944:6:12","nodeType":"VariableDeclaration","scope":4856,"src":"5936:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4736,"name":"address","nodeType":"ElementaryTypeName","src":"5936:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4742,"initialValue":{"expression":{"baseExpression":{"id":4738,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"5953:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$4380_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Ticket storage ref)"}},"id":4740,"indexExpression":{"id":4739,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"5961:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5953:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$4380_storage","typeString":"struct GalileoJackpot.Ticket storage ref"}},"id":4741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5978:5:12","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":4375,"src":"5953:30:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5936:47:12"},{"expression":{"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4743,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"6031:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6037:6:12","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":4366,"src":"6031:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4746,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"6046:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6031:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4748,"nodeType":"ExpressionStatement","src":"6031:21:12"},{"expression":{"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4749,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"6062:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4751,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6068:15:12","memberName":"winningTicketId","nodeType":"MemberAccess","referencedDeclaration":4368,"src":"6062:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4752,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"6086:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6062:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4754,"nodeType":"ExpressionStatement","src":"6062:39:12"},{"assignments":[4756],"declarations":[{"constant":false,"id":4756,"mutability":"mutable","name":"ownerFee","nameLocation":"6176:8:12","nodeType":"VariableDeclaration","scope":4856,"src":"6168:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"6168:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4764,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4757,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"6188:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6194:9:12","memberName":"totalPool","nodeType":"MemberAccess","referencedDeclaration":4364,"src":"6188:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4759,"name":"OWNER_FEE_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"6206:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6188:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6187:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":4762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6227:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6187:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6168:62:12"},{"assignments":[4766],"declarations":[{"constant":false,"id":4766,"mutability":"mutable","name":"prizeAmount","nameLocation":"6309:11:12","nodeType":"VariableDeclaration","scope":4856,"src":"6301:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4765,"name":"uint256","nodeType":"ElementaryTypeName","src":"6301:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4771,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4767,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"6323:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6329:9:12","memberName":"totalPool","nodeType":"MemberAccess","referencedDeclaration":4364,"src":"6323:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4769,"name":"ownerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"6341:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6323:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6301:48:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4772,"name":"historyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"6430:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6457:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6449:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4773,"name":"address","nodeType":"ElementaryTypeName","src":"6449:7:12","typeDescriptions":{}}},"id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6449:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6430:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4790,"nodeType":"IfStatement","src":"6426:238:12","trueBody":{"id":4789,"nodeType":"Block","src":"6461:203:12","statements":[{"expression":{"arguments":[{"expression":{"id":4782,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"6545:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6551:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4358,"src":"6545:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4784,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"6571:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4785,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"6595:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4786,"name":"prizeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"6628:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4779,"name":"historyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"6498:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4778,"name":"IGalileoJackpotHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"6475:22:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGalileoJackpotHistory_$4347_$","typeString":"type(contract IGalileoJackpotHistory)"}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6475:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGalileoJackpotHistory_$4347","typeString":"contract IGalileoJackpotHistory"}},"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6515:12:12","memberName":"recordWinner","nodeType":"MemberAccess","referencedDeclaration":4346,"src":"6475:52:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256) external"}},"id":4787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6475:178:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4788,"nodeType":"ExpressionStatement","src":"6475:178:12"}]}},{"expression":{"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6711:16:12","subExpression":{"id":4791,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"6711:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4793,"nodeType":"ExpressionStatement","src":"6711:16:12"},{"expression":{"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4794,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"6737:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":4796,"indexExpression":{"id":4795,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"6744:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6737:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4798,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"6786:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":4799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6825:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6849:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6875:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6906:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6898:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4802,"name":"address","nodeType":"ElementaryTypeName","src":"6898:7:12","typeDescriptions":{}}},"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6939:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":4807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6965:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4797,"name":"Round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"6762:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Round_$4371_storage_ptr_$","typeString":"type(struct GalileoJackpot.Round storage pointer)"}},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6782:2:12","6814:9:12","6840:7:12","6864:9:12","6890:6:12","6922:15:12","6954:9:12"],"names":["id","startTime","endTime","totalPool","winner","winningTicketId","completed"],"nodeType":"FunctionCall","src":"6762:219:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_memory_ptr","typeString":"struct GalileoJackpot.Round memory"}},"src":"6737:244:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":4810,"nodeType":"ExpressionStatement","src":"6737:244:12"},{"assignments":[4812,null],"declarations":[{"constant":false,"id":4812,"mutability":"mutable","name":"feeSuccess","nameLocation":"7044:10:12","nodeType":"VariableDeclaration","scope":4856,"src":"7039:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4811,"name":"bool","nodeType":"ElementaryTypeName","src":"7039:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4819,"initialValue":{"arguments":[{"hexValue":"","id":4817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7091:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4813,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"7060:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7069:4:12","memberName":"call","nodeType":"MemberAccess","src":"7060:13:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4815,"name":"ownerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"7081:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7060:30:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7038:56:12"},{"condition":{"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7108:11:12","subExpression":{"id":4820,"name":"feeSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"7109:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4825,"nodeType":"IfStatement","src":"7104:40:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4822,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"7128:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7128:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4824,"nodeType":"RevertStatement","src":"7121:23:12"}},{"assignments":[4827,null],"declarations":[{"constant":false,"id":4827,"mutability":"mutable","name":"success","nameLocation":"7201:7:12","nodeType":"VariableDeclaration","scope":4856,"src":"7196:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4826,"name":"bool","nodeType":"ElementaryTypeName","src":"7196:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4834,"initialValue":{"arguments":[{"hexValue":"","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7246:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4828,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"7214:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7221:4:12","memberName":"call","nodeType":"MemberAccess","src":"7214:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4830,"name":"prizeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"7233:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7214:31:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7214:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7195:54:12"},{"condition":{"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7263:8:12","subExpression":{"id":4835,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4827,"src":"7264:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4840,"nodeType":"IfStatement","src":"7259:37:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4837,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"7280:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7280:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4839,"nodeType":"RevertStatement","src":"7273:23:12"}},{"eventCall":{"arguments":[{"expression":{"id":4842,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"7338:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4843,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7344:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4358,"src":"7338:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4844,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"7348:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4845,"name":"ownerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"7358:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4841,"name":"OwnerFeeCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"7320:17:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7320:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4847,"nodeType":"EmitStatement","src":"7315:52:12"},{"eventCall":{"arguments":[{"expression":{"id":4849,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"7397:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":4850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7403:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4358,"src":"7397:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4851,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4737,"src":"7407:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4852,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"7415:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4853,"name":"prizeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4766,"src":"7432:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4848,"name":"RoundCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"7382:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7382:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4855,"nodeType":"EmitStatement","src":"7377:67:12"}]},"documentation":{"id":4668,"nodeType":"StructuredDocumentation","src":"5199:56:12","text":" @dev Complete round and select winner"},"functionSelector":"8be48547","id":4857,"implemented":true,"kind":"function","modifiers":[{"id":4671,"kind":"modifierInvocation","modifierName":{"id":4670,"name":"nonReentrant","nameLocations":["5294:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":894,"src":"5294:12:12"},"nodeType":"ModifierInvocation","src":"5294:12:12"}],"name":"completeRound","nameLocation":"5269:13:12","nodeType":"FunctionDefinition","parameters":{"id":4669,"nodeType":"ParameterList","parameters":[],"src":"5282:2:12"},"returnParameters":{"id":4672,"nodeType":"ParameterList","parameters":[],"src":"5307:0:12"},"scope":5554,"src":"5260:2191:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4899,"nodeType":"Block","src":"7691:530:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4865,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"7705:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7712:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7705:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4871,"nodeType":"IfStatement","src":"7701:32:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4868,"name":"ZeroRange","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4475,"src":"7722:9:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7722:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4870,"nodeType":"RevertStatement","src":"7715:18:12"}},{"assignments":[4873],"declarations":[{"constant":false,"id":4873,"mutability":"mutable","name":"randomNumber","nameLocation":"7893:12:12","nodeType":"VariableDeclaration","scope":4899,"src":"7885:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4872,"name":"uint256","nodeType":"ElementaryTypeName","src":"7885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4894,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":4879,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7994:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8000:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"7994:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4881,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8031:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8037:10:12","memberName":"prevrandao","nodeType":"MemberAccess","src":"8031:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4884,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8079:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8085:6:12","memberName":"number","nodeType":"MemberAccess","src":"8079:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8079:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4883,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"8069:9:12","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8118:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8122:6:12","memberName":"sender","nodeType":"MemberAccess","src":"8118:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4877,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7956:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7960:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"7956:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7956:190:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4876,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7929:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:231:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4875,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7908:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4874,"name":"uint256","nodeType":"ElementaryTypeName","src":"7908:7:12","typeDescriptions":{}}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:262:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7885:285:12"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4895,"name":"randomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4873,"src":"8196:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4896,"name":"max","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4860,"src":"8211:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8196:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4864,"id":4898,"nodeType":"Return","src":"8189:25:12"}]},"documentation":{"id":4858,"nodeType":"StructuredDocumentation","src":"7461:151:12","text":" @dev Generate pseudo-random number between 0 and max-1\n @param max Upper bound (exclusive)\n @return Pseudo-random number"},"id":4900,"implemented":true,"kind":"function","modifiers":[],"name":"_pseudoRandomNumber","nameLocation":"7626:19:12","nodeType":"FunctionDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"max","nameLocation":"7654:3:12","nodeType":"VariableDeclaration","scope":4900,"src":"7646:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4859,"name":"uint256","nodeType":"ElementaryTypeName","src":"7646:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7645:13:12"},"returnParameters":{"id":4864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4900,"src":"7682:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4862,"name":"uint256","nodeType":"ElementaryTypeName","src":"7682:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7681:9:12"},"scope":5554,"src":"7617:604:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4913,"nodeType":"Block","src":"8430:41:12","statements":[{"expression":{"baseExpression":{"id":4909,"name":"userTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"8447:11:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":4911,"indexExpression":{"id":4910,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4903,"src":"8459:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8447:17:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":4908,"id":4912,"nodeType":"Return","src":"8440:24:12"}]},"documentation":{"id":4901,"nodeType":"StructuredDocumentation","src":"8231:115:12","text":" @dev Get all tickets of a user\n @param user User address\n @return List of ticket IDs"},"functionSelector":"0484a22f","id":4914,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTickets","nameLocation":"8360:14:12","nodeType":"FunctionDefinition","parameters":{"id":4904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4903,"mutability":"mutable","name":"user","nameLocation":"8383:4:12","nodeType":"VariableDeclaration","scope":4914,"src":"8375:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4902,"name":"address","nodeType":"ElementaryTypeName","src":"8375:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8374:14:12"},"returnParameters":{"id":4908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4914,"src":"8412:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4905,"name":"uint256","nodeType":"ElementaryTypeName","src":"8412:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4906,"nodeType":"ArrayTypeName","src":"8412:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8411:18:12"},"scope":5554,"src":"8351:120:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4927,"nodeType":"Block","src":"8684:45:12","statements":[{"expression":{"baseExpression":{"id":4923,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"8701:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":4925,"indexExpression":{"id":4924,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"8714:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8701:21:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":4922,"id":4926,"nodeType":"Return","src":"8694:28:12"}]},"documentation":{"id":4915,"nodeType":"StructuredDocumentation","src":"8481:115:12","text":" @dev Get all tickets in a round\n @param roundId Round ID\n @return List of ticket IDs"},"functionSelector":"04ad675d","id":4928,"implemented":true,"kind":"function","modifiers":[],"name":"getRoundTickets","nameLocation":"8610:15:12","nodeType":"FunctionDefinition","parameters":{"id":4918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4917,"mutability":"mutable","name":"roundId","nameLocation":"8634:7:12","nodeType":"VariableDeclaration","scope":4928,"src":"8626:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4916,"name":"uint256","nodeType":"ElementaryTypeName","src":"8626:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8625:17:12"},"returnParameters":{"id":4922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4928,"src":"8666:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"8666:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4920,"nodeType":"ArrayTypeName","src":"8666:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"8665:18:12"},"scope":5554,"src":"8601:128:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5120,"nodeType":"Block","src":"9142:1595:12","statements":[{"assignments":[4944],"declarations":[{"constant":false,"id":4944,"mutability":"mutable","name":"ticketIds","nameLocation":"9169:9:12","nodeType":"VariableDeclaration","scope":5120,"src":"9152:26:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4942,"name":"uint256","nodeType":"ElementaryTypeName","src":"9152:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"nodeType":"ArrayTypeName","src":"9152:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4948,"initialValue":{"baseExpression":{"id":4945,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"9181:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":4947,"indexExpression":{"id":4946,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4931,"src":"9194:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9181:21:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9152:50:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4949,"name":"ticketIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"9225:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9235:6:12","memberName":"length","nodeType":"MemberAccess","src":"9225:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9245:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9225:21:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4966,"nodeType":"IfStatement","src":"9221:95:12","trueBody":{"id":4965,"nodeType":"Block","src":"9248:68:12","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":4956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9284:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9270:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4953,"name":"address","nodeType":"ElementaryTypeName","src":"9274:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4954,"nodeType":"ArrayTypeName","src":"9274:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9270:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"arguments":[{"hexValue":"30","id":4961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9302:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9288:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4958,"name":"uint256","nodeType":"ElementaryTypeName","src":"9292:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4959,"nodeType":"ArrayTypeName","src":"9292:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9288:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":4963,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9269:36:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":4939,"id":4964,"nodeType":"Return","src":"9262:43:12"}]}},{"assignments":[4968],"declarations":[{"constant":false,"id":4968,"mutability":"mutable","name":"maxUniqueAddresses","nameLocation":"9388:18:12","nodeType":"VariableDeclaration","scope":5120,"src":"9380:26:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4967,"name":"uint256","nodeType":"ElementaryTypeName","src":"9380:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4971,"initialValue":{"expression":{"id":4969,"name":"ticketIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"9409:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9419:6:12","memberName":"length","nodeType":"MemberAccess","src":"9409:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9380:45:12"},{"assignments":[4976],"declarations":[{"constant":false,"id":4976,"mutability":"mutable","name":"tempAddresses","nameLocation":"9452:13:12","nodeType":"VariableDeclaration","scope":5120,"src":"9435:30:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4974,"name":"address","nodeType":"ElementaryTypeName","src":"9435:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4975,"nodeType":"ArrayTypeName","src":"9435:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4982,"initialValue":{"arguments":[{"id":4980,"name":"maxUniqueAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"9482:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9468:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":4977,"name":"address","nodeType":"ElementaryTypeName","src":"9472:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4978,"nodeType":"ArrayTypeName","src":"9472:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9468:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9435:66:12"},{"assignments":[4987],"declarations":[{"constant":false,"id":4987,"mutability":"mutable","name":"tempCounts","nameLocation":"9528:10:12","nodeType":"VariableDeclaration","scope":5120,"src":"9511:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"9511:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4986,"nodeType":"ArrayTypeName","src":"9511:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4993,"initialValue":{"arguments":[{"id":4991,"name":"maxUniqueAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"9555:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9541:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"9545:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4989,"nodeType":"ArrayTypeName","src":"9545:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9541:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9511:63:12"},{"assignments":[4995],"declarations":[{"constant":false,"id":4995,"mutability":"mutable","name":"uniqueCount","nameLocation":"9592:11:12","nodeType":"VariableDeclaration","scope":5120,"src":"9584:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4994,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4997,"initialValue":{"hexValue":"30","id":4996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9606:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9584:23:12"},{"body":{"id":5070,"nodeType":"Block","src":"9673:635:12","statements":[{"assignments":[5010],"declarations":[{"constant":false,"id":5010,"mutability":"mutable","name":"owner","nameLocation":"9695:5:12","nodeType":"VariableDeclaration","scope":5070,"src":"9687:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5009,"name":"address","nodeType":"ElementaryTypeName","src":"9687:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5017,"initialValue":{"expression":{"baseExpression":{"id":5011,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"9703:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$4380_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Ticket storage ref)"}},"id":5015,"indexExpression":{"baseExpression":{"id":5012,"name":"ticketIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"9711:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5014,"indexExpression":{"id":5013,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"9721:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9711:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9703:21:12","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$4380_storage","typeString":"struct GalileoJackpot.Ticket storage ref"}},"id":5016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9725:5:12","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":4375,"src":"9703:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9687:43:12"},{"assignments":[5019],"declarations":[{"constant":false,"id":5019,"mutability":"mutable","name":"found","nameLocation":"9749:5:12","nodeType":"VariableDeclaration","scope":5070,"src":"9744:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5018,"name":"bool","nodeType":"ElementaryTypeName","src":"9744:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5021,"initialValue":{"hexValue":"66616c7365","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9757:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"9744:18:12"},{"body":{"id":5049,"nodeType":"Block","src":"9887:180:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5032,"name":"tempAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"9909:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5034,"indexExpression":{"id":5033,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"9923:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9909:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5035,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"9929:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9909:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5048,"nodeType":"IfStatement","src":"9905:148:12","trueBody":{"id":5047,"nodeType":"Block","src":"9936:117:12","statements":[{"expression":{"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9958:15:12","subExpression":{"baseExpression":{"id":5037,"name":"tempCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"9958:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5039,"indexExpression":{"id":5038,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"9969:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9958:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5041,"nodeType":"ExpressionStatement","src":"9958:15:12"},{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5042,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"9995:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10003:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9995:12:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5045,"nodeType":"ExpressionStatement","src":"9995:12:12"},{"id":5046,"nodeType":"Break","src":"10029:5:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5026,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"9865:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5027,"name":"uniqueCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"9869:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9865:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5050,"initializationExpression":{"assignments":[5023],"declarations":[{"constant":false,"id":5023,"mutability":"mutable","name":"j","nameLocation":"9858:1:12","nodeType":"VariableDeclaration","scope":5050,"src":"9850:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"9850:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5025,"initialValue":{"hexValue":"30","id":5024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9862:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9850:13:12"},"loopExpression":{"expression":{"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9882:3:12","subExpression":{"id":5029,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5023,"src":"9882:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5031,"nodeType":"ExpressionStatement","src":"9882:3:12"},"nodeType":"ForStatement","src":"9845:222:12"},{"condition":{"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10147:6:12","subExpression":{"id":5051,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5019,"src":"10148:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5069,"nodeType":"IfStatement","src":"10143:155:12","trueBody":{"id":5068,"nodeType":"Block","src":"10155:143:12","statements":[{"expression":{"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5053,"name":"tempAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"10173:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5055,"indexExpression":{"id":5054,"name":"uniqueCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10187:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10173:26:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5056,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"10202:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10173:34:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5058,"nodeType":"ExpressionStatement","src":"10173:34:12"},{"expression":{"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5059,"name":"tempCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"10225:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5061,"indexExpression":{"id":5060,"name":"uniqueCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10236:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10225:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10251:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10225:27:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5064,"nodeType":"ExpressionStatement","src":"10225:27:12"},{"expression":{"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10270:13:12","subExpression":{"id":5065,"name":"uniqueCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10270:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5067,"nodeType":"ExpressionStatement","src":"10270:13:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5002,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"9646:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5003,"name":"ticketIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4944,"src":"9650:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9660:6:12","memberName":"length","nodeType":"MemberAccess","src":"9650:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9646:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5071,"initializationExpression":{"assignments":[4999],"declarations":[{"constant":false,"id":4999,"mutability":"mutable","name":"i","nameLocation":"9639:1:12","nodeType":"VariableDeclaration","scope":5071,"src":"9631:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4998,"name":"uint256","nodeType":"ElementaryTypeName","src":"9631:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5001,"initialValue":{"hexValue":"30","id":5000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9643:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9631:13:12"},"loopExpression":{"expression":{"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9668:3:12","subExpression":{"id":5006,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"9668:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5008,"nodeType":"ExpressionStatement","src":"9668:3:12"},"nodeType":"ForStatement","src":"9626:682:12"},{"expression":{"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5072,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"10374:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5076,"name":"uniqueCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10403:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10389:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5073,"name":"address","nodeType":"ElementaryTypeName","src":"10393:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5074,"nodeType":"ArrayTypeName","src":"10393:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10389:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"10374:41:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5079,"nodeType":"ExpressionStatement","src":"10374:41:12"},{"expression":{"id":5086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5080,"name":"ticketCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"10425:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5084,"name":"uniqueCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10454:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10440:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":5081,"name":"uint256","nodeType":"ElementaryTypeName","src":"10444:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5082,"nodeType":"ArrayTypeName","src":"10444:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10440:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"10425:41:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5087,"nodeType":"ExpressionStatement","src":"10425:41:12"},{"body":{"id":5114,"nodeType":"Block","src":"10573:104:12","statements":[{"expression":{"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5098,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"10587:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5100,"indexExpression":{"id":5099,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"10600:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10587:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5101,"name":"tempAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4976,"src":"10605:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5103,"indexExpression":{"id":5102,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"10619:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10605:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10587:34:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5105,"nodeType":"ExpressionStatement","src":"10587:34:12"},{"expression":{"id":5112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5106,"name":"ticketCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"10635:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5108,"indexExpression":{"id":5107,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"10648:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10635:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5109,"name":"tempCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"10653:10:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":5111,"indexExpression":{"id":5110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"10664:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10653:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10635:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5113,"nodeType":"ExpressionStatement","src":"10635:31:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"10551:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5093,"name":"uniqueCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4995,"src":"10555:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10551:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5115,"initializationExpression":{"assignments":[5089],"declarations":[{"constant":false,"id":5089,"mutability":"mutable","name":"i","nameLocation":"10544:1:12","nodeType":"VariableDeclaration","scope":5115,"src":"10536:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5088,"name":"uint256","nodeType":"ElementaryTypeName","src":"10536:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5091,"initialValue":{"hexValue":"30","id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10548:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10536:13:12"},"loopExpression":{"expression":{"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10568:3:12","subExpression":{"id":5095,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"10568:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5097,"nodeType":"ExpressionStatement","src":"10568:3:12"},"nodeType":"ForStatement","src":"10531:146:12"},{"expression":{"components":[{"id":5116,"name":"participants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4935,"src":"10703:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":5117,"name":"ticketCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4938,"src":"10717:12:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":5118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10702:28:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(address[] memory,uint256[] memory)"}},"functionReturnParameters":4939,"id":5119,"nodeType":"Return","src":"10695:35:12"}]},"documentation":{"id":4929,"nodeType":"StructuredDocumentation","src":"8739:256:12","text":" @dev Get participants and their ticket counts for a specific round\n @param roundId Round ID\n @return participants Array of participant addresses\n @return ticketCounts Array of ticket counts corresponding to participants"},"functionSelector":"1e2d0400","id":5121,"implemented":true,"kind":"function","modifiers":[],"name":"getRoundParticipantsWithCounts","nameLocation":"9009:30:12","nodeType":"FunctionDefinition","parameters":{"id":4932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4931,"mutability":"mutable","name":"roundId","nameLocation":"9048:7:12","nodeType":"VariableDeclaration","scope":5121,"src":"9040:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4930,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9039:17:12"},"returnParameters":{"id":4939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4935,"mutability":"mutable","name":"participants","nameLocation":"9097:12:12","nodeType":"VariableDeclaration","scope":5121,"src":"9080:29:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4933,"name":"address","nodeType":"ElementaryTypeName","src":"9080:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4934,"nodeType":"ArrayTypeName","src":"9080:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4938,"mutability":"mutable","name":"ticketCounts","nameLocation":"9128:12:12","nodeType":"VariableDeclaration","scope":5121,"src":"9111:29:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"9111:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4937,"nodeType":"ArrayTypeName","src":"9111:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"9079:62:12"},"scope":5554,"src":"9000:1737:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5194,"nodeType":"Block","src":"11313:532:12","statements":[{"assignments":[5141],"declarations":[{"constant":false,"id":5141,"mutability":"mutable","name":"round","nameLocation":"11337:5:12","nodeType":"VariableDeclaration","scope":5194,"src":"11323:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"},"typeName":{"id":5140,"nodeType":"UserDefinedTypeName","pathNode":{"id":5139,"name":"Round","nameLocations":["11323:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":4371,"src":"11323:5:12"},"referencedDeclaration":4371,"src":"11323:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"}},"visibility":"internal"}],"id":5145,"initialValue":{"baseExpression":{"id":5142,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"11345:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5144,"indexExpression":{"id":5143,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"11352:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11345:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11323:44:12"},{"assignments":[5147],"declarations":[{"constant":false,"id":5147,"mutability":"mutable","name":"active","nameLocation":"11391:6:12","nodeType":"VariableDeclaration","scope":5194,"src":"11386:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5146,"name":"bool","nodeType":"ElementaryTypeName","src":"11386:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5156,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5148,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"11400:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11406:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"11400:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11418:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11400:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11423:16:12","subExpression":{"expression":{"id":5152,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"11424:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11430:9:12","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":4370,"src":"11424:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11400:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"11386:53:12"},{"assignments":[5158],"declarations":[{"constant":false,"id":5158,"mutability":"mutable","name":"remaining","nameLocation":"11457:9:12","nodeType":"VariableDeclaration","scope":5194,"src":"11449:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5157,"name":"uint256","nodeType":"ElementaryTypeName","src":"11449:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5160,"initialValue":{"hexValue":"30","id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11469:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11449:21:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5161,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"11493:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5162,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11503:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11509:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"11503:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5164,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"11521:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11527:7:12","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4362,"src":"11521:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11503:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11493:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5177,"nodeType":"IfStatement","src":"11489:115:12","trueBody":{"id":5176,"nodeType":"Block","src":"11536:68:12","statements":[{"expression":{"id":5174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5168,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"11550:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5169,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"11562:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11568:7:12","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4362,"src":"11562:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":5171,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11578:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11584:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"11578:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11562:31:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11550:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5175,"nodeType":"ExpressionStatement","src":"11550:43:12"}]}},{"expression":{"components":[{"expression":{"id":5178,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"11643:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11649:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4358,"src":"11643:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5180,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"11665:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11671:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"11665:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5182,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"11694:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11700:7:12","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4362,"src":"11694:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5184,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5141,"src":"11721:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11727:9:12","memberName":"totalPool","nodeType":"MemberAccess","referencedDeclaration":4364,"src":"11721:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":5186,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"11750:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":5188,"indexExpression":{"id":5187,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"11763:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11750:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11779:6:12","memberName":"length","nodeType":"MemberAccess","src":"11750:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5190,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"11799:6:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5191,"name":"remaining","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5158,"src":"11819:9:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11629:209:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,bool,uint256)"}},"functionReturnParameters":5138,"id":5193,"nodeType":"Return","src":"11622:216:12"}]},"documentation":{"id":5122,"nodeType":"StructuredDocumentation","src":"10747:325:12","text":" @dev Get current round information\n @return id Round ID\n @return startTime Start time\n @return endTime End time\n @return totalPool Total pool\n @return numTickets Number of tickets\n @return isActive Whether the round is active\n @return timeLeft Time left in seconds"},"functionSelector":"747dff42","id":5195,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentRoundInfo","nameLocation":"11086:19:12","nodeType":"FunctionDefinition","parameters":{"id":5123,"nodeType":"ParameterList","parameters":[],"src":"11105:2:12"},"returnParameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"id","nameLocation":"11148:2:12","nodeType":"VariableDeclaration","scope":5195,"src":"11140:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5124,"name":"uint256","nodeType":"ElementaryTypeName","src":"11140:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5127,"mutability":"mutable","name":"startTime","nameLocation":"11168:9:12","nodeType":"VariableDeclaration","scope":5195,"src":"11160:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5126,"name":"uint256","nodeType":"ElementaryTypeName","src":"11160:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5129,"mutability":"mutable","name":"endTime","nameLocation":"11195:7:12","nodeType":"VariableDeclaration","scope":5195,"src":"11187:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5128,"name":"uint256","nodeType":"ElementaryTypeName","src":"11187:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5131,"mutability":"mutable","name":"totalPool","nameLocation":"11220:9:12","nodeType":"VariableDeclaration","scope":5195,"src":"11212:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5130,"name":"uint256","nodeType":"ElementaryTypeName","src":"11212:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5133,"mutability":"mutable","name":"numTickets","nameLocation":"11247:10:12","nodeType":"VariableDeclaration","scope":5195,"src":"11239:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5132,"name":"uint256","nodeType":"ElementaryTypeName","src":"11239:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5135,"mutability":"mutable","name":"isActive","nameLocation":"11272:8:12","nodeType":"VariableDeclaration","scope":5195,"src":"11267:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5134,"name":"bool","nodeType":"ElementaryTypeName","src":"11267:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5137,"mutability":"mutable","name":"timeLeft","nameLocation":"11298:8:12","nodeType":"VariableDeclaration","scope":5195,"src":"11290:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11290:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11130:182:12"},"scope":5554,"src":"11077:768:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5291,"nodeType":"Block","src":"12077:753:12","statements":[{"assignments":[5206],"declarations":[{"constant":false,"id":5206,"mutability":"mutable","name":"completedRounds","nameLocation":"12143:15:12","nodeType":"VariableDeclaration","scope":5291,"src":"12135:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5205,"name":"uint256","nodeType":"ElementaryTypeName","src":"12135:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5208,"initialValue":{"hexValue":"30","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12161:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12135:27:12"},{"body":{"id":5228,"nodeType":"Block","src":"12217:99:12","statements":[{"condition":{"expression":{"baseExpression":{"id":5219,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"12235:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5221,"indexExpression":{"id":5220,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"12242:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12235:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":5222,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12245:9:12","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":4370,"src":"12235:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5227,"nodeType":"IfStatement","src":"12231:75:12","trueBody":{"id":5226,"nodeType":"Block","src":"12256:50:12","statements":[{"expression":{"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12274:17:12","subExpression":{"id":5223,"name":"completedRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"12274:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5225,"nodeType":"ExpressionStatement","src":"12274:17:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"12192:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5214,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"12196:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12192:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5229,"initializationExpression":{"assignments":[5210],"declarations":[{"constant":false,"id":5210,"mutability":"mutable","name":"i","nameLocation":"12185:1:12","nodeType":"VariableDeclaration","scope":5229,"src":"12177:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5209,"name":"uint256","nodeType":"ElementaryTypeName","src":"12177:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5212,"initialValue":{"hexValue":"31","id":5211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12189:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"12177:13:12"},"loopExpression":{"expression":{"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12212:3:12","subExpression":{"id":5216,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5210,"src":"12212:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5218,"nodeType":"ExpressionStatement","src":"12212:3:12"},"nodeType":"ForStatement","src":"12172:144:12"},{"assignments":[5231],"declarations":[{"constant":false,"id":5231,"mutability":"mutable","name":"resultLimit","nameLocation":"12380:11:12","nodeType":"VariableDeclaration","scope":5291,"src":"12372:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5230,"name":"uint256","nodeType":"ElementaryTypeName","src":"12372:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5237,"initialValue":{"arguments":[{"id":5234,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5198,"src":"12403:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5235,"name":"completedRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"12410:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5232,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"12394:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2563_$","typeString":"type(library Math)"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12399:3:12","memberName":"min","nodeType":"MemberAccess","referencedDeclaration":1269,"src":"12394:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12394:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12372:54:12"},{"assignments":[5242],"declarations":[{"constant":false,"id":5242,"mutability":"mutable","name":"result","nameLocation":"12451:6:12","nodeType":"VariableDeclaration","scope":5291,"src":"12436:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpot.Round[]"},"typeName":{"baseType":{"id":5240,"nodeType":"UserDefinedTypeName","pathNode":{"id":5239,"name":"Round","nameLocations":["12436:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":4371,"src":"12436:5:12"},"referencedDeclaration":4371,"src":"12436:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"}},"id":5241,"nodeType":"ArrayTypeName","src":"12436:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$4371_storage_$dyn_storage_ptr","typeString":"struct GalileoJackpot.Round[]"}},"visibility":"internal"}],"id":5249,"initialValue":{"arguments":[{"id":5247,"name":"resultLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"12472:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"12460:11:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct GalileoJackpot.Round memory[] memory)"},"typeName":{"baseType":{"id":5244,"nodeType":"UserDefinedTypeName","pathNode":{"id":5243,"name":"Round","nameLocations":["12464:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":4371,"src":"12464:5:12"},"referencedDeclaration":4371,"src":"12464:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"}},"id":5245,"nodeType":"ArrayTypeName","src":"12464:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$4371_storage_$dyn_storage_ptr","typeString":"struct GalileoJackpot.Round[]"}}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12460:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpot.Round memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12436:48:12"},{"assignments":[5251],"declarations":[{"constant":false,"id":5251,"mutability":"mutable","name":"resultIndex","nameLocation":"12545:11:12","nodeType":"VariableDeclaration","scope":5291,"src":"12537:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5250,"name":"uint256","nodeType":"ElementaryTypeName","src":"12537:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5253,"initialValue":{"hexValue":"30","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12559:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12537:23:12"},{"body":{"id":5287,"nodeType":"Block","src":"12648:144:12","statements":[{"condition":{"expression":{"baseExpression":{"id":5270,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"12666:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5272,"indexExpression":{"id":5271,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"12673:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12666:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":5273,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12676:9:12","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":4370,"src":"12666:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5286,"nodeType":"IfStatement","src":"12662:120:12","trueBody":{"id":5285,"nodeType":"Block","src":"12687:95:12","statements":[{"expression":{"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"12705:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpot.Round memory[] memory"}},"id":5276,"indexExpression":{"id":5275,"name":"resultIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"12712:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12705:19:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_memory_ptr","typeString":"struct GalileoJackpot.Round memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5277,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"12727:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5279,"indexExpression":{"id":5278,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"12734:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12727:9:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"src":"12705:31:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_memory_ptr","typeString":"struct GalileoJackpot.Round memory"}},"id":5281,"nodeType":"ExpressionStatement","src":"12705:31:12"},{"expression":{"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12754:13:12","subExpression":{"id":5282,"name":"resultIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"12754:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5284,"nodeType":"ExpressionStatement","src":"12754:13:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5260,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"12607:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12611:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12607:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5263,"name":"resultIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5251,"src":"12616:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5264,"name":"resultLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"12630:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12616:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12607:34:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5288,"initializationExpression":{"assignments":[5255],"declarations":[{"constant":false,"id":5255,"mutability":"mutable","name":"i","nameLocation":"12583:1:12","nodeType":"VariableDeclaration","scope":5288,"src":"12575:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5254,"name":"uint256","nodeType":"ElementaryTypeName","src":"12575:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5259,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5256,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"12587:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12604:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12587:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12575:30:12"},"loopExpression":{"expression":{"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"12643:3:12","subExpression":{"id":5267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5255,"src":"12643:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5269,"nodeType":"ExpressionStatement","src":"12643:3:12"},"nodeType":"ForStatement","src":"12570:222:12"},{"expression":{"id":5289,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"12817:6:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpot.Round memory[] memory"}},"functionReturnParameters":5204,"id":5290,"nodeType":"Return","src":"12810:13:12"}]},"documentation":{"id":5196,"nodeType":"StructuredDocumentation","src":"11855:138:12","text":" @dev Get round history\n @param limit Maximum number of rounds to retrieve\n @return List of completed rounds"},"functionSelector":"9506a4ec","id":5292,"implemented":true,"kind":"function","modifiers":[],"name":"getRoundHistory","nameLocation":"12007:15:12","nodeType":"FunctionDefinition","parameters":{"id":5199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5198,"mutability":"mutable","name":"limit","nameLocation":"12031:5:12","nodeType":"VariableDeclaration","scope":5292,"src":"12023:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5197,"name":"uint256","nodeType":"ElementaryTypeName","src":"12023:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12022:15:12"},"returnParameters":{"id":5204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5203,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5292,"src":"12061:14:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpot.Round[]"},"typeName":{"baseType":{"id":5201,"nodeType":"UserDefinedTypeName","pathNode":{"id":5200,"name":"Round","nameLocations":["12061:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":4371,"src":"12061:5:12"},"referencedDeclaration":4371,"src":"12061:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"}},"id":5202,"nodeType":"ArrayTypeName","src":"12061:7:12","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Round_$4371_storage_$dyn_storage_ptr","typeString":"struct GalileoJackpot.Round[]"}},"visibility":"internal"}],"src":"12060:16:12"},"scope":5554,"src":"11998:832:12","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5314,"nodeType":"Block","src":"12993:99:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5300,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"13007:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13028:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13020:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5301,"name":"address","nodeType":"ElementaryTypeName","src":"13020:7:12","typeDescriptions":{}}},"id":5304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13020:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13007:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5309,"nodeType":"IfStatement","src":"13003:52:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5306,"name":"InvalidAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4471,"src":"13039:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13039:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5308,"nodeType":"RevertStatement","src":"13032:23:12"}},{"expression":{"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5310,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"13065:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5311,"name":"_treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"13076:9:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13065:20:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5313,"nodeType":"ExpressionStatement","src":"13065:20:12"}]},"documentation":{"id":5293,"nodeType":"StructuredDocumentation","src":"12840:89:12","text":" @dev Set treasury address\n @param _treasury New treasury address"},"functionSelector":"f0f44260","id":5315,"implemented":true,"kind":"function","modifiers":[{"id":5298,"kind":"modifierInvocation","modifierName":{"id":5297,"name":"onlyOwner","nameLocations":["12983:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"12983:9:12"},"nodeType":"ModifierInvocation","src":"12983:9:12"}],"name":"setTreasury","nameLocation":"12943:11:12","nodeType":"FunctionDefinition","parameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"_treasury","nameLocation":"12963:9:12","nodeType":"VariableDeclaration","scope":5315,"src":"12955:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5294,"name":"address","nodeType":"ElementaryTypeName","src":"12955:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12954:19:12"},"returnParameters":{"id":5299,"nodeType":"ParameterList","parameters":[],"src":"12993:0:12"},"scope":5554,"src":"12934:158:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5371,"nodeType":"Block","src":"13231:432:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5321,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"13245:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5323,"indexExpression":{"id":5322,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13252:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13245:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":5324,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13268:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"13245:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13281:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13245:37:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5330,"nodeType":"IfStatement","src":"13241:73:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5327,"name":"RoundAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"13291:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13291:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5329,"nodeType":"RevertStatement","src":"13284:30:12"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5331,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"13328:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":5333,"indexExpression":{"id":5332,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13341:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13328:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13357:6:12","memberName":"length","nodeType":"MemberAccess","src":"13328:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":5335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13366:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13328:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5340,"nodeType":"IfStatement","src":"13324:70:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5337,"name":"NotEnoughTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"13376:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13376:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5339,"nodeType":"RevertStatement","src":"13369:25:12"}},{"expression":{"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5341,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"13413:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5343,"indexExpression":{"id":5342,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13420:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13413:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":5344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13436:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"13413:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5345,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13448:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13454:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"13448:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13413:50:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5348,"nodeType":"ExpressionStatement","src":"13413:50:12"},{"expression":{"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5349,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"13473:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5351,"indexExpression":{"id":5350,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13480:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13473:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":5352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"13496:7:12","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4362,"src":"13473:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5353,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13506:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13512:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"13506:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5355,"name":"ROUND_DURATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"13524:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13506:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13473:65:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5358,"nodeType":"ExpressionStatement","src":"13473:65:12"},{"eventCall":{"arguments":[{"id":5360,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13575:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":5361,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"13591:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5363,"indexExpression":{"id":5362,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13598:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13591:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":5364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13614:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"13591:32:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":5365,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"13625:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5367,"indexExpression":{"id":5366,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13632:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13625:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":5368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13648:7:12","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":4362,"src":"13625:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5359,"name":"RoundStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"13562:12:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13562:94:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5370,"nodeType":"EmitStatement","src":"13557:99:12"}]},"documentation":{"id":5316,"nodeType":"StructuredDocumentation","src":"13102:75:12","text":" @dev For testing only - function to manually start round"},"functionSelector":"cdfdf7e2","id":5372,"implemented":true,"kind":"function","modifiers":[{"id":5319,"kind":"modifierInvocation","modifierName":{"id":5318,"name":"onlyOwner","nameLocations":["13221:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13221:9:12"},"nodeType":"ModifierInvocation","src":"13221:9:12"}],"name":"startRoundManually","nameLocation":"13191:18:12","nodeType":"FunctionDefinition","parameters":{"id":5317,"nodeType":"ParameterList","parameters":[],"src":"13209:2:12"},"returnParameters":{"id":5320,"nodeType":"ParameterList","parameters":[],"src":"13231:0:12"},"scope":5554,"src":"13182:481:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5552,"nodeType":"Block","src":"13794:2072:12","statements":[{"assignments":[5380],"declarations":[{"constant":false,"id":5380,"mutability":"mutable","name":"round","nameLocation":"13818:5:12","nodeType":"VariableDeclaration","scope":5552,"src":"13804:19:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"},"typeName":{"id":5379,"nodeType":"UserDefinedTypeName","pathNode":{"id":5378,"name":"Round","nameLocations":["13804:5:12"],"nodeType":"IdentifierPath","referencedDeclaration":4371,"src":"13804:5:12"},"referencedDeclaration":4371,"src":"13804:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round"}},"visibility":"internal"}],"id":5384,"initialValue":{"baseExpression":{"id":5381,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"13826:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5383,"indexExpression":{"id":5382,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"13833:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13826:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13804:44:12"},{"condition":{"expression":{"id":5385,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"13871:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13877:9:12","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":4370,"src":"13871:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5390,"nodeType":"IfStatement","src":"13867:51:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5387,"name":"RoundAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"13895:21:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5389,"nodeType":"RevertStatement","src":"13888:30:12"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5391,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"13932:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5392,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13938:9:12","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":4360,"src":"13932:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13951:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13932:20:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5398,"nodeType":"IfStatement","src":"13928:50:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5395,"name":"RoundNotStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"13961:15:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13961:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5397,"nodeType":"RevertStatement","src":"13954:24:12"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5399,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"13992:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":5401,"indexExpression":{"id":5400,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14005:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13992:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14021:6:12","memberName":"length","nodeType":"MemberAccess","src":"13992:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":5403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14030:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13992:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"13988:70:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5405,"name":"NotEnoughTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4469,"src":"14040:16:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14040:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5407,"nodeType":"RevertStatement","src":"14033:25:12"}},{"expression":{"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5409,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14112:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14118:9:12","memberName":"completed","nodeType":"MemberAccess","referencedDeclaration":4370,"src":"14112:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":5412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14130:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14112:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5414,"nodeType":"ExpressionStatement","src":"14112:22:12"},{"assignments":[5416],"declarations":[{"constant":false,"id":5416,"mutability":"mutable","name":"ticketIndex","nameLocation":"14194:11:12","nodeType":"VariableDeclaration","scope":5552,"src":"14186:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5415,"name":"uint256","nodeType":"ElementaryTypeName","src":"14186:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5423,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":5418,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"14228:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":5420,"indexExpression":{"id":5419,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14241:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14228:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14257:6:12","memberName":"length","nodeType":"MemberAccess","src":"14228:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5417,"name":"_pseudoRandomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4900,"src":"14208:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":5422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14208:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14186:78:12"},{"assignments":[5425],"declarations":[{"constant":false,"id":5425,"mutability":"mutable","name":"winningTicketId","nameLocation":"14282:15:12","nodeType":"VariableDeclaration","scope":5552,"src":"14274:23:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5424,"name":"uint256","nodeType":"ElementaryTypeName","src":"14274:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5431,"initialValue":{"baseExpression":{"baseExpression":{"id":5426,"name":"roundTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"14300:12:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(uint256 => uint256[] storage ref)"}},"id":5428,"indexExpression":{"id":5427,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"14313:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14300:28:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5430,"indexExpression":{"id":5429,"name":"ticketIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"14329:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14300:41:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14274:67:12"},{"assignments":[5433],"declarations":[{"constant":false,"id":5433,"mutability":"mutable","name":"winner","nameLocation":"14359:6:12","nodeType":"VariableDeclaration","scope":5552,"src":"14351:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5432,"name":"address","nodeType":"ElementaryTypeName","src":"14351:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5438,"initialValue":{"expression":{"baseExpression":{"id":5434,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4405,"src":"14368:7:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Ticket_$4380_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Ticket storage ref)"}},"id":5436,"indexExpression":{"id":5435,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"14376:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14368:24:12","typeDescriptions":{"typeIdentifier":"t_struct$_Ticket_$4380_storage","typeString":"struct GalileoJackpot.Ticket storage ref"}},"id":5437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14393:5:12","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":4375,"src":"14368:30:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14351:47:12"},{"expression":{"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5439,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14446:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14452:6:12","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":4366,"src":"14446:12:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5442,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"14461:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14446:21:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5444,"nodeType":"ExpressionStatement","src":"14446:21:12"},{"expression":{"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":5445,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14477:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14483:15:12","memberName":"winningTicketId","nodeType":"MemberAccess","referencedDeclaration":4368,"src":"14477:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5448,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"14501:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:39:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5450,"nodeType":"ExpressionStatement","src":"14477:39:12"},{"assignments":[5452],"declarations":[{"constant":false,"id":5452,"mutability":"mutable","name":"ownerFee","nameLocation":"14591:8:12","nodeType":"VariableDeclaration","scope":5552,"src":"14583:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"14583:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5460,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5453,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14603:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5454,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14609:9:12","memberName":"totalPool","nodeType":"MemberAccess","referencedDeclaration":4364,"src":"14603:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5455,"name":"OWNER_FEE_PERCENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4389,"src":"14621:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14603:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14602:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14642:3:12","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"14602:43:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14583:62:12"},{"assignments":[5462],"declarations":[{"constant":false,"id":5462,"mutability":"mutable","name":"prizeAmount","nameLocation":"14724:11:12","nodeType":"VariableDeclaration","scope":5552,"src":"14716:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5461,"name":"uint256","nodeType":"ElementaryTypeName","src":"14716:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5467,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5463,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14738:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14744:9:12","memberName":"totalPool","nodeType":"MemberAccess","referencedDeclaration":4364,"src":"14738:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5465,"name":"ownerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"14756:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14738:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14716:48:12"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5468,"name":"historyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"14845:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14872:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14864:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5469,"name":"address","nodeType":"ElementaryTypeName","src":"14864:7:12","typeDescriptions":{}}},"id":5472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14864:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14845:29:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5486,"nodeType":"IfStatement","src":"14841:238:12","trueBody":{"id":5485,"nodeType":"Block","src":"14876:203:12","statements":[{"expression":{"arguments":[{"expression":{"id":5478,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"14960:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5479,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14966:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4358,"src":"14960:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5480,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"14986:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5481,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"15010:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5482,"name":"prizeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"15043:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":5475,"name":"historyContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"14913:15:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5474,"name":"IGalileoJackpotHistory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"14890:22:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGalileoJackpotHistory_$4347_$","typeString":"type(contract IGalileoJackpotHistory)"}},"id":5476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14890:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGalileoJackpotHistory_$4347","typeString":"contract IGalileoJackpotHistory"}},"id":5477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14930:12:12","memberName":"recordWinner","nodeType":"MemberAccess","referencedDeclaration":4346,"src":"14890:52:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256) external"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14890:178:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5484,"nodeType":"ExpressionStatement","src":"14890:178:12"}]}},{"expression":{"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15126:16:12","subExpression":{"id":5487,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"15126:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5489,"nodeType":"ExpressionStatement","src":"15126:16:12"},{"expression":{"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5490,"name":"rounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"15152:6:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Round_$4371_storage_$","typeString":"mapping(uint256 => struct GalileoJackpot.Round storage ref)"}},"id":5492,"indexExpression":{"id":5491,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"15159:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15152:22:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5494,"name":"currentRoundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4392,"src":"15201:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15240:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":5496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15264:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":5497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15290:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":5500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15321:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15313:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5498,"name":"address","nodeType":"ElementaryTypeName","src":"15313:7:12","typeDescriptions":{}}},"id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15313:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":5502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15354:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":5503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15380:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5493,"name":"Round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4371,"src":"15177:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Round_$4371_storage_ptr_$","typeString":"type(struct GalileoJackpot.Round storage pointer)"}},"id":5504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["15197:2:12","15229:9:12","15255:7:12","15279:9:12","15305:6:12","15337:15:12","15369:9:12"],"names":["id","startTime","endTime","totalPool","winner","winningTicketId","completed"],"nodeType":"FunctionCall","src":"15177:219:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_memory_ptr","typeString":"struct GalileoJackpot.Round memory"}},"src":"15152:244:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage","typeString":"struct GalileoJackpot.Round storage ref"}},"id":5506,"nodeType":"ExpressionStatement","src":"15152:244:12"},{"assignments":[5508,null],"declarations":[{"constant":false,"id":5508,"mutability":"mutable","name":"feeSuccess","nameLocation":"15459:10:12","nodeType":"VariableDeclaration","scope":5552,"src":"15454:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5507,"name":"bool","nodeType":"ElementaryTypeName","src":"15454:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5515,"initialValue":{"arguments":[{"hexValue":"","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15506:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":5509,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"15475:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15484:4:12","memberName":"call","nodeType":"MemberAccess","src":"15475:13:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":5511,"name":"ownerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"15496:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15475:30:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15475:34:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"15453:56:12"},{"condition":{"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15523:11:12","subExpression":{"id":5516,"name":"feeSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5508,"src":"15524:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5521,"nodeType":"IfStatement","src":"15519:40:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5518,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"15543:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5520,"nodeType":"RevertStatement","src":"15536:23:12"}},{"assignments":[5523,null],"declarations":[{"constant":false,"id":5523,"mutability":"mutable","name":"success","nameLocation":"15616:7:12","nodeType":"VariableDeclaration","scope":5552,"src":"15611:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5522,"name":"bool","nodeType":"ElementaryTypeName","src":"15611:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":5530,"initialValue":{"arguments":[{"hexValue":"","id":5528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15661:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":5524,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"15629:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15636:4:12","memberName":"call","nodeType":"MemberAccess","src":"15629:11:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":5526,"name":"prizeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"15648:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"15629:31:12","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15629:35:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"15610:54:12"},{"condition":{"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15678:8:12","subExpression":{"id":5531,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5523,"src":"15679:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5536,"nodeType":"IfStatement","src":"15674:37:12","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5533,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"15695:14:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15695:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5535,"nodeType":"RevertStatement","src":"15688:23:12"}},{"eventCall":{"arguments":[{"expression":{"id":5538,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"15753:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5539,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15759:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4358,"src":"15753:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5540,"name":"treasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"15763:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5541,"name":"ownerFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5452,"src":"15773:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5537,"name":"OwnerFeeCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"15735:17:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15735:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5543,"nodeType":"EmitStatement","src":"15730:52:12"},{"eventCall":{"arguments":[{"expression":{"id":5545,"name":"round","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"15812:5:12","typeDescriptions":{"typeIdentifier":"t_struct$_Round_$4371_storage_ptr","typeString":"struct GalileoJackpot.Round storage pointer"}},"id":5546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15818:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":4358,"src":"15812:8:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5547,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5433,"src":"15822:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5548,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5425,"src":"15830:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5549,"name":"prizeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"15847:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5544,"name":"RoundCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"15797:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15797:62:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5551,"nodeType":"EmitStatement","src":"15792:67:12"}]},"documentation":{"id":5373,"nodeType":"StructuredDocumentation","src":"13673:63:12","text":" @dev Emergency round completion (owner only)"},"functionSelector":"8274627f","id":5553,"implemented":true,"kind":"function","modifiers":[{"id":5376,"kind":"modifierInvocation","modifierName":{"id":5375,"name":"onlyOwner","nameLocations":["13784:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"13784:9:12"},"nodeType":"ModifierInvocation","src":"13784:9:12"}],"name":"emergencyCompleteRound","nameLocation":"13750:22:12","nodeType":"FunctionDefinition","parameters":{"id":5374,"nodeType":"ParameterList","parameters":[],"src":"13772:2:12"},"returnParameters":{"id":5377,"nodeType":"ParameterList","parameters":[],"src":"13794:0:12"},"scope":5554,"src":"13741:2125:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":5555,"src":"614:15254:12","usedErrors":[13,18,875,4461,4463,4465,4467,4469,4471,4473,4475],"usedEvents":[24,4429,4437,4447,4455,4459]}],"src":"32:15836:12"},"id":12},"contracts/GalileoJackpotHistory.sol":{"ast":{"absolutePath":"contracts/GalileoJackpotHistory.sol","exportedSymbols":{"Context":[809],"GalileoJackpotHistory":[5814],"Ownable":[147]},"id":5815,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5556,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"33:24:13"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5557,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5815,"sourceUnit":148,"src":"61:52:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5559,"name":"Ownable","nameLocations":["252:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"252:7:13"},"id":5560,"nodeType":"InheritanceSpecifier","src":"252:7:13"}],"canonicalName":"GalileoJackpotHistory","contractDependencies":[],"contractKind":"contract","documentation":{"id":5558,"nodeType":"StructuredDocumentation","src":"117:99:13","text":" @title GalileoJackpotHistory\n @dev Contract to store the history of jackpot winners"},"fullyImplemented":true,"id":5814,"linearizedBaseContracts":[5814,147,809],"name":"GalileoJackpotHistory","nameLocation":"227:21:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"GalileoJackpotHistory.WinnerInfo","id":5571,"members":[{"constant":false,"id":5562,"mutability":"mutable","name":"roundId","nameLocation":"334:7:13","nodeType":"VariableDeclaration","scope":5571,"src":"326:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5561,"name":"uint256","nodeType":"ElementaryTypeName","src":"326:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5564,"mutability":"mutable","name":"winner","nameLocation":"360:6:13","nodeType":"VariableDeclaration","scope":5571,"src":"352:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5563,"name":"address","nodeType":"ElementaryTypeName","src":"352:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5566,"mutability":"mutable","name":"winningTicketId","nameLocation":"385:15:13","nodeType":"VariableDeclaration","scope":5571,"src":"377:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5565,"name":"uint256","nodeType":"ElementaryTypeName","src":"377:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5568,"mutability":"mutable","name":"prizeAmount","nameLocation":"419:11:13","nodeType":"VariableDeclaration","scope":5571,"src":"411:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5567,"name":"uint256","nodeType":"ElementaryTypeName","src":"411:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5570,"mutability":"mutable","name":"timestamp","nameLocation":"449:9:13","nodeType":"VariableDeclaration","scope":5571,"src":"441:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"441:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"WinnerInfo","nameLocation":"304:10:13","nodeType":"StructDefinition","scope":5814,"src":"297:169:13","visibility":"public"},{"constant":false,"functionSelector":"a2fb1175","id":5575,"mutability":"mutable","name":"winners","nameLocation":"527:7:13","nodeType":"VariableDeclaration","scope":5814,"src":"507:27:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage","typeString":"struct GalileoJackpotHistory.WinnerInfo[]"},"typeName":{"baseType":{"id":5573,"nodeType":"UserDefinedTypeName","pathNode":{"id":5572,"name":"WinnerInfo","nameLocations":["507:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":5571,"src":"507:10:13"},"referencedDeclaration":5571,"src":"507:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo"}},"id":5574,"nodeType":"ArrayTypeName","src":"507:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"220002e0","id":5579,"mutability":"mutable","name":"roundToWinnerIndex","nameLocation":"633:18:13","nodeType":"VariableDeclaration","scope":5814,"src":"598:53:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":5578,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5576,"name":"uint256","nodeType":"ElementaryTypeName","src":"606:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"598:27:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5577,"name":"uint256","nodeType":"ElementaryTypeName","src":"617:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"f489fc79","id":5584,"mutability":"mutable","name":"winnerRounds","nameLocation":"761:12:13","nodeType":"VariableDeclaration","scope":5814,"src":"724:49:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":5583,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5580,"name":"address","nodeType":"ElementaryTypeName","src":"732:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"724:29:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":5581,"name":"uint256","nodeType":"ElementaryTypeName","src":"743:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5582,"nodeType":"ArrayTypeName","src":"743:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"7ae78830003cfb028adc9815a8e7f9d20dc68d9f8bd0130547caf8ce89550e4a","id":5594,"name":"WinnerRecorded","nameLocation":"828:14:13","nodeType":"EventDefinition","parameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"indexed":true,"mutability":"mutable","name":"roundId","nameLocation":"859:7:13","nodeType":"VariableDeclaration","scope":5594,"src":"843:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5585,"name":"uint256","nodeType":"ElementaryTypeName","src":"843:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5588,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"884:6:13","nodeType":"VariableDeclaration","scope":5594,"src":"868:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5587,"name":"address","nodeType":"ElementaryTypeName","src":"868:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5590,"indexed":false,"mutability":"mutable","name":"winningTicketId","nameLocation":"900:15:13","nodeType":"VariableDeclaration","scope":5594,"src":"892:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5589,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5592,"indexed":false,"mutability":"mutable","name":"prizeAmount","nameLocation":"925:11:13","nodeType":"VariableDeclaration","scope":5594,"src":"917:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5591,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"842:95:13"},"src":"822:116:13"},{"constant":false,"functionSelector":"4255e808","id":5596,"mutability":"mutable","name":"jackpotContract","nameLocation":"1016:15:13","nodeType":"VariableDeclaration","scope":5814,"src":"1001:30:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5595,"name":"address","nodeType":"ElementaryTypeName","src":"1001:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"errorSelector":"344fd586","id":5598,"name":"UnauthorizedAccess","nameLocation":"1088:18:13","nodeType":"ErrorDefinition","parameters":{"id":5597,"nodeType":"ParameterList","parameters":[],"src":"1106:2:13"},"src":"1082:27:13"},{"body":{"id":5605,"nodeType":"Block","src":"1155:2:13","statements":[]},"id":5606,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":5601,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1143:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1147:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1143:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5603,"kind":"baseConstructorSpecifier","modifierName":{"id":5600,"name":"Ownable","nameLocations":["1135:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"1135:7:13"},"nodeType":"ModifierInvocation","src":"1135:19:13"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[],"src":"1132:2:13"},"returnParameters":{"id":5604,"nodeType":"ParameterList","parameters":[],"src":"1155:0:13"},"scope":5814,"src":"1121:36:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5618,"nodeType":"Block","src":"1380:53:13","statements":[{"expression":{"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5614,"name":"jackpotContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"1391:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5615,"name":"_jackpotContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5609,"src":"1409:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1391:34:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5617,"nodeType":"ExpressionStatement","src":"1391:34:13"}]},"documentation":{"id":5607,"nodeType":"StructuredDocumentation","src":"1169:132:13","text":" @dev Set the main jackpot contract address\n @param _jackpotContract Address of the main jackpot contract"},"functionSelector":"ed893940","id":5619,"implemented":true,"kind":"function","modifiers":[{"id":5612,"kind":"modifierInvocation","modifierName":{"id":5611,"name":"onlyOwner","nameLocations":["1370:9:13"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1370:9:13"},"nodeType":"ModifierInvocation","src":"1370:9:13"}],"name":"setJackpotContract","nameLocation":"1316:18:13","nodeType":"FunctionDefinition","parameters":{"id":5610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5609,"mutability":"mutable","name":"_jackpotContract","nameLocation":"1343:16:13","nodeType":"VariableDeclaration","scope":5619,"src":"1335:24:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5608,"name":"address","nodeType":"ElementaryTypeName","src":"1335:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1334:26:13"},"returnParameters":{"id":5613,"nodeType":"ParameterList","parameters":[],"src":"1380:0:13"},"scope":5814,"src":"1307:126:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5686,"nodeType":"Block","src":"1853:780:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5631,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1921:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1925:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1921:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5633,"name":"jackpotContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"1935:15:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1921:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5635,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1954:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1958:6:13","memberName":"sender","nodeType":"MemberAccess","src":"1954:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1968:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1968:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1954:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1921:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5644,"nodeType":"IfStatement","src":"1917:87:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5641,"name":"UnauthorizedAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"1984:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1984:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5643,"nodeType":"RevertStatement","src":"1977:27:13"}},{"assignments":[5647],"declarations":[{"constant":false,"id":5647,"mutability":"mutable","name":"newWinner","nameLocation":"2074:9:13","nodeType":"VariableDeclaration","scope":5686,"src":"2056:27:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo"},"typeName":{"id":5646,"nodeType":"UserDefinedTypeName","pathNode":{"id":5645,"name":"WinnerInfo","nameLocations":["2056:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":5571,"src":"2056:10:13"},"referencedDeclaration":5571,"src":"2056:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo"}},"visibility":"internal"}],"id":5656,"initialValue":{"arguments":[{"id":5649,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"2121:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5650,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"2151:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5651,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"2189:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5652,"name":"prizeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"2232:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5653,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2269:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2275:9:13","memberName":"timestamp","nodeType":"MemberAccess","src":"2269:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5648,"name":"WinnerInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5571,"src":"2086:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_WinnerInfo_$5571_storage_ptr_$","typeString":"type(struct GalileoJackpotHistory.WinnerInfo storage pointer)"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2112:7:13","2143:6:13","2172:15:13","2219:11:13","2258:9:13"],"names":["roundId","winner","winningTicketId","prizeAmount","timestamp"],"nodeType":"FunctionCall","src":"2086:210:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo memory"}},"nodeType":"VariableDeclarationStatement","src":"2056:240:13"},{"expression":{"arguments":[{"id":5660,"name":"newWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5647,"src":"2363:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_WinnerInfo_$5571_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo memory"}],"expression":{"id":5657,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"2350:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage","typeString":"struct GalileoJackpotHistory.WinnerInfo storage ref[] storage ref"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2358:4:13","memberName":"push","nodeType":"MemberAccess","src":"2350:12:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage_ptr_$_t_struct$_WinnerInfo_$5571_storage_$returns$__$attached_to$_t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage_ptr_$","typeString":"function (struct GalileoJackpotHistory.WinnerInfo storage ref[] storage pointer,struct GalileoJackpotHistory.WinnerInfo storage ref)"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2350:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5662,"nodeType":"ExpressionStatement","src":"2350:23:13"},{"expression":{"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5663,"name":"roundToWinnerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5579,"src":"2422:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5665,"indexExpression":{"id":5664,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"2441:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2422:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5666,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"2452:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage","typeString":"struct GalileoJackpotHistory.WinnerInfo storage ref[] storage ref"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2460:6:13","memberName":"length","nodeType":"MemberAccess","src":"2452:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2469:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2452:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2422:48:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5671,"nodeType":"ExpressionStatement","src":"2422:48:13"},{"expression":{"arguments":[{"id":5676,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"2507:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":5672,"name":"winnerRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"2481:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":5674,"indexExpression":{"id":5673,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"2494:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2481:20:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2502:4:13","memberName":"push","nodeType":"MemberAccess","src":"2481:25:13","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2481:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5678,"nodeType":"ExpressionStatement","src":"2481:34:13"},{"eventCall":{"arguments":[{"id":5680,"name":"roundId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"2579:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5681,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5624,"src":"2588:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5682,"name":"winningTicketId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"2596:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5683,"name":"prizeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5628,"src":"2613:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5679,"name":"WinnerRecorded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"2564:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2564:61:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5685,"nodeType":"EmitStatement","src":"2559:66:13"}]},"documentation":{"id":5620,"nodeType":"StructuredDocumentation","src":"1445:249:13","text":" @dev Record a new winner (can only be called by main jackpot contract)\n @param roundId Round ID\n @param winner Winner address\n @param winningTicketId Winning ticket ID\n @param prizeAmount Prize amount"},"functionSelector":"b9cc78ea","id":5687,"implemented":true,"kind":"function","modifiers":[],"name":"recordWinner","nameLocation":"1709:12:13","nodeType":"FunctionDefinition","parameters":{"id":5629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"roundId","nameLocation":"1740:7:13","nodeType":"VariableDeclaration","scope":5687,"src":"1732:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5621,"name":"uint256","nodeType":"ElementaryTypeName","src":"1732:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5624,"mutability":"mutable","name":"winner","nameLocation":"1766:6:13","nodeType":"VariableDeclaration","scope":5687,"src":"1758:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5623,"name":"address","nodeType":"ElementaryTypeName","src":"1758:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5626,"mutability":"mutable","name":"winningTicketId","nameLocation":"1791:15:13","nodeType":"VariableDeclaration","scope":5687,"src":"1783:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"1783:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5628,"mutability":"mutable","name":"prizeAmount","nameLocation":"1825:11:13","nodeType":"VariableDeclaration","scope":5687,"src":"1817:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5627,"name":"uint256","nodeType":"ElementaryTypeName","src":"1817:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1721:122:13"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[],"src":"1853:0:13"},"scope":5814,"src":"1700:933:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":5696,"nodeType":"Block","src":"2811:40:13","statements":[{"expression":{"expression":{"id":5693,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"2829:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage","typeString":"struct GalileoJackpotHistory.WinnerInfo storage ref[] storage ref"}},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2837:6:13","memberName":"length","nodeType":"MemberAccess","src":"2829:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5692,"id":5695,"nodeType":"Return","src":"2822:21:13"}]},"documentation":{"id":5688,"nodeType":"StructuredDocumentation","src":"2645:101:13","text":" @dev Get the total number of recorded winners\n @return Total winner count"},"functionSelector":"ceeca984","id":5697,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalWinners","nameLocation":"2761:15:13","nodeType":"FunctionDefinition","parameters":{"id":5689,"nodeType":"ParameterList","parameters":[],"src":"2776:2:13"},"returnParameters":{"id":5692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5697,"src":"2802:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5690,"name":"uint256","nodeType":"ElementaryTypeName","src":"2802:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2801:9:13"},"scope":5814,"src":"2752:99:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5782,"nodeType":"Block","src":"3159:680:13","statements":[{"assignments":[5710],"declarations":[{"constant":false,"id":5710,"mutability":"mutable","name":"totalWinners","nameLocation":"3178:12:13","nodeType":"VariableDeclaration","scope":5782,"src":"3170:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"3170:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5713,"initialValue":{"expression":{"id":5711,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"3193:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage","typeString":"struct GalileoJackpotHistory.WinnerInfo storage ref[] storage ref"}},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3201:6:13","memberName":"length","nodeType":"MemberAccess","src":"3193:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3170:37:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5714,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"3264:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5715,"name":"totalWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"3274:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3264:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5725,"nodeType":"IfStatement","src":"3260:81:13","trueBody":{"id":5724,"nodeType":"Block","src":"3288:53:13","statements":[{"expression":{"arguments":[{"hexValue":"30","id":5721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3327:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3310:16:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct GalileoJackpotHistory.WinnerInfo memory[] memory)"},"typeName":{"baseType":{"id":5718,"nodeType":"UserDefinedTypeName","pathNode":{"id":5717,"name":"WinnerInfo","nameLocations":["3314:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":5571,"src":"3314:10:13"},"referencedDeclaration":5571,"src":"3314:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo"}},"id":5719,"nodeType":"ArrayTypeName","src":"3314:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo[]"}}},"id":5722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3310:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo memory[] memory"}},"functionReturnParameters":5708,"id":5723,"nodeType":"Return","src":"3303:26:13"}]}},{"assignments":[5727],"declarations":[{"constant":false,"id":5727,"mutability":"mutable","name":"actualLimit","nameLocation":"3404:11:13","nodeType":"VariableDeclaration","scope":5782,"src":"3396:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5726,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5740,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5728,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"3419:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5729,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"3428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3419:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5731,"name":"totalWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"3436:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3419:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3418:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":5738,"name":"limit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5702,"src":"3478:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3418:65:13","trueExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"totalWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"3453:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5735,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"3468:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3453:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5737,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3452:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3396:87:13"},{"assignments":[5745],"declarations":[{"constant":false,"id":5745,"mutability":"mutable","name":"result","nameLocation":"3556:6:13","nodeType":"VariableDeclaration","scope":5782,"src":"3536:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo[]"},"typeName":{"baseType":{"id":5743,"nodeType":"UserDefinedTypeName","pathNode":{"id":5742,"name":"WinnerInfo","nameLocations":["3536:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":5571,"src":"3536:10:13"},"referencedDeclaration":5571,"src":"3536:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo"}},"id":5744,"nodeType":"ArrayTypeName","src":"3536:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo[]"}},"visibility":"internal"}],"id":5752,"initialValue":{"arguments":[{"id":5750,"name":"actualLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"3582:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3565:16:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct GalileoJackpotHistory.WinnerInfo memory[] memory)"},"typeName":{"baseType":{"id":5747,"nodeType":"UserDefinedTypeName","pathNode":{"id":5746,"name":"WinnerInfo","nameLocations":["3569:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":5571,"src":"3569:10:13"},"referencedDeclaration":5571,"src":"3569:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo"}},"id":5748,"nodeType":"ArrayTypeName","src":"3569:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo[]"}}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3536:58:13"},{"body":{"id":5778,"nodeType":"Block","src":"3687:111:13","statements":[{"expression":{"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"3702:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo memory[] memory"}},"id":5765,"indexExpression":{"id":5764,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"3709:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3702:9:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5766,"name":"winners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"3714:7:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage","typeString":"struct GalileoJackpotHistory.WinnerInfo storage ref[] storage ref"}},"id":5775,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5767,"name":"totalWinners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"3722:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3737:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3722:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5770,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"3742:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5771,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"3751:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3742:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3741:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3722:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3714:40:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_storage","typeString":"struct GalileoJackpotHistory.WinnerInfo storage ref"}},"src":"3702:52:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo memory"}},"id":5777,"nodeType":"ExpressionStatement","src":"3702:52:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"3665:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5758,"name":"actualLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"3669:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3665:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5779,"initializationExpression":{"assignments":[5754],"declarations":[{"constant":false,"id":5754,"mutability":"mutable","name":"i","nameLocation":"3658:1:13","nodeType":"VariableDeclaration","scope":5779,"src":"3650:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"3650:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5756,"initialValue":{"hexValue":"30","id":5755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3662:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3650:13:13"},"loopExpression":{"expression":{"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3682:3:13","subExpression":{"id":5760,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"3682:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5762,"nodeType":"ExpressionStatement","src":"3682:3:13"},"nodeType":"ForStatement","src":"3645:153:13"},{"expression":{"id":5780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5745,"src":"3825:6:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo memory[] memory"}},"functionReturnParameters":5708,"id":5781,"nodeType":"Return","src":"3818:13:13"}]},"documentation":{"id":5698,"nodeType":"StructuredDocumentation","src":"2863:195:13","text":" @dev Get winners with pagination\n @param offset Starting index\n @param limit Maximum number of winners to return\n @return Array of winner info structures"},"functionSelector":"28fd8fc4","id":5783,"implemented":true,"kind":"function","modifiers":[],"name":"getWinners","nameLocation":"3073:10:13","nodeType":"FunctionDefinition","parameters":{"id":5703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5700,"mutability":"mutable","name":"offset","nameLocation":"3092:6:13","nodeType":"VariableDeclaration","scope":5783,"src":"3084:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5699,"name":"uint256","nodeType":"ElementaryTypeName","src":"3084:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5702,"mutability":"mutable","name":"limit","nameLocation":"3108:5:13","nodeType":"VariableDeclaration","scope":5783,"src":"3100:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5701,"name":"uint256","nodeType":"ElementaryTypeName","src":"3100:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3083:31:13"},"returnParameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5783,"src":"3138:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo[]"},"typeName":{"baseType":{"id":5705,"nodeType":"UserDefinedTypeName","pathNode":{"id":5704,"name":"WinnerInfo","nameLocations":["3138:10:13"],"nodeType":"IdentifierPath","referencedDeclaration":5571,"src":"3138:10:13"},"referencedDeclaration":5571,"src":"3138:10:13","typeDescriptions":{"typeIdentifier":"t_struct$_WinnerInfo_$5571_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo"}},"id":5706,"nodeType":"ArrayTypeName","src":"3138:12:13","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_WinnerInfo_$5571_storage_$dyn_storage_ptr","typeString":"struct GalileoJackpotHistory.WinnerInfo[]"}},"visibility":"internal"}],"src":"3137:21:13"},"scope":5814,"src":"3064:775:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5796,"nodeType":"Block","src":"4091:53:13","statements":[{"expression":{"baseExpression":{"id":5792,"name":"winnerRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"4109:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":5794,"indexExpression":{"id":5793,"name":"winnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5786,"src":"4122:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4109:27:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":5791,"id":5795,"nodeType":"Return","src":"4102:34:13"}]},"documentation":{"id":5784,"nodeType":"StructuredDocumentation","src":"3851:145:13","text":" @dev Get all rounds won by a specific address\n @param winnerAddress Winner address\n @return Array of round IDs"},"functionSelector":"0c9350e9","id":5797,"implemented":true,"kind":"function","modifiers":[],"name":"getWinnerRounds","nameLocation":"4011:15:13","nodeType":"FunctionDefinition","parameters":{"id":5787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5786,"mutability":"mutable","name":"winnerAddress","nameLocation":"4035:13:13","nodeType":"VariableDeclaration","scope":5797,"src":"4027:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5785,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4026:23:13"},"returnParameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5790,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5797,"src":"4073:16:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":5788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4073:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5789,"nodeType":"ArrayTypeName","src":"4073:9:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4072:18:13"},"scope":5814,"src":"4002:142:13","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":5812,"nodeType":"Block","src":"4395:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5805,"name":"winnerRounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"4413:12:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":5807,"indexExpression":{"id":5806,"name":"winnerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"4426:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4413:27:13","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":5808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4441:6:13","memberName":"length","nodeType":"MemberAccess","src":"4413:34:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4450:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4413:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5804,"id":5811,"nodeType":"Return","src":"4406:45:13"}]},"documentation":{"id":5798,"nodeType":"StructuredDocumentation","src":"4156:163:13","text":" @dev Check if an address has won any rounds\n @param winnerAddress Winner address\n @return True if the address has won any rounds"},"functionSelector":"9d9ca28d","id":5813,"implemented":true,"kind":"function","modifiers":[],"name":"isWinner","nameLocation":"4334:8:13","nodeType":"FunctionDefinition","parameters":{"id":5801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5800,"mutability":"mutable","name":"winnerAddress","nameLocation":"4351:13:13","nodeType":"VariableDeclaration","scope":5813,"src":"4343:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5799,"name":"address","nodeType":"ElementaryTypeName","src":"4343:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4342:23:13"},"returnParameters":{"id":5804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5803,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5813,"src":"4389:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5802,"name":"bool","nodeType":"ElementaryTypeName","src":"4389:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4388:6:13"},"scope":5814,"src":"4325:134:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5815,"src":"218:4244:13","usedErrors":[13,18,5598],"usedEvents":[24,5594]}],"src":"33:4430:13"},"id":13}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e18dc3dd762aced0edf70e5b4ff6b3887f6dbaa85839d6aecc9e125d19659ce64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E XOR 0xDC RETURNDATASIZE 0xD7 PUSH3 0xACED0E 0xDF PUSH17 0xE5B4FF6B3887F6DBAA85839D6AECC9E125 0xD1 SWAP7 MSIZE 0xCE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;698:9376:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e18dc3dd762aced0edf70e5b4ff6b3887f6dbaa85839d6aecc9e125d19659ce64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E XOR 0xDC RETURNDATASIZE 0xD7 PUSH3 0xACED0E 0xDF PUSH17 0xE5B4FF6B3887F6DBAA85839D6AECC9E125 0xD1 SWAP7 MSIZE 0xCE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"698:9376:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;657:1315:7;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201ae1761b6a3c5d2458c4708d3276257bae9b475b3c412a0ebb4584fd955181ef64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xE1 PUSH23 0x1B6A3C5D2458C4708D3276257BAE9B475B3C412A0EBB45 DUP5 REVERT SWAP6 MLOAD DUP2 0xEF PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"657:1315:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;281:31863:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208fcce410fc5cfa45c0c6616aebc7576f43e383fe066bccc2ae83043f7884d82164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xCC 0xE4 LT 0xFC 0x5C STATICCALL GASLIMIT 0xC0 0xC6 PUSH2 0x6AEB 0xC7 JUMPI PUSH16 0x43E383FE066BCCC2AE83043F7884D821 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;769:34173:11;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e57f6f97354ac8290db535b2e3f293653f51ec40206fa8b2bf9396c18f98af2564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 PUSH32 0x6F97354AC8290DB535B2E3F293653F51EC40206FA8B2BF9396C18F98AF256473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"769:34173:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/GalileoJackpot.sol":{"GalileoJackpot":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientDeposit","type":"error"},{"inputs":[],"name":"InvalidAddress","type":"error"},{"inputs":[],"name":"NotEnoughTickets","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"RoundAlreadyCompleted","type":"error"},{"inputs":[],"name":"RoundNotFinished","type":"error"},{"inputs":[],"name":"RoundNotStarted","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"inputs":[],"name":"ZeroRange","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"historyContract","type":"address"}],"name":"HistoryContractUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"address","name":"treasury","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"OwnerFeeCollected","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"winningTicketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"prize","type":"uint256"}],"name":"RoundCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"RoundStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"ticketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"TicketPurchased","type":"event"},{"inputs":[],"name":"MIN_DEPOSIT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OWNER_FEE_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ROUND_DURATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buyTickets","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"completeRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentRoundId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"emergencyCompleteRound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getCurrentRoundInfo","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalPool","type":"uint256"},{"internalType":"uint256","name":"numTickets","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"timeLeft","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getRoundHistory","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalPool","type":"uint256"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"winningTicketId","type":"uint256"},{"internalType":"bool","name":"completed","type":"bool"}],"internalType":"struct GalileoJackpot.Round[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getRoundParticipantsWithCounts","outputs":[{"internalType":"address[]","name":"participants","type":"address[]"},{"internalType":"uint256[]","name":"ticketCounts","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"}],"name":"getRoundTickets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserTickets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"historyContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"roundTickets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rounds","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalPool","type":"uint256"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"winningTicketId","type":"uint256"},{"internalType":"bool","name":"completed","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_historyContract","type":"address"}],"name":"setHistoryContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_treasury","type":"address"}],"name":"setTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startRoundManually","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ticketCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tickets","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"treasury","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userTickets","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_4505":{"entryPoint":null,"id":4505,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_883":{"entryPoint":null,"id":883,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":280,"id":146,"parameterSlots":1,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:219:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:14","statements":[{"nodeType":"YulAssignment","src":"125:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:14"},"nodeType":"YulFunctionCall","src":"133:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:14"},"nodeType":"YulFunctionCall","src":"194:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:14"},"nodeType":"YulFunctionCall","src":"190:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:14"},"nodeType":"YulFunctionCall","src":"178:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:14"},"nodeType":"YulFunctionCall","src":"160:51:14"},"nodeType":"YulExpressionStatement","src":"160:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:14","type":""}],"src":"14:203:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526001600255600060035534801561001a57600080fd5b50338061004157604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004a81610118565b5060018080556040805160e0810182526002805480835260006020808501828152858701838152606087018481526080880185815260a0890186815260c08a0187815297875260049586905299862098518955925199880199909955519486019490945595516003850155915194830180546001600160a01b0319166001600160a01b039687161790559251600583015591516006909101805460ff19169115159190911790555416600880546001600160a01b0319166001600160a01b0392909216919091179055610168565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611e34806101776000396000f3fe6080604052600436106101665760003560e01c80638c65c81f116100d1578063c81998261161008a578063cf260baf11610064578063cf260baf146104f9578063e1e158a514610519578063f0f4426014610534578063f2fde38b1461055457600080fd5b8063c8199826146104bc578063cc158921146104c4578063cdfdf7e2146104e457600080fd5b80638c65c81f146103815780638da5cb5b146104265780639506a4ec146104445780639bb3503d146104715780639cbe5efd14610491578063a8a3221e146104a757600080fd5b8063715018a611610123578063715018a6146102be5780637169c711146102d5578063747dff42146102f55780638274627f146103415780638be48547146103565780638c4d59d01461036b57600080fd5b80630484a22f1461016b57806304ad675d146101a15780631e2d0400146101c157806350b44712146101ef57806361d027b3146102635780636641ea081461029b575b600080fd5b34801561017757600080fd5b5061018b610186366004611b56565b610574565b6040516101989190611bac565b60405180910390f35b3480156101ad57600080fd5b5061018b6101bc366004611bbf565b6105e0565b3480156101cd57600080fd5b506101e16101dc366004611bbf565b610640565b604051610198929190611bd8565b3480156101fb57600080fd5b5061023b61020a366004611bbf565b600560205260009081526040902080546001820154600283015460039093015491926001600160a01b039091169184565b604080519485526001600160a01b039093166020850152918301526060820152608001610198565b34801561026f57600080fd5b50600854610283906001600160a01b031681565b6040516001600160a01b039091168152602001610198565b3480156102a757600080fd5b506102b0607881565b604051908152602001610198565b3480156102ca57600080fd5b506102d36109ea565b005b3480156102e157600080fd5b506102b06102f0366004611c38565b6109fe565b34801561030157600080fd5b5061030a610a2f565b6040805197885260208801969096529486019390935260608501919091526080840152151560a083015260c082015260e001610198565b34801561034d57600080fd5b506102d3610ad2565b34801561036257600080fd5b506102d3610efb565b34801561037757600080fd5b506102b060035481565b34801561038d57600080fd5b506103e661039c366004611bbf565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006909501549395929491936001600160a01b03909116919060ff1687565b6040805197885260208801969096529486019390935260608501919091526001600160a01b0316608084015260a0830152151560c082015260e001610198565b34801561043257600080fd5b506000546001600160a01b0316610283565b34801561045057600080fd5b5061046461045f366004611bbf565b611350565b6040516101989190611c5a565b34801561047d57600080fd5b506102d361048c366004611b56565b61153e565b34801561049d57600080fd5b506102b060025481565b3480156104b357600080fd5b506102b0600581565b6102d36115b7565b3480156104d057600080fd5b50600954610283906001600160a01b031681565b3480156104f057600080fd5b506102d3611845565b34801561050557600080fd5b506102b0610514366004611ce7565b61193b565b34801561052557600080fd5b506102b0662386f26fc1000081565b34801561054057600080fd5b506102d361054f366004611b56565b611957565b34801561056057600080fd5b506102d361056f366004611b56565b6119a8565b6001600160a01b0381166000908152600760209081526040918290208054835181840281018401909452808452606093928301828280156105d457602002820191906000526020600020905b8154815260200190600101908083116105c0575b50505050509050919050565b6000818152600660209081526040918290208054835181840281018401909452808452606093928301828280156105d457602002820191906000526020600020908154815260200190600101908083116105c05750505050509050919050565b6060806000600660008581526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106a257602002820191906000526020600020905b81548152602001906001019080831161068e575b5050505050905080516000036106d257505060408051600080825260208201908152818301909252939092509050565b805160008167ffffffffffffffff8111156106ef576106ef611d11565b604051908082528060200260200182016040528015610718578160200160208202803683370190505b50905060008267ffffffffffffffff81111561073657610736611d11565b60405190808252806020026020018201604052801561075f578160200160208202803683370190505b5090506000805b85518110156108b45760006005600088848151811061078757610787611d27565b6020026020010151815260200190815260200160002060010160009054906101000a90046001600160a01b031690506000805b8481101561083957826001600160a01b03168782815181106107de576107de611d27565b60200260200101516001600160a01b0316036108275785818151811061080657610806611d27565b60200260200101805180919061081b90611d53565b90525060019150610839565b8061083181611d53565b9150506107ba565b508061089f578186858151811061085257610852611d27565b60200260200101906001600160a01b031690816001600160a01b031681525050600185858151811061088657610886611d27565b60209081029190910101528361089b81611d53565b9450505b505080806108ac90611d53565b915050610766565b508067ffffffffffffffff8111156108ce576108ce611d11565b6040519080825280602002602001820160405280156108f7578160200160208202803683370190505b5096508067ffffffffffffffff81111561091357610913611d11565b60405190808252806020026020018201604052801561093c578160200160208202803683370190505b50955060005b818110156109df5783818151811061095c5761095c611d27565b602002602001015188828151811061097657610976611d27565b60200260200101906001600160a01b031690816001600160a01b0316815250508281815181106109a8576109a8611d27565b60200260200101518782815181106109c2576109c2611d27565b6020908102919091010152806109d781611d53565b915050610942565b505050505050915091565b6109f26119eb565b6109fc6000611a18565b565b60066020528160005260406000208181548110610a1a57600080fd5b90600052602060002001600091509150505481565b60008060008060008060008060046000600254815260200190815260200160002090506000808260010154118015610a6c5750600682015460ff16155b90506000818015610a805750826002015442105b15610a9857428360020154610a959190611d6c565b90505b825460018401546002808601546003909601549054600090815260066020526040902054929d919c50949a50939850965090945092509050565b610ada6119eb565b6002546000908152600460205260409020600681015460ff1615610b1157604051633e3a941b60e11b815260040160405180910390fd5b8060010154600003610b36576040516323a71b8760e21b815260040160405180910390fd5b600280546000908152600660205260409020541015610b685760405163a8d8f34960e01b815260040160405180910390fd5b6006808201805460ff1916600117905560025460009081526020919091526040812054610b9490611a68565b905060006006600060025481526020019081526020016000208281548110610bbe57610bbe611d27565b600091825260208083209091015480835260059182905260408320600101546004870180546001600160a01b0319166001600160a01b03909216918217905586830182905560038701549194509291606491610c1a9190611d7f565b610c249190611dac565b90506000818660030154610c389190611d6c565b6009549091506001600160a01b031615610cc4576009548654604051635ce63c7560e11b815260048101919091526001600160a01b03858116602483015260448201879052606482018490529091169063b9cc78ea90608401600060405180830381600087803b158015610cab57600080fd5b505af1158015610cbf573d6000803e3d6000fd5b505050505b60028054906000610cd483611d53565b90915550506040805160e0810182526002805480835260006020808501828152858701838152606087018481526080880185815260a0890186815260c08a018781529787526004958690528a872099518a55935160018a015591519688019690965594516003870155935190850180546001600160a01b0319166001600160a01b039283161790559251600585015590516006909301805460ff191693151593909317909255600854925191921690849060006040518083038185875af1925050503d8060008114610dc2576040519150601f19603f3d011682016040523d82523d6000602084013e610dc7565b606091505b5050905080610de9576040516312171d8360e31b815260040160405180910390fd5b6000846001600160a01b03168360405160006040518083038185875af1925050503d8060008114610e36576040519150601f19603f3d011682016040523d82523d6000602084013e610e3b565b606091505b5050905080610e5d576040516312171d8360e31b815260040160405180910390fd5b8754600854604080516001600160a01b039092168252602082018790527fed1c7c79dbd4938e6495c716b5f244d9ed315871a4455a1f46fbbf8090b43cc9910160405180910390a28754604080516001600160a01b0388168152602081018990529081018590527f1901cd171c04e8157b30c71ff94388f4eda84b287b8e58b357b408fe85916da09060600160405180910390a25050505050505050565b610f03611afb565b6002546000908152600460205260409020600681015460ff1615610f3a57604051633e3a941b60e11b815260040160405180910390fd5b8060010154600003610f5f576040516323a71b8760e21b815260040160405180910390fd5b8060020154421015610f84576040516358e2bd7f60e01b815260040160405180910390fd5b600280546000908152600660205260409020541015610fb65760405163a8d8f34960e01b815260040160405180910390fd5b6006808201805460ff1916600117905560025460009081526020919091526040812054610fe290611a68565b90506000600660006002548152602001908152602001600020828154811061100c5761100c611d27565b600091825260208083209091015480835260059182905260408320600101546004870180546001600160a01b0319166001600160a01b039092169182179055868301829055600387015491945092916064916110689190611d7f565b6110729190611dac565b905060008186600301546110869190611d6c565b6009549091506001600160a01b031615611112576009548654604051635ce63c7560e11b815260048101919091526001600160a01b03858116602483015260448201879052606482018490529091169063b9cc78ea90608401600060405180830381600087803b1580156110f957600080fd5b505af115801561110d573d6000803e3d6000fd5b505050505b6002805490600061112283611d53565b90915550506040805160e0810182526002805480835260006020808501828152858701838152606087018481526080880185815260a0890186815260c08a018781529787526004958690528a872099518a55935160018a015591519688019690965594516003870155935190850180546001600160a01b0319166001600160a01b039283161790559251600585015590516006909301805460ff191693151593909317909255600854925191921690849060006040518083038185875af1925050503d8060008114611210576040519150601f19603f3d011682016040523d82523d6000602084013e611215565b606091505b5050905080611237576040516312171d8360e31b815260040160405180910390fd5b6000846001600160a01b03168360405160006040518083038185875af1925050503d8060008114611284576040519150601f19603f3d011682016040523d82523d6000602084013e611289565b606091505b50509050806112ab576040516312171d8360e31b815260040160405180910390fd5b8754600854604080516001600160a01b039092168252602082018790527fed1c7c79dbd4938e6495c716b5f244d9ed315871a4455a1f46fbbf8090b43cc9910160405180910390a28754604080516001600160a01b0388168152602081018990529081018590527f1901cd171c04e8157b30c71ff94388f4eda84b287b8e58b357b408fe85916da09060600160405180910390a250505050505050506109fc60018055565b6060600060015b60025481101561139b5760008181526004602052604090206006015460ff1615611389578161138581611d53565b9250505b8061139381611d53565b915050611357565b5060006113a88483611b25565b905060008167ffffffffffffffff8111156113c5576113c5611d11565b60405190808252806020026020018201604052801561144157816020015b61142e6040518060e001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600081526020016000151581525090565b8152602001906001900390816113e35790505b50905060008060016002546114569190611d6c565b90505b60008111801561146857508382105b156115335760008181526004602052604090206006015460ff161561152157600081815260046020818152604092839020835160e0810185528154815260018201549281019290925260028101549382019390935260038301546060820152908201546001600160a01b03166080820152600582015460a082015260069091015460ff16151560c0820152835184908490811061150757611507611d27565b6020026020010181905250818061151d90611d53565b9250505b8061152b81611dc0565b915050611459565b509095945050505050565b6115466119eb565b6001600160a01b03811661156d5760405163e6c4247b60e01b815260040160405180910390fd5b600980546001600160a01b0319166001600160a01b0383169081179091556040517f0e718441e2c8ed8399d302c4091ea86c90cd23783c3c1f299b278a8eefa8fd1490600090a250565b6115bf611afb565b662386f26fc100003410156115e75760405163070f6eed60e11b815260040160405180910390fd5b60025460009081526004602052604090206006015460ff161561161d57604051633e3a941b60e11b815260040160405180910390fd5b6000611630662386f26fc1000034611dac565b905060005b81811015611751576003805490600061164d83611d53565b9091555050604080516080810182526003805480835233602080850182815260028054878901908152426060808a018281526000988952600587528b89209a518b5594516001808c0180546001600160a01b0319166001600160a01b039093169290921790915592518a8501559351988801989098558154865260068452888620875481548084018355918852858820909101558486526007845288862087548154928301825590875295849020019490945593549254865193845290830152938101929092527f96541f70da731142b18e96f1def4d2a7733deb7d784723106d52c1d906d4c67a910160405180910390a28061174981611d53565b915050611635565b5060025460009081526004602052604081206003018054349290611776908490611dd7565b909155505060028054600090815260066020526040902054108015906117ae5750600254600090815260046020526040902060010154155b1561183b5760025460009081526004602052604090204260019091018190556117d990607890611dd7565b6002805460009081526004602090815260408083208401949094558254808352918490206001810154930154845193845290830152917fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d910160405180910390a25b506109fc60018055565b61184d6119eb565b6002546000908152600460205260409020600101541561188057604051633e3a941b60e11b815260040160405180910390fd5b6002805460009081526006602052604090205410156118b25760405163a8d8f34960e01b815260040160405180910390fd5b60025460009081526004602052604090204260019091018190556118d890607890611dd7565b6002805460009081526004602090815260408083208401949094558254808352918490206001810154930154845193845290830152917fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d910160405180910390a2565b60076020528160005260406000208181548110610a1a57600080fd5b61195f6119eb565b6001600160a01b0381166119865760405163e6c4247b60e01b815260040160405180910390fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6119b06119eb565b6001600160a01b0381166119df57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6119e881611a18565b50565b6000546001600160a01b031633146109fc5760405163118cdaa760e01b81523360048201526024016119d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081600003611a8b576040516305a8a1a960e11b815260040160405180910390fd5b60004244611a9a600143611d6c565b6040805160208101949094528301919091524060608083019190915233901b6bffffffffffffffffffffffff1916608082015260940160408051601f1981840301815291905280516020909101209050611af48382611dea565b9392505050565b600260015403611b1e57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b60008282188284100282185b90505b92915050565b80356001600160a01b0381168114611b5157600080fd5b919050565b600060208284031215611b6857600080fd5b611b3182611b3a565b600081518084526020808501945080840160005b83811015611ba157815187529582019590820190600101611b85565b509495945050505050565b602081526000611b316020830184611b71565b600060208284031215611bd157600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b82811015611c1a5781516001600160a01b031684529284019290840190600101611bf5565b50505083810382850152611c2e8186611b71565b9695505050505050565b60008060408385031215611c4b57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015611cda5781518051855286810151878601528581015186860152606080820151908601526080808201516001600160a01b03169086015260a0808201519086015260c09081015115159085015260e09093019290850190600101611c77565b5091979650505050505050565b60008060408385031215611cfa57600080fd5b611d0383611b3a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611d6557611d65611d3d565b5060010190565b81810381811115611b3457611b34611d3d565b8082028115828204841417611b3457611b34611d3d565b634e487b7160e01b600052601260045260246000fd5b600082611dbb57611dbb611d96565b500490565b600081611dcf57611dcf611d3d565b506000190190565b80820180821115611b3457611b34611d3d565b600082611df957611df9611d96565b50069056fea26469706673582212201c4011973e8c8c794f5a3a470b96fc2e8f680da9cc6875fb06f091296639e66b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A DUP2 PUSH2 0x118 JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP5 DUP2 MSTORE PUSH1 0x80 DUP9 ADD DUP6 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD DUP7 DUP2 MSTORE PUSH1 0xC0 DUP11 ADD DUP8 DUP2 MSTORE SWAP8 DUP8 MSTORE PUSH1 0x4 SWAP6 DUP7 SWAP1 MSTORE SWAP10 DUP7 KECCAK256 SWAP9 MLOAD DUP10 SSTORE SWAP3 MLOAD SWAP10 DUP9 ADD SWAP10 SWAP1 SWAP10 SSTORE MLOAD SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP6 MLOAD PUSH1 0x3 DUP6 ADD SSTORE SWAP2 MLOAD SWAP5 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x5 DUP4 ADD SSTORE SWAP2 MLOAD PUSH1 0x6 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SLOAD AND PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x168 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1E34 DUP1 PUSH2 0x177 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x166 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C65C81F GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC8199826 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCF260BAF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCF260BAF EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xE1E158A5 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8199826 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xCC158921 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xCDFDF7E2 EQ PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C65C81F EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x9506A4EC EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x9BB3503D EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x9CBE5EFD EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xA8A3221E EQ PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x7169C711 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x747DFF42 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x8274627F EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x8BE48547 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8C4D59D0 EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x484A22F EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x4AD675D EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x1E2D0400 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x6641EA08 EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x283 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x78 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x9EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0xAD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0xEFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0xFF AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1C5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x153E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x15B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x283 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x1845 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x514 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE7 JUMP JUMPDEST PUSH2 0x193B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH7 0x2386F26FC10000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x54F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x1957 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5C0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5C0 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x68E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x6D2 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x718 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x75F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x787 JUMPI PUSH2 0x787 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x839 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x827 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x806 JUMPI PUSH2 0x806 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0x81B SWAP1 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x1 SWAP2 POP PUSH2 0x839 JUMP JUMPDEST DUP1 PUSH2 0x831 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7BA JUMP JUMPDEST POP DUP1 PUSH2 0x89F JUMPI DUP2 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x852 JUMPI PUSH2 0x852 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x886 JUMPI PUSH2 0x886 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP4 PUSH2 0x89B DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x8AC SWAP1 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x766 JUMP JUMPDEST POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CE PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP7 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x913 JUMPI PUSH2 0x913 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x93C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9DF JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x95C JUMPI PUSH2 0x95C PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9C2 JUMPI PUSH2 0x9C2 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9D7 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x942 JUMP JUMPDEST POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x9F2 PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x9FC PUSH1 0x0 PUSH2 0x1A18 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0xA6C JUMPI POP PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 ISZERO PUSH2 0xA80 JUMPI POP DUP3 PUSH1 0x2 ADD SLOAD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0xA98 JUMPI TIMESTAMP DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP1 DUP7 ADD SLOAD PUSH1 0x3 SWAP1 SWAP7 ADD SLOAD SWAP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP14 SWAP2 SWAP13 POP SWAP5 SWAP11 POP SWAP4 SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0xADA PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E3A941B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23A71B87 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA8D8F349 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB94 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBBE JUMPI PUSH2 0xBBE PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x5 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE DUP7 DUP4 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP8 ADD SLOAD SWAP2 SWAP5 POP SWAP3 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0xC1A SWAP2 SWAP1 PUSH2 0x1D7F JUMP JUMPDEST PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x9 SLOAD DUP7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5CE63C75 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB9CC78EA SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xCD4 DUP4 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP5 DUP2 MSTORE PUSH1 0x80 DUP9 ADD DUP6 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD DUP7 DUP2 MSTORE PUSH1 0xC0 DUP11 ADD DUP8 DUP2 MSTORE SWAP8 DUP8 MSTORE PUSH1 0x4 SWAP6 DUP7 SWAP1 MSTORE DUP11 DUP8 KECCAK256 SWAP10 MLOAD DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD SSTORE SWAP2 MLOAD SWAP7 DUP9 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP5 MLOAD PUSH1 0x3 DUP8 ADD SSTORE SWAP4 MLOAD SWAP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x5 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD SWAP3 MLOAD SWAP2 SWAP3 AND SWAP1 DUP5 SWAP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE36 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE PUSH32 0xED1C7C79DBD4938E6495C716B5F244D9ED315871A4455A1F46FBBF8090B43CC9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x1901CD171C04E8157B30C71FF94388F4EDA84B287B8E58B357B408FE85916DA0 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF03 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E3A941B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x23A71B87 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xF84 JUMPI PUSH1 0x40 MLOAD PUSH4 0x58E2BD7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA8D8F349 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xFE2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x100C JUMPI PUSH2 0x100C PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x5 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE DUP7 DUP4 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP8 ADD SLOAD SWAP2 SWAP5 POP SWAP3 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x1068 SWAP2 SWAP1 PUSH2 0x1D7F JUMP JUMPDEST PUSH2 0x1072 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1112 JUMPI PUSH1 0x9 SLOAD DUP7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5CE63C75 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB9CC78EA SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1122 DUP4 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP5 DUP2 MSTORE PUSH1 0x80 DUP9 ADD DUP6 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD DUP7 DUP2 MSTORE PUSH1 0xC0 DUP11 ADD DUP8 DUP2 MSTORE SWAP8 DUP8 MSTORE PUSH1 0x4 SWAP6 DUP7 SWAP1 MSTORE DUP11 DUP8 KECCAK256 SWAP10 MLOAD DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD SSTORE SWAP2 MLOAD SWAP7 DUP9 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP5 MLOAD PUSH1 0x3 DUP8 ADD SSTORE SWAP4 MLOAD SWAP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x5 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD SWAP3 MLOAD SWAP2 SWAP3 AND SWAP1 DUP5 SWAP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1210 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1237 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1284 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE PUSH32 0xED1C7C79DBD4938E6495C716B5F244D9ED315871A4455A1F46FBBF8090B43CC9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x1901CD171C04E8157B30C71FF94388F4EDA84B287B8E58B357B408FE85916DA0 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH2 0x9FC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x139B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1389 JUMPI DUP2 PUSH2 0x1385 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1393 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1357 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x13A8 DUP5 DUP4 PUSH2 0x1B25 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13C5 JUMPI PUSH2 0x13C5 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1441 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x142E PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x13E3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x1456 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x1468 JUMPI POP DUP4 DUP3 LT JUMPDEST ISZERO PUSH2 0x1533 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1521 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1507 JUMPI PUSH2 0x1507 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x151D SWAP1 PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x152B DUP2 PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1459 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1546 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x156D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE718441E2C8ED8399D302C4091EA86C90CD23783C3C1F299B278A8EEFA8FD14 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x15BF PUSH2 0x1AFB JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70F6EED PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x161D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E3A941B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1630 PUSH7 0x2386F26FC10000 CALLVALUE PUSH2 0x1DAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1751 JUMPI PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x164D DUP4 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP1 SLOAD DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD DUP8 DUP10 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x60 DUP1 DUP11 ADD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP9 DUP10 MSTORE PUSH1 0x5 DUP8 MSTORE DUP12 DUP10 KECCAK256 SWAP11 MLOAD DUP12 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP1 DUP13 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP3 MLOAD DUP11 DUP6 ADD SSTORE SWAP4 MLOAD SWAP9 DUP9 ADD SWAP9 SWAP1 SWAP9 SSTORE DUP2 SLOAD DUP7 MSTORE PUSH1 0x6 DUP5 MSTORE DUP9 DUP7 KECCAK256 DUP8 SLOAD DUP2 SLOAD DUP1 DUP5 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE DUP6 DUP9 KECCAK256 SWAP1 SWAP2 ADD SSTORE DUP5 DUP7 MSTORE PUSH1 0x7 DUP5 MSTORE DUP9 DUP7 KECCAK256 DUP8 SLOAD DUP2 SLOAD SWAP3 DUP4 ADD DUP3 SSTORE SWAP1 DUP8 MSTORE SWAP6 DUP5 SWAP1 KECCAK256 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 SLOAD SWAP3 SLOAD DUP7 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x96541F70DA731142B18E96F1DEF4D2A7733DEB7D784723106D52C1D906D4C67A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0x1749 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1635 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x1776 SWAP1 DUP5 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO SWAP1 PUSH2 0x17AE JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x183B JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH2 0x17D9 SWAP1 PUSH1 0x78 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP3 SLOAD DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP4 ADD SLOAD DUP5 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP2 PUSH32 0xA359B664A68ACD8839E42112EB50EFF3408165E15074FDE89DDB58A0DB2E691D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x9FC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x184D PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x1880 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E3A941B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA8D8F349 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH2 0x18D8 SWAP1 PUSH1 0x78 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP3 SLOAD DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP4 ADD SLOAD DUP5 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP2 PUSH32 0xA359B664A68ACD8839E42112EB50EFF3408165E15074FDE89DDB58A0DB2E691D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x195F PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19E8 DUP2 PUSH2 0x1A18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x1A8B JUMPI PUSH1 0x40 MLOAD PUSH4 0x5A8A1A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP PREVRANDAO PUSH2 0x1A9A PUSH1 0x1 NUMBER PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE BLOCKHASH PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x94 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH2 0x1AF4 DUP4 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1B1E JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 XOR DUP3 DUP5 LT MUL DUP3 XOR JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B31 DUP3 PUSH2 0x1B3A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA1 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B85 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B31 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C1A JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1BF5 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1C2E DUP2 DUP7 PUSH2 0x1B71 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CDA JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C77 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D03 DUP4 PUSH2 0x1B3A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D65 JUMPI PUSH2 0x1D65 PUSH2 0x1D3D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x1D3D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x1D3D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DBB JUMPI PUSH2 0x1DBB PUSH2 0x1D96 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1DCF JUMPI PUSH2 0x1DCF PUSH2 0x1D3D JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DF9 JUMPI PUSH2 0x1DF9 PUSH2 0x1D96 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR BLOCKHASH GT SWAP8 RETURNDATACOPY DUP13 DUP13 PUSH26 0x4F5A3A470B96FC2E8F680DA9CC6875FB06F091296639E66B6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"614:15254:12:-:0;;;1414:1;1382:33;;1479:1;1448:32;;2705:413;;;;;;;;;-1:-1:-1;2727:10:12;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:14;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:8;2061:21;;;2808:219:12::1;::::0;;::::1;::::0;::::1;::::0;;2832:14:::1;::::0;;2808:219;;;-1:-1:-1;2808:219:12::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2783:22;;;:6:::1;:22:::0;;;;;;;:244;;;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;2783:244:12::1;-1:-1:-1::0;;;;;2783:244:12;;::::1;;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;2783:244:12::1;::::0;::::1;;::::0;;;::::1;::::0;;1710:6:0;;3093:8:12::1;:18:::0;;-1:-1:-1;;;;;;3093:18:12::1;-1:-1:-1::0;;;;;3093:18:12;;;::::1;::::0;;;::::1;::::0;;614:15254;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:14:-;614:15254:12;;;;;;"},"deployedBytecode":{"functionDebugData":{"@MIN_DEPOSIT_4383":{"entryPoint":null,"id":4383,"parameterSlots":0,"returnSlots":0},"@OWNER_FEE_PERCENT_4389":{"entryPoint":null,"id":4389,"parameterSlots":0,"returnSlots":0},"@ROUND_DURATION_4386":{"entryPoint":null,"id":4386,"parameterSlots":0,"returnSlots":0},"@_checkOwner_84":{"entryPoint":6635,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_791":{"entryPoint":null,"id":791,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_918":{"entryPoint":null,"id":918,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_910":{"entryPoint":6907,"id":910,"parameterSlots":0,"returnSlots":0},"@_pseudoRandomNumber_4900":{"entryPoint":6760,"id":4900,"parameterSlots":1,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":6680,"id":146,"parameterSlots":1,"returnSlots":0},"@buyTickets_4667":{"entryPoint":5559,"id":4667,"parameterSlots":0,"returnSlots":0},"@completeRound_4857":{"entryPoint":3835,"id":4857,"parameterSlots":0,"returnSlots":0},"@currentRoundId_4392":{"entryPoint":null,"id":4392,"parameterSlots":0,"returnSlots":0},"@emergencyCompleteRound_5553":{"entryPoint":2770,"id":5553,"parameterSlots":0,"returnSlots":0},"@getCurrentRoundInfo_5195":{"entryPoint":2607,"id":5195,"parameterSlots":0,"returnSlots":7},"@getRoundHistory_5292":{"entryPoint":4944,"id":5292,"parameterSlots":1,"returnSlots":1},"@getRoundParticipantsWithCounts_5121":{"entryPoint":1600,"id":5121,"parameterSlots":1,"returnSlots":2},"@getRoundTickets_4928":{"entryPoint":1504,"id":4928,"parameterSlots":1,"returnSlots":1},"@getUserTickets_4914":{"entryPoint":1396,"id":4914,"parameterSlots":1,"returnSlots":1},"@historyContract_4419":{"entryPoint":null,"id":4419,"parameterSlots":0,"returnSlots":0},"@min_1269":{"entryPoint":6949,"id":1269,"parameterSlots":2,"returnSlots":1},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2538,"id":98,"parameterSlots":0,"returnSlots":0},"@roundTickets_4410":{"entryPoint":2558,"id":4410,"parameterSlots":0,"returnSlots":0},"@rounds_4400":{"entryPoint":null,"id":4400,"parameterSlots":0,"returnSlots":0},"@setHistoryContract_4532":{"entryPoint":5438,"id":4532,"parameterSlots":1,"returnSlots":0},"@setTreasury_5315":{"entryPoint":6487,"id":5315,"parameterSlots":1,"returnSlots":0},"@startRoundManually_5372":{"entryPoint":6213,"id":5372,"parameterSlots":0,"returnSlots":0},"@ternary_1231":{"entryPoint":null,"id":1231,"parameterSlots":3,"returnSlots":1},"@ticketCounter_4395":{"entryPoint":null,"id":4395,"parameterSlots":0,"returnSlots":0},"@tickets_4405":{"entryPoint":null,"id":4405,"parameterSlots":0,"returnSlots":0},"@toUint_4327":{"entryPoint":null,"id":4327,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":6568,"id":126,"parameterSlots":1,"returnSlots":0},"@treasury_4417":{"entryPoint":null,"id":4417,"parameterSlots":0,"returnSlots":0},"@userTickets_4415":{"entryPoint":6459,"id":4415,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":6970,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6998,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7399,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":7103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":7224,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_array_uint256_dyn":{"entryPoint":7025,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes32_t_address__to_t_uint256_t_uint256_t_bytes32_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7128,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7258,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7084,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":8,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7639,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":7596,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7551,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":7532,"id":null,"parameterSlots":2,"returnSlots":1},"decrement_t_uint256":{"entryPoint":7616,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7507,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":7658,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7485,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":7574,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":7463,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7441,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9241:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:14","statements":[{"nodeType":"YulAssignment","src":"73:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:14"},"nodeType":"YulFunctionCall","src":"82:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"}]},{"body":{"nodeType":"YulBlock","src":"165:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:14"},"nodeType":"YulFunctionCall","src":"167:12:14"},"nodeType":"YulExpressionStatement","src":"167:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:14"},"nodeType":"YulFunctionCall","src":"146:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:14"},"nodeType":"YulFunctionCall","src":"142:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:14"},"nodeType":"YulFunctionCall","src":"131:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:14"},"nodeType":"YulFunctionCall","src":"121:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:14"},"nodeType":"YulFunctionCall","src":"114:50:14"},"nodeType":"YulIf","src":"111:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:14","type":""}],"src":"14:173:14"},{"body":{"nodeType":"YulBlock","src":"262:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:14"},"nodeType":"YulFunctionCall","src":"279:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:14"},"nodeType":"YulFunctionCall","src":"275:32:14"},"nodeType":"YulIf","src":"272:52:14"},{"nodeType":"YulAssignment","src":"333:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:14"},"nodeType":"YulFunctionCall","src":"343:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:14","type":""}],"src":"192:186:14"},{"body":{"nodeType":"YulBlock","src":"444:374:14","statements":[{"nodeType":"YulVariableDeclaration","src":"454:26:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"474:5:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"468:5:14"},"nodeType":"YulFunctionCall","src":"468:12:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"458:6:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"496:3:14"},{"name":"length","nodeType":"YulIdentifier","src":"501:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"489:6:14"},"nodeType":"YulFunctionCall","src":"489:19:14"},"nodeType":"YulExpressionStatement","src":"489:19:14"},{"nodeType":"YulVariableDeclaration","src":"517:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"527:4:14","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"521:2:14","type":""}]},{"nodeType":"YulAssignment","src":"540:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"551:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"556:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"547:3:14"},"nodeType":"YulFunctionCall","src":"547:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"540:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"568:28:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"586:5:14"},{"name":"_1","nodeType":"YulIdentifier","src":"593:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"582:3:14"},"nodeType":"YulFunctionCall","src":"582:14:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"572:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"605:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"614:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"609:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"673:120:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"694:3:14"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"705:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"699:5:14"},"nodeType":"YulFunctionCall","src":"699:13:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"687:6:14"},"nodeType":"YulFunctionCall","src":"687:26:14"},"nodeType":"YulExpressionStatement","src":"687:26:14"},{"nodeType":"YulAssignment","src":"726:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"737:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"742:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:14"},"nodeType":"YulFunctionCall","src":"733:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"726:3:14"}]},{"nodeType":"YulAssignment","src":"758:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"772:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"780:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"768:3:14"},"nodeType":"YulFunctionCall","src":"768:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"758:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"635:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"638:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"632:2:14"},"nodeType":"YulFunctionCall","src":"632:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"646:18:14","statements":[{"nodeType":"YulAssignment","src":"648:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"657:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"660:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"653:3:14"},"nodeType":"YulFunctionCall","src":"653:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"648:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"628:3:14","statements":[]},"src":"624:169:14"},{"nodeType":"YulAssignment","src":"802:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"809:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"802:3:14"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"421:5:14","type":""},{"name":"pos","nodeType":"YulTypedName","src":"428:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"436:3:14","type":""}],"src":"383:435:14"},{"body":{"nodeType":"YulBlock","src":"974:110:14","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"991:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1002:2:14","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"984:6:14"},"nodeType":"YulFunctionCall","src":"984:21:14"},"nodeType":"YulExpressionStatement","src":"984:21:14"},{"nodeType":"YulAssignment","src":"1014:64:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1051:6:14"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1063:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1074:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1059:3:14"},"nodeType":"YulFunctionCall","src":"1059:18:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"1022:28:14"},"nodeType":"YulFunctionCall","src":"1022:56:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1014:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"943:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"954:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"965:4:14","type":""}],"src":"823:261:14"},{"body":{"nodeType":"YulBlock","src":"1159:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"1205:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1214:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1217:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1207:6:14"},"nodeType":"YulFunctionCall","src":"1207:12:14"},"nodeType":"YulExpressionStatement","src":"1207:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1180:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1189:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1176:3:14"},"nodeType":"YulFunctionCall","src":"1176:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1201:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1172:3:14"},"nodeType":"YulFunctionCall","src":"1172:32:14"},"nodeType":"YulIf","src":"1169:52:14"},{"nodeType":"YulAssignment","src":"1230:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1240:12:14"},"nodeType":"YulFunctionCall","src":"1240:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1230:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1125:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1136:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1148:6:14","type":""}],"src":"1089:180:14"},{"body":{"nodeType":"YulBlock","src":"1503:603:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1513:32:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1531:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1542:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1527:3:14"},"nodeType":"YulFunctionCall","src":"1527:18:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1517:6:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1572:2:14","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1554:6:14"},"nodeType":"YulFunctionCall","src":"1554:21:14"},"nodeType":"YulExpressionStatement","src":"1554:21:14"},{"nodeType":"YulVariableDeclaration","src":"1584:17:14","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1595:6:14"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1588:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1610:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1630:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1624:5:14"},"nodeType":"YulFunctionCall","src":"1624:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1614:6:14","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"1653:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"1661:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1646:6:14"},"nodeType":"YulFunctionCall","src":"1646:22:14"},"nodeType":"YulExpressionStatement","src":"1646:22:14"},{"nodeType":"YulAssignment","src":"1677:25:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1688:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1699:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1684:3:14"},"nodeType":"YulFunctionCall","src":"1684:18:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1677:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"1711:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1721:4:14","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1715:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1734:29:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1752:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1760:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1748:3:14"},"nodeType":"YulFunctionCall","src":"1748:15:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1738:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1772:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1781:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1776:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"1840:146:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1861:3:14"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1876:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1870:5:14"},"nodeType":"YulFunctionCall","src":"1870:13:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1893:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1898:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1889:3:14"},"nodeType":"YulFunctionCall","src":"1889:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"1902:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1885:3:14"},"nodeType":"YulFunctionCall","src":"1885:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1866:3:14"},"nodeType":"YulFunctionCall","src":"1866:39:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1854:6:14"},"nodeType":"YulFunctionCall","src":"1854:52:14"},"nodeType":"YulExpressionStatement","src":"1854:52:14"},{"nodeType":"YulAssignment","src":"1919:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1930:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1935:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1926:3:14"},"nodeType":"YulFunctionCall","src":"1926:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1919:3:14"}]},{"nodeType":"YulAssignment","src":"1951:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1965:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1973:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1961:3:14"},"nodeType":"YulFunctionCall","src":"1961:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1951:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1802:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"1805:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1799:2:14"},"nodeType":"YulFunctionCall","src":"1799:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1813:18:14","statements":[{"nodeType":"YulAssignment","src":"1815:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1824:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"1827:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1820:3:14"},"nodeType":"YulFunctionCall","src":"1820:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1815:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"1795:3:14","statements":[]},"src":"1791:195:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2006:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2017:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2002:3:14"},"nodeType":"YulFunctionCall","src":"2002:18:14"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2026:3:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"2031:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2022:3:14"},"nodeType":"YulFunctionCall","src":"2022:19:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1995:6:14"},"nodeType":"YulFunctionCall","src":"1995:47:14"},"nodeType":"YulExpressionStatement","src":"1995:47:14"},{"nodeType":"YulAssignment","src":"2051:49:14","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2088:6:14"},{"name":"pos","nodeType":"YulIdentifier","src":"2096:3:14"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"2059:28:14"},"nodeType":"YulFunctionCall","src":"2059:41:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2051:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1464:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1475:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1483:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1494:4:14","type":""}],"src":"1274:832:14"},{"body":{"nodeType":"YulBlock","src":"2296:232:14","statements":[{"nodeType":"YulAssignment","src":"2306:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2318:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2329:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2314:3:14"},"nodeType":"YulFunctionCall","src":"2314:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2306:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2349:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"2360:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2342:6:14"},"nodeType":"YulFunctionCall","src":"2342:25:14"},"nodeType":"YulExpressionStatement","src":"2342:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2387:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2398:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2383:3:14"},"nodeType":"YulFunctionCall","src":"2383:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2407:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2428:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2419:3:14"},"nodeType":"YulFunctionCall","src":"2419:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2432:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2415:3:14"},"nodeType":"YulFunctionCall","src":"2415:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2403:3:14"},"nodeType":"YulFunctionCall","src":"2403:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2376:6:14"},"nodeType":"YulFunctionCall","src":"2376:60:14"},"nodeType":"YulExpressionStatement","src":"2376:60:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2456:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2467:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2452:3:14"},"nodeType":"YulFunctionCall","src":"2452:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"2472:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2445:6:14"},"nodeType":"YulFunctionCall","src":"2445:34:14"},"nodeType":"YulExpressionStatement","src":"2445:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2499:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2510:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2495:3:14"},"nodeType":"YulFunctionCall","src":"2495:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"2515:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2488:6:14"},"nodeType":"YulFunctionCall","src":"2488:34:14"},"nodeType":"YulExpressionStatement","src":"2488:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2241:9:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2252:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2260:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2268:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2276:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2287:4:14","type":""}],"src":"2111:417:14"},{"body":{"nodeType":"YulBlock","src":"2634:102:14","statements":[{"nodeType":"YulAssignment","src":"2644:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2656:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2667:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2652:3:14"},"nodeType":"YulFunctionCall","src":"2652:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2644:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2686:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2717:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2722:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2713:3:14"},"nodeType":"YulFunctionCall","src":"2713:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2726:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2709:3:14"},"nodeType":"YulFunctionCall","src":"2709:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2697:3:14"},"nodeType":"YulFunctionCall","src":"2697:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2679:6:14"},"nodeType":"YulFunctionCall","src":"2679:51:14"},"nodeType":"YulExpressionStatement","src":"2679:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2603:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2614:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2625:4:14","type":""}],"src":"2533:203:14"},{"body":{"nodeType":"YulBlock","src":"2842:76:14","statements":[{"nodeType":"YulAssignment","src":"2852:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2864:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2875:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2860:3:14"},"nodeType":"YulFunctionCall","src":"2860:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2852:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2894:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"2905:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2887:6:14"},"nodeType":"YulFunctionCall","src":"2887:25:14"},"nodeType":"YulExpressionStatement","src":"2887:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2811:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2822:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2833:4:14","type":""}],"src":"2741:177:14"},{"body":{"nodeType":"YulBlock","src":"3010:161:14","statements":[{"body":{"nodeType":"YulBlock","src":"3056:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3065:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3068:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3058:6:14"},"nodeType":"YulFunctionCall","src":"3058:12:14"},"nodeType":"YulExpressionStatement","src":"3058:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3031:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3040:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3027:3:14"},"nodeType":"YulFunctionCall","src":"3027:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3052:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3023:3:14"},"nodeType":"YulFunctionCall","src":"3023:32:14"},"nodeType":"YulIf","src":"3020:52:14"},{"nodeType":"YulAssignment","src":"3081:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3104:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3091:12:14"},"nodeType":"YulFunctionCall","src":"3091:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3081:6:14"}]},{"nodeType":"YulAssignment","src":"3123:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3150:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3161:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3146:3:14"},"nodeType":"YulFunctionCall","src":"3146:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3133:12:14"},"nodeType":"YulFunctionCall","src":"3133:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3123:6:14"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2968:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2979:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2991:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2999:6:14","type":""}],"src":"2923:248:14"},{"body":{"nodeType":"YulBlock","src":"3439:354:14","statements":[{"nodeType":"YulAssignment","src":"3449:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3461:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3472:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3457:3:14"},"nodeType":"YulFunctionCall","src":"3457:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3449:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3492:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"3503:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3485:6:14"},"nodeType":"YulFunctionCall","src":"3485:25:14"},"nodeType":"YulExpressionStatement","src":"3485:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3530:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3541:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3526:3:14"},"nodeType":"YulFunctionCall","src":"3526:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"3546:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3519:6:14"},"nodeType":"YulFunctionCall","src":"3519:34:14"},"nodeType":"YulExpressionStatement","src":"3519:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3573:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3584:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3569:3:14"},"nodeType":"YulFunctionCall","src":"3569:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"3589:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3562:6:14"},"nodeType":"YulFunctionCall","src":"3562:34:14"},"nodeType":"YulExpressionStatement","src":"3562:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3616:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3627:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3612:3:14"},"nodeType":"YulFunctionCall","src":"3612:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"3632:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3605:6:14"},"nodeType":"YulFunctionCall","src":"3605:34:14"},"nodeType":"YulExpressionStatement","src":"3605:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3659:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3670:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3655:3:14"},"nodeType":"YulFunctionCall","src":"3655:19:14"},{"name":"value4","nodeType":"YulIdentifier","src":"3676:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3648:6:14"},"nodeType":"YulFunctionCall","src":"3648:35:14"},"nodeType":"YulExpressionStatement","src":"3648:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3703:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3714:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3699:3:14"},"nodeType":"YulFunctionCall","src":"3699:19:14"},{"arguments":[{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"3734:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3727:6:14"},"nodeType":"YulFunctionCall","src":"3727:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3720:6:14"},"nodeType":"YulFunctionCall","src":"3720:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3692:6:14"},"nodeType":"YulFunctionCall","src":"3692:51:14"},"nodeType":"YulExpressionStatement","src":"3692:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3763:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3774:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3759:3:14"},"nodeType":"YulFunctionCall","src":"3759:19:14"},{"name":"value6","nodeType":"YulIdentifier","src":"3780:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3752:6:14"},"nodeType":"YulFunctionCall","src":"3752:35:14"},"nodeType":"YulExpressionStatement","src":"3752:35:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3360:9:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3371:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"3379:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3387:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3395:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3403:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3411:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3419:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3430:4:14","type":""}],"src":"3176:617:14"},{"body":{"nodeType":"YulBlock","src":"4061:380:14","statements":[{"nodeType":"YulAssignment","src":"4071:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4083:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4094:3:14","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:14"},"nodeType":"YulFunctionCall","src":"4079:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4071:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4114:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"4125:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4107:6:14"},"nodeType":"YulFunctionCall","src":"4107:25:14"},"nodeType":"YulExpressionStatement","src":"4107:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4152:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4163:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4148:3:14"},"nodeType":"YulFunctionCall","src":"4148:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"4168:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4141:6:14"},"nodeType":"YulFunctionCall","src":"4141:34:14"},"nodeType":"YulExpressionStatement","src":"4141:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4195:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4206:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4191:3:14"},"nodeType":"YulFunctionCall","src":"4191:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"4211:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4184:6:14"},"nodeType":"YulFunctionCall","src":"4184:34:14"},"nodeType":"YulExpressionStatement","src":"4184:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4238:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4249:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4234:3:14"},"nodeType":"YulFunctionCall","src":"4234:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"4254:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4227:6:14"},"nodeType":"YulFunctionCall","src":"4227:34:14"},"nodeType":"YulExpressionStatement","src":"4227:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4281:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4292:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4277:3:14"},"nodeType":"YulFunctionCall","src":"4277:19:14"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4302:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4318:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4323:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4314:3:14"},"nodeType":"YulFunctionCall","src":"4314:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"4327:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4310:3:14"},"nodeType":"YulFunctionCall","src":"4310:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4298:3:14"},"nodeType":"YulFunctionCall","src":"4298:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4270:6:14"},"nodeType":"YulFunctionCall","src":"4270:61:14"},"nodeType":"YulExpressionStatement","src":"4270:61:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4351:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4362:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4347:3:14"},"nodeType":"YulFunctionCall","src":"4347:19:14"},{"name":"value5","nodeType":"YulIdentifier","src":"4368:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4340:6:14"},"nodeType":"YulFunctionCall","src":"4340:35:14"},"nodeType":"YulExpressionStatement","src":"4340:35:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4395:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4406:3:14","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4391:3:14"},"nodeType":"YulFunctionCall","src":"4391:19:14"},{"arguments":[{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"4426:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4419:6:14"},"nodeType":"YulFunctionCall","src":"4419:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4412:6:14"},"nodeType":"YulFunctionCall","src":"4412:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4384:6:14"},"nodeType":"YulFunctionCall","src":"4384:51:14"},"nodeType":"YulExpressionStatement","src":"4384:51:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3982:9:14","type":""},{"name":"value6","nodeType":"YulTypedName","src":"3993:6:14","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4001:6:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4009:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4017:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4025:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4033:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4041:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4052:4:14","type":""}],"src":"3798:643:14"},{"body":{"nodeType":"YulBlock","src":"4643:1004:14","statements":[{"nodeType":"YulVariableDeclaration","src":"4653:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4663:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4657:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4674:32:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4692:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4703:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4688:3:14"},"nodeType":"YulFunctionCall","src":"4688:18:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"4678:6:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4722:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4733:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4715:6:14"},"nodeType":"YulFunctionCall","src":"4715:21:14"},"nodeType":"YulExpressionStatement","src":"4715:21:14"},{"nodeType":"YulVariableDeclaration","src":"4745:17:14","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"4756:6:14"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"4749:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4771:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4791:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4785:5:14"},"nodeType":"YulFunctionCall","src":"4785:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4775:6:14","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"4814:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"4822:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4807:6:14"},"nodeType":"YulFunctionCall","src":"4807:22:14"},"nodeType":"YulExpressionStatement","src":"4807:22:14"},{"nodeType":"YulVariableDeclaration","src":"4838:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4848:2:14","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4842:2:14","type":""}]},{"nodeType":"YulAssignment","src":"4859:25:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4870:9:14"},{"name":"_2","nodeType":"YulIdentifier","src":"4881:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4866:3:14"},"nodeType":"YulFunctionCall","src":"4866:18:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4859:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"4893:29:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4911:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"4919:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4907:3:14"},"nodeType":"YulFunctionCall","src":"4907:15:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4897:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4931:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"4940:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4935:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"4999:622:14","statements":[{"nodeType":"YulVariableDeclaration","src":"5013:23:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5029:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5023:5:14"},"nodeType":"YulFunctionCall","src":"5023:13:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"5017:2:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5056:3:14"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5067:2:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5061:5:14"},"nodeType":"YulFunctionCall","src":"5061:9:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5049:6:14"},"nodeType":"YulFunctionCall","src":"5049:22:14"},"nodeType":"YulExpressionStatement","src":"5049:22:14"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5095:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"5100:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5091:3:14"},"nodeType":"YulFunctionCall","src":"5091:12:14"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5115:2:14"},{"name":"_1","nodeType":"YulIdentifier","src":"5119:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5111:3:14"},"nodeType":"YulFunctionCall","src":"5111:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5105:5:14"},"nodeType":"YulFunctionCall","src":"5105:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5084:6:14"},"nodeType":"YulFunctionCall","src":"5084:40:14"},"nodeType":"YulExpressionStatement","src":"5084:40:14"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5148:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"5153:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5144:3:14"},"nodeType":"YulFunctionCall","src":"5144:12:14"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5168:2:14"},{"name":"_2","nodeType":"YulIdentifier","src":"5172:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5164:3:14"},"nodeType":"YulFunctionCall","src":"5164:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5158:5:14"},"nodeType":"YulFunctionCall","src":"5158:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5137:6:14"},"nodeType":"YulFunctionCall","src":"5137:40:14"},"nodeType":"YulExpressionStatement","src":"5137:40:14"},{"nodeType":"YulVariableDeclaration","src":"5190:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5200:4:14","type":"","value":"0x60"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"5194:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5228:3:14"},{"name":"_4","nodeType":"YulIdentifier","src":"5233:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5224:3:14"},"nodeType":"YulFunctionCall","src":"5224:12:14"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5248:2:14"},{"name":"_4","nodeType":"YulIdentifier","src":"5252:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5244:3:14"},"nodeType":"YulFunctionCall","src":"5244:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5238:5:14"},"nodeType":"YulFunctionCall","src":"5238:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5217:6:14"},"nodeType":"YulFunctionCall","src":"5217:40:14"},"nodeType":"YulExpressionStatement","src":"5217:40:14"},{"nodeType":"YulVariableDeclaration","src":"5270:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5280:4:14","type":"","value":"0x80"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"5274:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5308:3:14"},{"name":"_5","nodeType":"YulIdentifier","src":"5313:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5304:3:14"},"nodeType":"YulFunctionCall","src":"5304:12:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5332:2:14"},{"name":"_5","nodeType":"YulIdentifier","src":"5336:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5328:3:14"},"nodeType":"YulFunctionCall","src":"5328:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5322:5:14"},"nodeType":"YulFunctionCall","src":"5322:18:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5350:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5355:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5346:3:14"},"nodeType":"YulFunctionCall","src":"5346:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"5359:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5342:3:14"},"nodeType":"YulFunctionCall","src":"5342:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5318:3:14"},"nodeType":"YulFunctionCall","src":"5318:44:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5297:6:14"},"nodeType":"YulFunctionCall","src":"5297:66:14"},"nodeType":"YulExpressionStatement","src":"5297:66:14"},{"nodeType":"YulVariableDeclaration","src":"5376:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5386:4:14","type":"","value":"0xa0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"5380:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5414:3:14"},{"name":"_6","nodeType":"YulIdentifier","src":"5419:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5410:3:14"},"nodeType":"YulFunctionCall","src":"5410:12:14"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5434:2:14"},{"name":"_6","nodeType":"YulIdentifier","src":"5438:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5430:3:14"},"nodeType":"YulFunctionCall","src":"5430:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5424:5:14"},"nodeType":"YulFunctionCall","src":"5424:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5403:6:14"},"nodeType":"YulFunctionCall","src":"5403:40:14"},"nodeType":"YulExpressionStatement","src":"5403:40:14"},{"nodeType":"YulVariableDeclaration","src":"5456:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"5466:4:14","type":"","value":"0xc0"},"variables":[{"name":"_7","nodeType":"YulTypedName","src":"5460:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5494:3:14"},{"name":"_7","nodeType":"YulIdentifier","src":"5499:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5490:3:14"},"nodeType":"YulFunctionCall","src":"5490:12:14"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"5528:2:14"},{"name":"_7","nodeType":"YulIdentifier","src":"5532:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5524:3:14"},"nodeType":"YulFunctionCall","src":"5524:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5518:5:14"},"nodeType":"YulFunctionCall","src":"5518:18:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5511:6:14"},"nodeType":"YulFunctionCall","src":"5511:26:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5504:6:14"},"nodeType":"YulFunctionCall","src":"5504:34:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5483:6:14"},"nodeType":"YulFunctionCall","src":"5483:56:14"},"nodeType":"YulExpressionStatement","src":"5483:56:14"},{"nodeType":"YulAssignment","src":"5552:21:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5563:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"5568:4:14","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5559:3:14"},"nodeType":"YulFunctionCall","src":"5559:14:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5552:3:14"}]},{"nodeType":"YulAssignment","src":"5586:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5600:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"5608:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5596:3:14"},"nodeType":"YulFunctionCall","src":"5596:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"5586:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4961:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"4964:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4958:2:14"},"nodeType":"YulFunctionCall","src":"4958:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4972:18:14","statements":[{"nodeType":"YulAssignment","src":"4974:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4983:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"4986:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4979:3:14"},"nodeType":"YulFunctionCall","src":"4979:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4974:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"4954:3:14","statements":[]},"src":"4950:671:14"},{"nodeType":"YulAssignment","src":"5630:11:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"5638:3:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5630:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4612:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4623:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4634:4:14","type":""}],"src":"4446:1201:14"},{"body":{"nodeType":"YulBlock","src":"5739:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"5785:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5794:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5797:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5787:6:14"},"nodeType":"YulFunctionCall","src":"5787:12:14"},"nodeType":"YulExpressionStatement","src":"5787:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5760:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"5769:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5756:3:14"},"nodeType":"YulFunctionCall","src":"5756:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"5781:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5752:3:14"},"nodeType":"YulFunctionCall","src":"5752:32:14"},"nodeType":"YulIf","src":"5749:52:14"},{"nodeType":"YulAssignment","src":"5810:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5839:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5820:18:14"},"nodeType":"YulFunctionCall","src":"5820:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5810:6:14"}]},{"nodeType":"YulAssignment","src":"5858:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5885:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5896:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5881:3:14"},"nodeType":"YulFunctionCall","src":"5881:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5868:12:14"},"nodeType":"YulFunctionCall","src":"5868:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5858:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5697:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5708:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5720:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5728:6:14","type":""}],"src":"5652:254:14"},{"body":{"nodeType":"YulBlock","src":"5943:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5960:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5967:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5972:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5963:3:14"},"nodeType":"YulFunctionCall","src":"5963:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5953:6:14"},"nodeType":"YulFunctionCall","src":"5953:31:14"},"nodeType":"YulExpressionStatement","src":"5953:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6000:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6003:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5993:6:14"},"nodeType":"YulFunctionCall","src":"5993:15:14"},"nodeType":"YulExpressionStatement","src":"5993:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6024:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6027:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6017:6:14"},"nodeType":"YulFunctionCall","src":"6017:15:14"},"nodeType":"YulExpressionStatement","src":"6017:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5911:127:14"},{"body":{"nodeType":"YulBlock","src":"6075:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6092:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6099:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6104:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6095:3:14"},"nodeType":"YulFunctionCall","src":"6095:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6085:6:14"},"nodeType":"YulFunctionCall","src":"6085:31:14"},"nodeType":"YulExpressionStatement","src":"6085:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6132:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6135:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6125:6:14"},"nodeType":"YulFunctionCall","src":"6125:15:14"},"nodeType":"YulExpressionStatement","src":"6125:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6156:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6159:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6149:6:14"},"nodeType":"YulFunctionCall","src":"6149:15:14"},"nodeType":"YulExpressionStatement","src":"6149:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"6043:127:14"},{"body":{"nodeType":"YulBlock","src":"6207:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6224:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6231:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6236:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6227:3:14"},"nodeType":"YulFunctionCall","src":"6227:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6217:6:14"},"nodeType":"YulFunctionCall","src":"6217:31:14"},"nodeType":"YulExpressionStatement","src":"6217:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6264:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6267:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6257:6:14"},"nodeType":"YulFunctionCall","src":"6257:15:14"},"nodeType":"YulExpressionStatement","src":"6257:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6288:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6291:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6281:6:14"},"nodeType":"YulFunctionCall","src":"6281:15:14"},"nodeType":"YulExpressionStatement","src":"6281:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6175:127:14"},{"body":{"nodeType":"YulBlock","src":"6354:88:14","statements":[{"body":{"nodeType":"YulBlock","src":"6385:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6387:16:14"},"nodeType":"YulFunctionCall","src":"6387:18:14"},"nodeType":"YulExpressionStatement","src":"6387:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6370:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6381:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6377:3:14"},"nodeType":"YulFunctionCall","src":"6377:6:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6367:2:14"},"nodeType":"YulFunctionCall","src":"6367:17:14"},"nodeType":"YulIf","src":"6364:43:14"},{"nodeType":"YulAssignment","src":"6416:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6427:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"6434:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6423:3:14"},"nodeType":"YulFunctionCall","src":"6423:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"6416:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6336:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"6346:3:14","type":""}],"src":"6307:135:14"},{"body":{"nodeType":"YulBlock","src":"6496:79:14","statements":[{"nodeType":"YulAssignment","src":"6506:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6518:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"6521:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6514:3:14"},"nodeType":"YulFunctionCall","src":"6514:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6506:4:14"}]},{"body":{"nodeType":"YulBlock","src":"6547:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6549:16:14"},"nodeType":"YulFunctionCall","src":"6549:18:14"},"nodeType":"YulExpressionStatement","src":"6549:18:14"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"6538:4:14"},{"name":"x","nodeType":"YulIdentifier","src":"6544:1:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6535:2:14"},"nodeType":"YulFunctionCall","src":"6535:11:14"},"nodeType":"YulIf","src":"6532:37:14"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6478:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"6481:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6487:4:14","type":""}],"src":"6447:128:14"},{"body":{"nodeType":"YulBlock","src":"6632:116:14","statements":[{"nodeType":"YulAssignment","src":"6642:20:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6657:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"6660:1:14"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6653:3:14"},"nodeType":"YulFunctionCall","src":"6653:9:14"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6642:7:14"}]},{"body":{"nodeType":"YulBlock","src":"6720:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6722:16:14"},"nodeType":"YulFunctionCall","src":"6722:18:14"},"nodeType":"YulExpressionStatement","src":"6722:18:14"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6691:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6684:6:14"},"nodeType":"YulFunctionCall","src":"6684:9:14"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6698:1:14"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"6705:7:14"},{"name":"x","nodeType":"YulIdentifier","src":"6714:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6701:3:14"},"nodeType":"YulFunctionCall","src":"6701:15:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6695:2:14"},"nodeType":"YulFunctionCall","src":"6695:22:14"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6681:2:14"},"nodeType":"YulFunctionCall","src":"6681:37:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6674:6:14"},"nodeType":"YulFunctionCall","src":"6674:45:14"},"nodeType":"YulIf","src":"6671:71:14"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6611:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"6614:1:14","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6620:7:14","type":""}],"src":"6580:168:14"},{"body":{"nodeType":"YulBlock","src":"6785:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6802:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6809:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6814:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6805:3:14"},"nodeType":"YulFunctionCall","src":"6805:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6795:6:14"},"nodeType":"YulFunctionCall","src":"6795:31:14"},"nodeType":"YulExpressionStatement","src":"6795:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6842:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6845:4:14","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6835:6:14"},"nodeType":"YulFunctionCall","src":"6835:15:14"},"nodeType":"YulExpressionStatement","src":"6835:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6866:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6869:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6859:6:14"},"nodeType":"YulFunctionCall","src":"6859:15:14"},"nodeType":"YulExpressionStatement","src":"6859:15:14"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6753:127:14"},{"body":{"nodeType":"YulBlock","src":"6931:74:14","statements":[{"body":{"nodeType":"YulBlock","src":"6954:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6956:16:14"},"nodeType":"YulFunctionCall","src":"6956:18:14"},"nodeType":"YulExpressionStatement","src":"6956:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6951:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6944:6:14"},"nodeType":"YulFunctionCall","src":"6944:9:14"},"nodeType":"YulIf","src":"6941:35:14"},{"nodeType":"YulAssignment","src":"6985:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6994:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"6997:1:14"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6990:3:14"},"nodeType":"YulFunctionCall","src":"6990:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6985:1:14"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6916:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"6919:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6925:1:14","type":""}],"src":"6885:120:14"},{"body":{"nodeType":"YulBlock","src":"7201:14:14","statements":[{"nodeType":"YulAssignment","src":"7203:10:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"7210:3:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7203:3:14"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7185:3:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7193:3:14","type":""}],"src":"7010:205:14"},{"body":{"nodeType":"YulBlock","src":"7349:145:14","statements":[{"nodeType":"YulAssignment","src":"7359:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7371:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7382:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7367:3:14"},"nodeType":"YulFunctionCall","src":"7367:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7359:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7401:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7416:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7432:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7437:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7428:3:14"},"nodeType":"YulFunctionCall","src":"7428:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"7441:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7424:3:14"},"nodeType":"YulFunctionCall","src":"7424:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7412:3:14"},"nodeType":"YulFunctionCall","src":"7412:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7394:6:14"},"nodeType":"YulFunctionCall","src":"7394:51:14"},"nodeType":"YulExpressionStatement","src":"7394:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7465:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7476:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7461:3:14"},"nodeType":"YulFunctionCall","src":"7461:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"7481:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7454:6:14"},"nodeType":"YulFunctionCall","src":"7454:34:14"},"nodeType":"YulExpressionStatement","src":"7454:34:14"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7310:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7321:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7329:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7340:4:14","type":""}],"src":"7220:274:14"},{"body":{"nodeType":"YulBlock","src":"7656:188:14","statements":[{"nodeType":"YulAssignment","src":"7666:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7678:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7689:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7674:3:14"},"nodeType":"YulFunctionCall","src":"7674:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7666:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7708:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7723:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7739:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7744:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7735:3:14"},"nodeType":"YulFunctionCall","src":"7735:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"7748:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7731:3:14"},"nodeType":"YulFunctionCall","src":"7731:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7719:3:14"},"nodeType":"YulFunctionCall","src":"7719:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7701:6:14"},"nodeType":"YulFunctionCall","src":"7701:51:14"},"nodeType":"YulExpressionStatement","src":"7701:51:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7772:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7783:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7768:3:14"},"nodeType":"YulFunctionCall","src":"7768:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"7788:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7761:6:14"},"nodeType":"YulFunctionCall","src":"7761:34:14"},"nodeType":"YulExpressionStatement","src":"7761:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7815:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"7826:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7811:3:14"},"nodeType":"YulFunctionCall","src":"7811:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"7831:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7804:6:14"},"nodeType":"YulFunctionCall","src":"7804:34:14"},"nodeType":"YulExpressionStatement","src":"7804:34:14"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7609:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7620:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7628:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7636:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7647:4:14","type":""}],"src":"7499:345:14"},{"body":{"nodeType":"YulBlock","src":"7896:89:14","statements":[{"body":{"nodeType":"YulBlock","src":"7923:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7925:16:14"},"nodeType":"YulFunctionCall","src":"7925:18:14"},"nodeType":"YulExpressionStatement","src":"7925:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7916:5:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7909:6:14"},"nodeType":"YulFunctionCall","src":"7909:13:14"},"nodeType":"YulIf","src":"7906:39:14"},{"nodeType":"YulAssignment","src":"7954:25:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7965:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7976:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7972:3:14"},"nodeType":"YulFunctionCall","src":"7972:6:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7961:3:14"},"nodeType":"YulFunctionCall","src":"7961:18:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7954:3:14"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7878:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7888:3:14","type":""}],"src":"7849:136:14"},{"body":{"nodeType":"YulBlock","src":"8147:162:14","statements":[{"nodeType":"YulAssignment","src":"8157:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8169:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8180:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8165:3:14"},"nodeType":"YulFunctionCall","src":"8165:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8157:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8199:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"8210:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8192:6:14"},"nodeType":"YulFunctionCall","src":"8192:25:14"},"nodeType":"YulExpressionStatement","src":"8192:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8237:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8248:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8233:3:14"},"nodeType":"YulFunctionCall","src":"8233:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"8253:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8226:6:14"},"nodeType":"YulFunctionCall","src":"8226:34:14"},"nodeType":"YulExpressionStatement","src":"8226:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8280:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8291:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8276:3:14"},"nodeType":"YulFunctionCall","src":"8276:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"8296:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8269:6:14"},"nodeType":"YulFunctionCall","src":"8269:34:14"},"nodeType":"YulExpressionStatement","src":"8269:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8100:9:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8111:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8119:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8127:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8138:4:14","type":""}],"src":"7990:319:14"},{"body":{"nodeType":"YulBlock","src":"8362:77:14","statements":[{"nodeType":"YulAssignment","src":"8372:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8383:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"8386:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8379:3:14"},"nodeType":"YulFunctionCall","src":"8379:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"8372:3:14"}]},{"body":{"nodeType":"YulBlock","src":"8411:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8413:16:14"},"nodeType":"YulFunctionCall","src":"8413:18:14"},"nodeType":"YulExpressionStatement","src":"8413:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8403:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"8406:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8400:2:14"},"nodeType":"YulFunctionCall","src":"8400:10:14"},"nodeType":"YulIf","src":"8397:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8345:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"8348:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"8354:3:14","type":""}],"src":"8314:125:14"},{"body":{"nodeType":"YulBlock","src":"8573:119:14","statements":[{"nodeType":"YulAssignment","src":"8583:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8595:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8606:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8591:3:14"},"nodeType":"YulFunctionCall","src":"8591:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8583:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8625:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"8636:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8618:6:14"},"nodeType":"YulFunctionCall","src":"8618:25:14"},"nodeType":"YulExpressionStatement","src":"8618:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8663:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"8674:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8659:3:14"},"nodeType":"YulFunctionCall","src":"8659:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"8679:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8652:6:14"},"nodeType":"YulFunctionCall","src":"8652:34:14"},"nodeType":"YulExpressionStatement","src":"8652:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8534:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8545:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8553:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8564:4:14","type":""}],"src":"8444:248:14"},{"body":{"nodeType":"YulBlock","src":"8900:222:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8917:3:14"},{"name":"value0","nodeType":"YulIdentifier","src":"8922:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8910:6:14"},"nodeType":"YulFunctionCall","src":"8910:19:14"},"nodeType":"YulExpressionStatement","src":"8910:19:14"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8949:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8954:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8945:3:14"},"nodeType":"YulFunctionCall","src":"8945:12:14"},{"name":"value1","nodeType":"YulIdentifier","src":"8959:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8938:6:14"},"nodeType":"YulFunctionCall","src":"8938:28:14"},"nodeType":"YulExpressionStatement","src":"8938:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8986:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"8991:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8982:3:14"},"nodeType":"YulFunctionCall","src":"8982:12:14"},{"name":"value2","nodeType":"YulIdentifier","src":"8996:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8975:6:14"},"nodeType":"YulFunctionCall","src":"8975:28:14"},"nodeType":"YulExpressionStatement","src":"8975:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9023:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9028:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9019:3:14"},"nodeType":"YulFunctionCall","src":"9019:12:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9041:2:14","type":"","value":"96"},{"name":"value3","nodeType":"YulIdentifier","src":"9045:6:14"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9037:3:14"},"nodeType":"YulFunctionCall","src":"9037:15:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9058:26:14","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9054:3:14"},"nodeType":"YulFunctionCall","src":"9054:31:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9033:3:14"},"nodeType":"YulFunctionCall","src":"9033:53:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9012:6:14"},"nodeType":"YulFunctionCall","src":"9012:75:14"},"nodeType":"YulExpressionStatement","src":"9012:75:14"},{"nodeType":"YulAssignment","src":"9096:20:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9107:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"9112:3:14","type":"","value":"116"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9103:3:14"},"nodeType":"YulFunctionCall","src":"9103:13:14"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9096:3:14"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes32_t_address__to_t_uint256_t_uint256_t_bytes32_t_address__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8852:3:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"8857:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8865:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8873:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8881:6:14","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8892:3:14","type":""}],"src":"8697:425:14"},{"body":{"nodeType":"YulBlock","src":"9165:74:14","statements":[{"body":{"nodeType":"YulBlock","src":"9188:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"9190:16:14"},"nodeType":"YulFunctionCall","src":"9190:18:14"},"nodeType":"YulExpressionStatement","src":"9190:18:14"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"9185:1:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9178:6:14"},"nodeType":"YulFunctionCall","src":"9178:9:14"},"nodeType":"YulIf","src":"9175:35:14"},{"nodeType":"YulAssignment","src":"9219:14:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9228:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"9231:1:14"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"9224:3:14"},"nodeType":"YulFunctionCall","src":"9224:9:14"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"9219:1:14"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9150:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"9153:1:14","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"9159:1:14","type":""}],"src":"9127:112:14"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 96)\n        let _1 := 0x20\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, _1), sub(pos, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, pos)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint256_t_bool__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Round_$4371_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), mload(add(_3, _4)))\n            let _5 := 0x80\n            mstore(add(pos, _5), and(mload(add(_3, _5)), sub(shl(160, 1), 1)))\n            let _6 := 0xa0\n            mstore(add(pos, _6), mload(add(_3, _6)))\n            let _7 := 0xc0\n            mstore(add(pos, _7), iszero(iszero(mload(add(_3, _7)))))\n            pos := add(pos, 0xe0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_uint256_t_bytes32_t_address__to_t_uint256_t_uint256_t_bytes32_t_address__nonPadded_inplace_fromStack_reversed(pos, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), value1)\n        mstore(add(pos, 64), value2)\n        mstore(add(pos, 96), and(shl(96, value3), not(0xffffffffffffffffffffffff)))\n        end := add(pos, 116)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101665760003560e01c80638c65c81f116100d1578063c81998261161008a578063cf260baf11610064578063cf260baf146104f9578063e1e158a514610519578063f0f4426014610534578063f2fde38b1461055457600080fd5b8063c8199826146104bc578063cc158921146104c4578063cdfdf7e2146104e457600080fd5b80638c65c81f146103815780638da5cb5b146104265780639506a4ec146104445780639bb3503d146104715780639cbe5efd14610491578063a8a3221e146104a757600080fd5b8063715018a611610123578063715018a6146102be5780637169c711146102d5578063747dff42146102f55780638274627f146103415780638be48547146103565780638c4d59d01461036b57600080fd5b80630484a22f1461016b57806304ad675d146101a15780631e2d0400146101c157806350b44712146101ef57806361d027b3146102635780636641ea081461029b575b600080fd5b34801561017757600080fd5b5061018b610186366004611b56565b610574565b6040516101989190611bac565b60405180910390f35b3480156101ad57600080fd5b5061018b6101bc366004611bbf565b6105e0565b3480156101cd57600080fd5b506101e16101dc366004611bbf565b610640565b604051610198929190611bd8565b3480156101fb57600080fd5b5061023b61020a366004611bbf565b600560205260009081526040902080546001820154600283015460039093015491926001600160a01b039091169184565b604080519485526001600160a01b039093166020850152918301526060820152608001610198565b34801561026f57600080fd5b50600854610283906001600160a01b031681565b6040516001600160a01b039091168152602001610198565b3480156102a757600080fd5b506102b0607881565b604051908152602001610198565b3480156102ca57600080fd5b506102d36109ea565b005b3480156102e157600080fd5b506102b06102f0366004611c38565b6109fe565b34801561030157600080fd5b5061030a610a2f565b6040805197885260208801969096529486019390935260608501919091526080840152151560a083015260c082015260e001610198565b34801561034d57600080fd5b506102d3610ad2565b34801561036257600080fd5b506102d3610efb565b34801561037757600080fd5b506102b060035481565b34801561038d57600080fd5b506103e661039c366004611bbf565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006909501549395929491936001600160a01b03909116919060ff1687565b6040805197885260208801969096529486019390935260608501919091526001600160a01b0316608084015260a0830152151560c082015260e001610198565b34801561043257600080fd5b506000546001600160a01b0316610283565b34801561045057600080fd5b5061046461045f366004611bbf565b611350565b6040516101989190611c5a565b34801561047d57600080fd5b506102d361048c366004611b56565b61153e565b34801561049d57600080fd5b506102b060025481565b3480156104b357600080fd5b506102b0600581565b6102d36115b7565b3480156104d057600080fd5b50600954610283906001600160a01b031681565b3480156104f057600080fd5b506102d3611845565b34801561050557600080fd5b506102b0610514366004611ce7565b61193b565b34801561052557600080fd5b506102b0662386f26fc1000081565b34801561054057600080fd5b506102d361054f366004611b56565b611957565b34801561056057600080fd5b506102d361056f366004611b56565b6119a8565b6001600160a01b0381166000908152600760209081526040918290208054835181840281018401909452808452606093928301828280156105d457602002820191906000526020600020905b8154815260200190600101908083116105c0575b50505050509050919050565b6000818152600660209081526040918290208054835181840281018401909452808452606093928301828280156105d457602002820191906000526020600020908154815260200190600101908083116105c05750505050509050919050565b6060806000600660008581526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156106a257602002820191906000526020600020905b81548152602001906001019080831161068e575b5050505050905080516000036106d257505060408051600080825260208201908152818301909252939092509050565b805160008167ffffffffffffffff8111156106ef576106ef611d11565b604051908082528060200260200182016040528015610718578160200160208202803683370190505b50905060008267ffffffffffffffff81111561073657610736611d11565b60405190808252806020026020018201604052801561075f578160200160208202803683370190505b5090506000805b85518110156108b45760006005600088848151811061078757610787611d27565b6020026020010151815260200190815260200160002060010160009054906101000a90046001600160a01b031690506000805b8481101561083957826001600160a01b03168782815181106107de576107de611d27565b60200260200101516001600160a01b0316036108275785818151811061080657610806611d27565b60200260200101805180919061081b90611d53565b90525060019150610839565b8061083181611d53565b9150506107ba565b508061089f578186858151811061085257610852611d27565b60200260200101906001600160a01b031690816001600160a01b031681525050600185858151811061088657610886611d27565b60209081029190910101528361089b81611d53565b9450505b505080806108ac90611d53565b915050610766565b508067ffffffffffffffff8111156108ce576108ce611d11565b6040519080825280602002602001820160405280156108f7578160200160208202803683370190505b5096508067ffffffffffffffff81111561091357610913611d11565b60405190808252806020026020018201604052801561093c578160200160208202803683370190505b50955060005b818110156109df5783818151811061095c5761095c611d27565b602002602001015188828151811061097657610976611d27565b60200260200101906001600160a01b031690816001600160a01b0316815250508281815181106109a8576109a8611d27565b60200260200101518782815181106109c2576109c2611d27565b6020908102919091010152806109d781611d53565b915050610942565b505050505050915091565b6109f26119eb565b6109fc6000611a18565b565b60066020528160005260406000208181548110610a1a57600080fd5b90600052602060002001600091509150505481565b60008060008060008060008060046000600254815260200190815260200160002090506000808260010154118015610a6c5750600682015460ff16155b90506000818015610a805750826002015442105b15610a9857428360020154610a959190611d6c565b90505b825460018401546002808601546003909601549054600090815260066020526040902054929d919c50949a50939850965090945092509050565b610ada6119eb565b6002546000908152600460205260409020600681015460ff1615610b1157604051633e3a941b60e11b815260040160405180910390fd5b8060010154600003610b36576040516323a71b8760e21b815260040160405180910390fd5b600280546000908152600660205260409020541015610b685760405163a8d8f34960e01b815260040160405180910390fd5b6006808201805460ff1916600117905560025460009081526020919091526040812054610b9490611a68565b905060006006600060025481526020019081526020016000208281548110610bbe57610bbe611d27565b600091825260208083209091015480835260059182905260408320600101546004870180546001600160a01b0319166001600160a01b03909216918217905586830182905560038701549194509291606491610c1a9190611d7f565b610c249190611dac565b90506000818660030154610c389190611d6c565b6009549091506001600160a01b031615610cc4576009548654604051635ce63c7560e11b815260048101919091526001600160a01b03858116602483015260448201879052606482018490529091169063b9cc78ea90608401600060405180830381600087803b158015610cab57600080fd5b505af1158015610cbf573d6000803e3d6000fd5b505050505b60028054906000610cd483611d53565b90915550506040805160e0810182526002805480835260006020808501828152858701838152606087018481526080880185815260a0890186815260c08a018781529787526004958690528a872099518a55935160018a015591519688019690965594516003870155935190850180546001600160a01b0319166001600160a01b039283161790559251600585015590516006909301805460ff191693151593909317909255600854925191921690849060006040518083038185875af1925050503d8060008114610dc2576040519150601f19603f3d011682016040523d82523d6000602084013e610dc7565b606091505b5050905080610de9576040516312171d8360e31b815260040160405180910390fd5b6000846001600160a01b03168360405160006040518083038185875af1925050503d8060008114610e36576040519150601f19603f3d011682016040523d82523d6000602084013e610e3b565b606091505b5050905080610e5d576040516312171d8360e31b815260040160405180910390fd5b8754600854604080516001600160a01b039092168252602082018790527fed1c7c79dbd4938e6495c716b5f244d9ed315871a4455a1f46fbbf8090b43cc9910160405180910390a28754604080516001600160a01b0388168152602081018990529081018590527f1901cd171c04e8157b30c71ff94388f4eda84b287b8e58b357b408fe85916da09060600160405180910390a25050505050505050565b610f03611afb565b6002546000908152600460205260409020600681015460ff1615610f3a57604051633e3a941b60e11b815260040160405180910390fd5b8060010154600003610f5f576040516323a71b8760e21b815260040160405180910390fd5b8060020154421015610f84576040516358e2bd7f60e01b815260040160405180910390fd5b600280546000908152600660205260409020541015610fb65760405163a8d8f34960e01b815260040160405180910390fd5b6006808201805460ff1916600117905560025460009081526020919091526040812054610fe290611a68565b90506000600660006002548152602001908152602001600020828154811061100c5761100c611d27565b600091825260208083209091015480835260059182905260408320600101546004870180546001600160a01b0319166001600160a01b039092169182179055868301829055600387015491945092916064916110689190611d7f565b6110729190611dac565b905060008186600301546110869190611d6c565b6009549091506001600160a01b031615611112576009548654604051635ce63c7560e11b815260048101919091526001600160a01b03858116602483015260448201879052606482018490529091169063b9cc78ea90608401600060405180830381600087803b1580156110f957600080fd5b505af115801561110d573d6000803e3d6000fd5b505050505b6002805490600061112283611d53565b90915550506040805160e0810182526002805480835260006020808501828152858701838152606087018481526080880185815260a0890186815260c08a018781529787526004958690528a872099518a55935160018a015591519688019690965594516003870155935190850180546001600160a01b0319166001600160a01b039283161790559251600585015590516006909301805460ff191693151593909317909255600854925191921690849060006040518083038185875af1925050503d8060008114611210576040519150601f19603f3d011682016040523d82523d6000602084013e611215565b606091505b5050905080611237576040516312171d8360e31b815260040160405180910390fd5b6000846001600160a01b03168360405160006040518083038185875af1925050503d8060008114611284576040519150601f19603f3d011682016040523d82523d6000602084013e611289565b606091505b50509050806112ab576040516312171d8360e31b815260040160405180910390fd5b8754600854604080516001600160a01b039092168252602082018790527fed1c7c79dbd4938e6495c716b5f244d9ed315871a4455a1f46fbbf8090b43cc9910160405180910390a28754604080516001600160a01b0388168152602081018990529081018590527f1901cd171c04e8157b30c71ff94388f4eda84b287b8e58b357b408fe85916da09060600160405180910390a250505050505050506109fc60018055565b6060600060015b60025481101561139b5760008181526004602052604090206006015460ff1615611389578161138581611d53565b9250505b8061139381611d53565b915050611357565b5060006113a88483611b25565b905060008167ffffffffffffffff8111156113c5576113c5611d11565b60405190808252806020026020018201604052801561144157816020015b61142e6040518060e001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600081526020016000151581525090565b8152602001906001900390816113e35790505b50905060008060016002546114569190611d6c565b90505b60008111801561146857508382105b156115335760008181526004602052604090206006015460ff161561152157600081815260046020818152604092839020835160e0810185528154815260018201549281019290925260028101549382019390935260038301546060820152908201546001600160a01b03166080820152600582015460a082015260069091015460ff16151560c0820152835184908490811061150757611507611d27565b6020026020010181905250818061151d90611d53565b9250505b8061152b81611dc0565b915050611459565b509095945050505050565b6115466119eb565b6001600160a01b03811661156d5760405163e6c4247b60e01b815260040160405180910390fd5b600980546001600160a01b0319166001600160a01b0383169081179091556040517f0e718441e2c8ed8399d302c4091ea86c90cd23783c3c1f299b278a8eefa8fd1490600090a250565b6115bf611afb565b662386f26fc100003410156115e75760405163070f6eed60e11b815260040160405180910390fd5b60025460009081526004602052604090206006015460ff161561161d57604051633e3a941b60e11b815260040160405180910390fd5b6000611630662386f26fc1000034611dac565b905060005b81811015611751576003805490600061164d83611d53565b9091555050604080516080810182526003805480835233602080850182815260028054878901908152426060808a018281526000988952600587528b89209a518b5594516001808c0180546001600160a01b0319166001600160a01b039093169290921790915592518a8501559351988801989098558154865260068452888620875481548084018355918852858820909101558486526007845288862087548154928301825590875295849020019490945593549254865193845290830152938101929092527f96541f70da731142b18e96f1def4d2a7733deb7d784723106d52c1d906d4c67a910160405180910390a28061174981611d53565b915050611635565b5060025460009081526004602052604081206003018054349290611776908490611dd7565b909155505060028054600090815260066020526040902054108015906117ae5750600254600090815260046020526040902060010154155b1561183b5760025460009081526004602052604090204260019091018190556117d990607890611dd7565b6002805460009081526004602090815260408083208401949094558254808352918490206001810154930154845193845290830152917fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d910160405180910390a25b506109fc60018055565b61184d6119eb565b6002546000908152600460205260409020600101541561188057604051633e3a941b60e11b815260040160405180910390fd5b6002805460009081526006602052604090205410156118b25760405163a8d8f34960e01b815260040160405180910390fd5b60025460009081526004602052604090204260019091018190556118d890607890611dd7565b6002805460009081526004602090815260408083208401949094558254808352918490206001810154930154845193845290830152917fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d910160405180910390a2565b60076020528160005260406000208181548110610a1a57600080fd5b61195f6119eb565b6001600160a01b0381166119865760405163e6c4247b60e01b815260040160405180910390fd5b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6119b06119eb565b6001600160a01b0381166119df57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6119e881611a18565b50565b6000546001600160a01b031633146109fc5760405163118cdaa760e01b81523360048201526024016119d6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600081600003611a8b576040516305a8a1a960e11b815260040160405180910390fd5b60004244611a9a600143611d6c565b6040805160208101949094528301919091524060608083019190915233901b6bffffffffffffffffffffffff1916608082015260940160408051601f1981840301815291905280516020909101209050611af48382611dea565b9392505050565b600260015403611b1e57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b60008282188284100282185b90505b92915050565b80356001600160a01b0381168114611b5157600080fd5b919050565b600060208284031215611b6857600080fd5b611b3182611b3a565b600081518084526020808501945080840160005b83811015611ba157815187529582019590820190600101611b85565b509495945050505050565b602081526000611b316020830184611b71565b600060208284031215611bd157600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b82811015611c1a5781516001600160a01b031684529284019290840190600101611bf5565b50505083810382850152611c2e8186611b71565b9695505050505050565b60008060408385031215611c4b57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015611cda5781518051855286810151878601528581015186860152606080820151908601526080808201516001600160a01b03169086015260a0808201519086015260c09081015115159085015260e09093019290850190600101611c77565b5091979650505050505050565b60008060408385031215611cfa57600080fd5b611d0383611b3a565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611d6557611d65611d3d565b5060010190565b81810381811115611b3457611b34611d3d565b8082028115828204841417611b3457611b34611d3d565b634e487b7160e01b600052601260045260246000fd5b600082611dbb57611dbb611d96565b500490565b600081611dcf57611dcf611d3d565b506000190190565b80820180821115611b3457611b34611d3d565b600082611df957611df9611d96565b50069056fea26469706673582212201c4011973e8c8c794f5a3a470b96fc2e8f680da9cc6875fb06f091296639e66b64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x166 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C65C81F GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC8199826 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xCF260BAF GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xCF260BAF EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0xE1E158A5 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xF0F44260 EQ PUSH2 0x534 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8199826 EQ PUSH2 0x4BC JUMPI DUP1 PUSH4 0xCC158921 EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xCDFDF7E2 EQ PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8C65C81F EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0x9506A4EC EQ PUSH2 0x444 JUMPI DUP1 PUSH4 0x9BB3503D EQ PUSH2 0x471 JUMPI DUP1 PUSH4 0x9CBE5EFD EQ PUSH2 0x491 JUMPI DUP1 PUSH4 0xA8A3221E EQ PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x7169C711 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x747DFF42 EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x8274627F EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0x8BE48547 EQ PUSH2 0x356 JUMPI DUP1 PUSH4 0x8C4D59D0 EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x484A22F EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x4AD675D EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x1E2D0400 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x50B44712 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x6641EA08 EQ PUSH2 0x29B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x574 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18B PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x1DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP3 SWAP2 SWAP1 PUSH2 0x1BD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23B PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0x283 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x78 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x9EA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C38 JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30A PUSH2 0xA2F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0xAD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0xEFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E6 PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP5 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0xFF AND DUP8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP8 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 DUP7 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH2 0x198 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x283 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x450 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x464 PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1C5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x48C CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x153E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x5 DUP2 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x15B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x283 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x1845 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH2 0x514 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CE7 JUMP JUMPDEST PUSH2 0x193B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH7 0x2386F26FC10000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x54F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x1957 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 PUSH2 0x56F CALLDATASIZE PUSH1 0x4 PUSH2 0x1B56 JUMP JUMPDEST PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5C0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x5C0 JUMPI POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6A2 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x68E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x6D2 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x718 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x736 JUMPI PUSH2 0x736 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x75F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x8B4 JUMPI PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP9 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x787 JUMPI PUSH2 0x787 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x839 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x7DE JUMPI PUSH2 0x7DE PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x827 JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x806 JUMPI PUSH2 0x806 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP1 MLOAD DUP1 SWAP2 SWAP1 PUSH2 0x81B SWAP1 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x1 SWAP2 POP PUSH2 0x839 JUMP JUMPDEST DUP1 PUSH2 0x831 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7BA JUMP JUMPDEST POP DUP1 PUSH2 0x89F JUMPI DUP2 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x852 JUMPI PUSH2 0x852 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x1 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x886 JUMPI PUSH2 0x886 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP4 PUSH2 0x89B DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x8AC SWAP1 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x766 JUMP JUMPDEST POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8CE JUMPI PUSH2 0x8CE PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8F7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP7 POP DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x913 JUMPI PUSH2 0x913 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x93C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9DF JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x95C JUMPI PUSH2 0x95C PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x976 JUMPI PUSH2 0x976 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x9A8 JUMPI PUSH2 0x9A8 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9C2 JUMPI PUSH2 0x9C2 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x9D7 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x942 JUMP JUMPDEST POP POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0x9F2 PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x9FC PUSH1 0x0 PUSH2 0x1A18 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0xA6C JUMPI POP PUSH1 0x6 DUP3 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP1 ISZERO PUSH2 0xA80 JUMPI POP DUP3 PUSH1 0x2 ADD SLOAD TIMESTAMP LT JUMPDEST ISZERO PUSH2 0xA98 JUMPI TIMESTAMP DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0xA95 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 SLOAD PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP1 DUP7 ADD SLOAD PUSH1 0x3 SWAP1 SWAP7 ADD SLOAD SWAP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP14 SWAP2 SWAP13 POP SWAP5 SWAP11 POP SWAP4 SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH2 0xADA PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E3A941B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23A71B87 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA8D8F349 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xB94 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBBE JUMPI PUSH2 0xBBE PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x5 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE DUP7 DUP4 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP8 ADD SLOAD SWAP2 SWAP5 POP SWAP3 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0xC1A SWAP2 SWAP1 PUSH2 0x1D7F JUMP JUMPDEST PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x9 SLOAD DUP7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5CE63C75 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB9CC78EA SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xCD4 DUP4 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP5 DUP2 MSTORE PUSH1 0x80 DUP9 ADD DUP6 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD DUP7 DUP2 MSTORE PUSH1 0xC0 DUP11 ADD DUP8 DUP2 MSTORE SWAP8 DUP8 MSTORE PUSH1 0x4 SWAP6 DUP7 SWAP1 MSTORE DUP11 DUP8 KECCAK256 SWAP10 MLOAD DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD SSTORE SWAP2 MLOAD SWAP7 DUP9 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP5 MLOAD PUSH1 0x3 DUP8 ADD SSTORE SWAP4 MLOAD SWAP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x5 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD SWAP3 MLOAD SWAP2 SWAP3 AND SWAP1 DUP5 SWAP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDE9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xE36 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE3B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE PUSH32 0xED1C7C79DBD4938E6495C716B5F244D9ED315871A4455A1F46FBBF8090B43CC9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x1901CD171C04E8157B30C71FF94388F4EDA84B287B8E58B357B408FE85916DA0 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF03 PUSH2 0x1AFB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E3A941B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SLOAD PUSH1 0x0 SUB PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH4 0x23A71B87 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xF84 JUMPI PUSH1 0x40 MLOAD PUSH4 0x58E2BD7F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA8D8F349 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0xFE2 SWAP1 PUSH2 0x1A68 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x100C JUMPI PUSH2 0x100C PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP1 DUP4 MSTORE PUSH1 0x5 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 DUP8 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE DUP7 DUP4 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 DUP8 ADD SLOAD SWAP2 SWAP5 POP SWAP3 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0x1068 SWAP2 SWAP1 PUSH2 0x1D7F JUMP JUMPDEST PUSH2 0x1072 SWAP2 SWAP1 PUSH2 0x1DAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP7 PUSH1 0x3 ADD SLOAD PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1112 JUMPI PUSH1 0x9 SLOAD DUP7 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5CE63C75 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xB9CC78EA SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x110D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1122 DUP4 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE PUSH1 0x2 DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE DUP6 DUP8 ADD DUP4 DUP2 MSTORE PUSH1 0x60 DUP8 ADD DUP5 DUP2 MSTORE PUSH1 0x80 DUP9 ADD DUP6 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD DUP7 DUP2 MSTORE PUSH1 0xC0 DUP11 ADD DUP8 DUP2 MSTORE SWAP8 DUP8 MSTORE PUSH1 0x4 SWAP6 DUP7 SWAP1 MSTORE DUP11 DUP8 KECCAK256 SWAP10 MLOAD DUP11 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP11 ADD SSTORE SWAP2 MLOAD SWAP7 DUP9 ADD SWAP7 SWAP1 SWAP7 SSTORE SWAP5 MLOAD PUSH1 0x3 DUP8 ADD SSTORE SWAP4 MLOAD SWAP1 DUP6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x5 DUP6 ADD SSTORE SWAP1 MLOAD PUSH1 0x6 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x8 SLOAD SWAP3 MLOAD SWAP2 SWAP3 AND SWAP1 DUP5 SWAP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1210 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1215 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1237 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1284 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x12AB JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE PUSH32 0xED1C7C79DBD4938E6495C716B5F244D9ED315871A4455A1F46FBBF8090B43CC9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP8 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x1901CD171C04E8157B30C71FF94388F4EDA84B287B8E58B357B408FE85916DA0 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP PUSH2 0x9FC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x139B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1389 JUMPI DUP2 PUSH2 0x1385 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x1393 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1357 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x13A8 DUP5 DUP4 PUSH2 0x1B25 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13C5 JUMPI PUSH2 0x13C5 PUSH2 0x1D11 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1441 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x142E PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x13E3 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x2 SLOAD PUSH2 0x1456 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x1468 JUMPI POP DUP4 DUP3 LT JUMPDEST ISZERO PUSH2 0x1533 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1521 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xE0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE DUP4 MLOAD DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x1507 JUMPI PUSH2 0x1507 PUSH2 0x1D27 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP2 DUP1 PUSH2 0x151D SWAP1 PUSH2 0x1D53 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x152B DUP2 PUSH2 0x1DC0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1459 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1546 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x156D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xE718441E2C8ED8399D302C4091EA86C90CD23783C3C1F299B278A8EEFA8FD14 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x15BF PUSH2 0x1AFB JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x15E7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70F6EED PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x161D JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E3A941B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1630 PUSH7 0x2386F26FC10000 CALLVALUE PUSH2 0x1DAC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1751 JUMPI PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x164D DUP4 PUSH2 0x1D53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 DUP1 SLOAD DUP1 DUP4 MSTORE CALLER PUSH1 0x20 DUP1 DUP6 ADD DUP3 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD DUP8 DUP10 ADD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x60 DUP1 DUP11 ADD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP9 DUP10 MSTORE PUSH1 0x5 DUP8 MSTORE DUP12 DUP10 KECCAK256 SWAP11 MLOAD DUP12 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP1 DUP13 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP3 MLOAD DUP11 DUP6 ADD SSTORE SWAP4 MLOAD SWAP9 DUP9 ADD SWAP9 SWAP1 SWAP9 SSTORE DUP2 SLOAD DUP7 MSTORE PUSH1 0x6 DUP5 MSTORE DUP9 DUP7 KECCAK256 DUP8 SLOAD DUP2 SLOAD DUP1 DUP5 ADD DUP4 SSTORE SWAP2 DUP9 MSTORE DUP6 DUP9 KECCAK256 SWAP1 SWAP2 ADD SSTORE DUP5 DUP7 MSTORE PUSH1 0x7 DUP5 MSTORE DUP9 DUP7 KECCAK256 DUP8 SLOAD DUP2 SLOAD SWAP3 DUP4 ADD DUP3 SSTORE SWAP1 DUP8 MSTORE SWAP6 DUP5 SWAP1 KECCAK256 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP4 SLOAD SWAP3 SLOAD DUP7 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x96541F70DA731142B18E96F1DEF4D2A7733DEB7D784723106D52C1D906D4C67A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH2 0x1749 DUP2 PUSH2 0x1D53 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1635 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD CALLVALUE SWAP3 SWAP1 PUSH2 0x1776 SWAP1 DUP5 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT DUP1 ISZERO SWAP1 PUSH2 0x17AE JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x183B JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH2 0x17D9 SWAP1 PUSH1 0x78 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP3 SLOAD DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP4 ADD SLOAD DUP5 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP2 PUSH32 0xA359B664A68ACD8839E42112EB50EFF3408165E15074FDE89DDB58A0DB2E691D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x9FC PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x184D PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD ISZERO PUSH2 0x1880 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3E3A941B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD LT ISZERO PUSH2 0x18B2 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA8D8F349 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x1 SWAP1 SWAP2 ADD DUP2 SWAP1 SSTORE PUSH2 0x18D8 SWAP1 PUSH1 0x78 SWAP1 PUSH2 0x1DD7 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 ADD SWAP5 SWAP1 SWAP5 SSTORE DUP3 SLOAD DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP4 ADD SLOAD DUP5 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP2 PUSH32 0xA359B664A68ACD8839E42112EB50EFF3408165E15074FDE89DDB58A0DB2E691D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x195F PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1986 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE6C4247B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x19EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x19DF JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19E8 DUP2 PUSH2 0x1A18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SUB PUSH2 0x1A8B JUMPI PUSH1 0x40 MLOAD PUSH4 0x5A8A1A9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP PREVRANDAO PUSH2 0x1A9A PUSH1 0x1 NUMBER PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE BLOCKHASH PUSH1 0x60 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x94 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH2 0x1AF4 DUP4 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1B1E JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 XOR DUP3 DUP5 LT MUL DUP3 XOR JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B31 DUP3 PUSH2 0x1B3A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BA1 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B85 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B31 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP4 MLOAD SWAP1 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x60 DUP5 ADD SWAP1 DUP3 DUP8 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1C1A JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1BF5 JUMP JUMPDEST POP POP POP DUP4 DUP2 SUB DUP3 DUP6 ADD MSTORE PUSH2 0x1C2E DUP2 DUP7 PUSH2 0x1B71 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1CDA JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 SWAP1 DUP2 ADD MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0xE0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1C77 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D03 DUP4 PUSH2 0x1B3A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1D65 JUMPI PUSH2 0x1D65 PUSH2 0x1D3D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x1D3D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x1D3D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DBB JUMPI PUSH2 0x1DBB PUSH2 0x1D96 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1DCF JUMPI PUSH2 0x1DCF PUSH2 0x1D3D JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1B34 JUMPI PUSH2 0x1B34 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DF9 JUMPI PUSH2 0x1DF9 PUSH2 0x1D96 JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR BLOCKHASH GT SWAP8 RETURNDATACOPY DUP13 DUP13 PUSH26 0x4F5A3A470B96FC2E8F680DA9CC6875FB06F091296639E66B6473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"614:15254:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8351:120;;;;;;;;;;-1:-1:-1;8351:120:12;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8601:128;;;;;;;;;;-1:-1:-1;8601:128:12;;;;;:::i;:::-;;:::i;9000:1737::-;;;;;;;;;;-1:-1:-1;9000:1737:12;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1592:41::-;;;;;;;;;;-1:-1:-1;1592:41:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1592:41:12;;;;;;;;;;2342:25:14;;;-1:-1:-1;;;;;2403:32:14;;;2398:2;2383:18;;2376:60;2452:18;;;2445:34;2510:2;2495:18;;2488:34;2329:3;2314:19;1592:41:12;2111:417:14;1866:23:12;;;;;;;;;;-1:-1:-1;1866:23:12;;;;-1:-1:-1;;;;;1866:23:12;;;;;;-1:-1:-1;;;;;2697:32:14;;;2679:51;;2667:2;2652:18;1866:23:12;2533:203:14;1208:50:12;;;;;;;;;;;;1249:9;1208:50;;;;;2887:25:14;;;2875:2;2860:18;1208:50:12;2741:177:14;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1681:49:12;;;;;;;;;;-1:-1:-1;1681:49:12;;;;;:::i;:::-;;:::i;11077:768::-;;;;;;;;;;;;;:::i;:::-;;;;3485:25:14;;;3541:2;3526:18;;3519:34;;;;3569:18;;;3562:34;;;;3627:2;3612:18;;3605:34;;;;3670:3;3655:19;;3648:35;3727:14;3720:22;3714:3;3699:19;;3692:51;3774:3;3759:19;;3752:35;3472:3;3457:19;11077:768:12;3176:617:14;13741:2125:12;;;;;;;;;;;;;:::i;5260:2191::-;;;;;;;;;;;;;:::i;1448:32::-;;;;;;;;;;;;;;;;1516:39;;;;;;;;;;-1:-1:-1;1516:39:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1516:39:12;;;;;;;;;;;;;4107:25:14;;;4163:2;4148:18;;4141:34;;;;4191:18;;;4184:34;;;;4249:2;4234:18;;4227:34;;;;-1:-1:-1;;;;;4298:32:14;4292:3;4277:19;;4270:61;4318:3;4347:19;;4340:35;4419:14;4412:22;4406:3;4391:19;;4384:51;4094:3;4079:19;1516:39:12;3798:643:14;1638:85:0;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;11998:832:12;;;;;;;;;;-1:-1:-1;11998:832:12;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3248:248::-;;;;;;;;;;-1:-1:-1;3248:248:12;;;;;:::i;:::-;;:::i;1382:33::-;;;;;;;;;;;;;;;;1302:45;;;;;;;;;;;;1346:1;1302:45;;3565:1624;;;:::i;1932:30::-;;;;;;;;;;-1:-1:-1;1932:30:12;;;;-1:-1:-1;;;;;1932:30:12;;;13182:481;;;;;;;;;;;;;:::i;1772:48::-;;;;;;;;;;-1:-1:-1;1772:48:12;;;;;:::i;:::-;;:::i;1115:::-;;;;;;;;;;;;1153:10;1115:48;;12934:158;;;;;;;;;;-1:-1:-1;12934:158:12;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;8351:120:12:-;-1:-1:-1;;;;;8447:17:12;;;;;;:11;:17;;;;;;;;;8440:24;;;;;;;;;;;;;;;;;8412:16;;8440:24;;;8447:17;8440:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8351:120;;;:::o;8601:128::-;8701:21;;;;:12;:21;;;;;;;;;8694:28;;;;;;;;;;;;;;;;;8666:16;;8694:28;;;8701:21;8694:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8601:128;;;:::o;9000:1737::-;9080:29;9111;9152:26;9181:12;:21;9194:7;9181:21;;;;;;;;;;;9152:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9225:9;:16;9245:1;9225:21;9221:95;;-1:-1:-1;;9270:16:12;;;9284:1;9270:16;;;;;;9288;;;;;;;;;9270;;;-1:-1:-1;9000:1737:12;-1:-1:-1;9000:1737:12:o;9221:95::-;9409:16;;9380:26;9409:16;9468:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9468:33:12;;9435:66;;9511:27;9555:18;9541:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9541:33:12;;9511:63;;9584:19;9631:9;9626:682;9650:9;:16;9646:1;:20;9626:682;;;9687:13;9703:7;:21;9711:9;9721:1;9711:12;;;;;;;;:::i;:::-;;;;;;;9703:21;;;;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;;;;9703:27:12;9687:43;;9744:10;9850:9;9845:222;9869:11;9865:1;:15;9845:222;;;9929:5;-1:-1:-1;;;;;9909:25:12;:13;9923:1;9909:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9909:25:12;;9905:148;;9958:10;9969:1;9958:13;;;;;;;;:::i;:::-;;;;;;:15;;;;;;;;:::i;:::-;;;-1:-1:-1;10003:4:12;;-1:-1:-1;10029:5:12;;9905:148;9882:3;;;;:::i;:::-;;;;9845:222;;;;10148:5;10143:155;;10202:5;10173:13;10187:11;10173:26;;;;;;;;:::i;:::-;;;;;;:34;-1:-1:-1;;;;;10173:34:12;;;-1:-1:-1;;;;;10173:34:12;;;;;10251:1;10225:10;10236:11;10225:23;;;;;;;;:::i;:::-;;;;;;;;;;:27;10270:13;;;;:::i;:::-;;;;10143:155;9673:635;;9668:3;;;;;:::i;:::-;;;;9626:682;;;;10403:11;10389:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10389:26:12;;10374:41;;10454:11;10440:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10440:26:12;;10425:41;;10536:9;10531:146;10555:11;10551:1;:15;10531:146;;;10605:13;10619:1;10605:16;;;;;;;;:::i;:::-;;;;;;;10587:12;10600:1;10587:15;;;;;;;;:::i;:::-;;;;;;:34;-1:-1:-1;;;;;10587:34:12;;;-1:-1:-1;;;;;10587:34:12;;;;;10653:10;10664:1;10653:13;;;;;;;;:::i;:::-;;;;;;;10635:12;10648:1;10635:15;;;;;;;;:::i;:::-;;;;;;;;;;:31;10568:3;;;;:::i;:::-;;;;10531:146;;;;10695:35;;;;;9000:1737;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1681:49:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11077:768::-;11140:10;11160:17;11187:15;11212:17;11239:18;11267:13;11290:16;11323:19;11345:6;:22;11352:14;;11345:22;;;;;;;;;;;11323:44;;11386:11;11418:1;11400:5;:15;;;:19;:39;;;;-1:-1:-1;11424:15:12;;;;;;11423:16;11400:39;11386:53;;11449:17;11493:6;:41;;;;;11521:5;:13;;;11503:15;:31;11493:41;11489:115;;;11578:15;11562:5;:13;;;:31;;;;:::i;:::-;11550:43;;11489:115;11643:8;;11665:15;;;;11694:13;;;;;11721:15;;;;;11763:14;;11643:8;11750:28;;;:12;:28;;;;;:35;11643:8;;11665:15;;-1:-1:-1;11694:13:12;;-1:-1:-1;11721:15:12;;-1:-1:-1;11750:35:12;-1:-1:-1;11799:6:12;;-1:-1:-1;11750:35:12;-1:-1:-1;11077:768:12;-1:-1:-1;11077:768:12:o;13741:2125::-;1531:13:0;:11;:13::i;:::-;13833:14:12::1;::::0;13804:19:::1;13826:22:::0;;;:6:::1;:22;::::0;;;;13871:15:::1;::::0;::::1;::::0;::::1;;13867:51;;;13895:23;;-1:-1:-1::0;;;13895:23:12::1;;;;;;;;;;;13867:51;13932:5;:15;;;13951:1;13932:20:::0;13928:50:::1;;13961:17;;-1:-1:-1::0;;;13961:17:12::1;;;;;;;;;;;13928:50;14030:1;14005:14:::0;;13992:28:::1;::::0;;;:12:::1;:28;::::0;;;;:35;:39:::1;13988:70;;;14040:18;;-1:-1:-1::0;;;14040:18:12::1;;;;;;;;;;;13988:70;14112:15;::::0;;::::1;:22:::0;;-1:-1:-1;;14112:22:12::1;14130:4;14112:22;::::0;;14241:14:::1;::::0;14112:15:::1;14228:28:::0;;;::::1;::::0;;;;;;;:35;14208:56:::1;::::0;:19:::1;:56::i;:::-;14186:78;;14274:23;14300:12;:28;14313:14;;14300:28;;;;;;;;;;;14329:11;14300:41;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;14368:24;;;:7:::1;:24:::0;;;;;;;:30:::1;;::::0;14446:12:::1;::::0;::::1;:21:::0;;-1:-1:-1;;;;;;14446:21:12::1;-1:-1:-1::0;;;;;14368:30:12;;::::1;14446:21:::0;;::::1;::::0;;14477;;::::1;:39:::0;;;14603:15:::1;::::0;::::1;::::0;14300:41;;-1:-1:-1;14368:30:12;14300:41;14642:3:::1;::::0;14603:35:::1;::::0;14368:7;14603:35:::1;:::i;:::-;14602:43;;;;:::i;:::-;14583:62;;14716:19;14756:8;14738:5;:15;;;:26;;;;:::i;:::-;14845:15;::::0;14716:48;;-1:-1:-1;;;;;;14845:15:12::1;:29:::0;14841:238:::1;;14913:15;::::0;14960:8;;14890:178:::1;::::0;-1:-1:-1;;;14890:178:12;;::::1;::::0;::::1;2342:25:14::0;;;;-1:-1:-1;;;;;2403:32:14;;;2383:18;;;2376:60;2452:18;;;2445:34;;;2495:18;;;2488:34;;;14913:15:12;;::::1;::::0;14890:52:::1;::::0;2314:19:14;;14890:178:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;14841:238;15126:14;:16:::0;;;:14:::1;:16;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;15177:219:12::1;::::0;;::::1;::::0;::::1;::::0;;15201:14:::1;::::0;;15177:219;;;-1:-1:-1;15177:219:12::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15152:22;;;:6:::1;:22:::0;;;;;;;:244;;;;;;15177:219;15152:244;::::1;::::0;;;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;15152:244:12::1;-1:-1:-1::0;;;;;15152:244:12;;::::1;;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;15152:244:12::1;::::0;::::1;;::::0;;;::::1;::::0;;;15475:8:::1;::::0;:34;;-1:-1:-1;;15475:8:12::1;::::0;15496;;15475:34:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15453:56;;;15524:10;15519:40;;15543:16;;-1:-1:-1::0;;;15543:16:12::1;;;;;;;;;;;15519:40;15611:12;15629:6;-1:-1:-1::0;;;;;15629:11:12::1;15648;15629:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15610:54;;;15679:7;15674:37;;15695:16;;-1:-1:-1::0;;;15695:16:12::1;;;;;;;;;;;15674:37;15753:8:::0;;15763::::1;::::0;15735:47:::1;::::0;;-1:-1:-1;;;;;15763:8:12;;::::1;7394:51:14::0;;7476:2;7461:18;;7454:34;;;15735:47:12::1;::::0;7367:18:14;15735:47:12::1;;;;;;;15812:8:::0;;15797:62:::1;::::0;;-1:-1:-1;;;;;7719:32:14;;7701:51;;7783:2;7768:18;;7761:34;;;7811:18;;;7804:34;;;15797:62:12::1;::::0;7689:2:14;7674:18;15797:62:12::1;;;;;;;13794:2072;;;;;;;;13741:2125::o:0;5260:2191::-;2500:21:8;:19;:21::i;:::-;5346:14:12::1;::::0;5317:19:::1;5339:22:::0;;;:6:::1;:22;::::0;;;;5384:15:::1;::::0;::::1;::::0;::::1;;5380:51;;;5408:23;;-1:-1:-1::0;;;5408:23:12::1;;;;;;;;;;;5380:51;5445:5;:15;;;5464:1;5445:20:::0;5441:50:::1;;5474:17;;-1:-1:-1::0;;;5474:17:12::1;;;;;;;;;;;5441:50;5523:5;:13;;;5505:15;:31;5501:62;;;5545:18;;-1:-1:-1::0;;;5545:18:12::1;;;;;;;;;;;5501:62;5615:1;5590:14:::0;;5577:28:::1;::::0;;;:12:::1;:28;::::0;;;;:35;:39:::1;5573:70;;;5625:18;;-1:-1:-1::0;;;5625:18:12::1;;;;;;;;;;;5573:70;5697:15;::::0;;::::1;:22:::0;;-1:-1:-1;;5697:22:12::1;5715:4;5697:22;::::0;;5826:14:::1;::::0;5697:15:::1;5813:28:::0;;;::::1;::::0;;;;;;;:35;5793:56:::1;::::0;:19:::1;:56::i;:::-;5771:78;;5859:23;5885:12;:28;5898:14;;5885:28;;;;;;;;;;;5914:11;5885:41;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;5953:24;;;:7:::1;:24:::0;;;;;;;:30:::1;;::::0;6031:12:::1;::::0;::::1;:21:::0;;-1:-1:-1;;;;;;6031:21:12::1;-1:-1:-1::0;;;;;5953:30:12;;::::1;6031:21:::0;;::::1;::::0;;6062;;::::1;:39:::0;;;6188:15:::1;::::0;::::1;::::0;5885:41;;-1:-1:-1;5953:30:12;5885:41;6227:3:::1;::::0;6188:35:::1;::::0;5953:7;6188:35:::1;:::i;:::-;6187:43;;;;:::i;:::-;6168:62;;6301:19;6341:8;6323:5;:15;;;:26;;;;:::i;:::-;6430:15;::::0;6301:48;;-1:-1:-1;;;;;;6430:15:12::1;:29:::0;6426:238:::1;;6498:15;::::0;6545:8;;6475:178:::1;::::0;-1:-1:-1;;;6475:178:12;;::::1;::::0;::::1;2342:25:14::0;;;;-1:-1:-1;;;;;2403:32:14;;;2383:18;;;2376:60;2452:18;;;2445:34;;;2495:18;;;2488:34;;;6498:15:12;;::::1;::::0;6475:52:::1;::::0;2314:19:14;;6475:178:12::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6426:238;6711:14;:16:::0;;;:14:::1;:16;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;6762:219:12::1;::::0;;::::1;::::0;::::1;::::0;;6786:14:::1;::::0;;6762:219;;;-1:-1:-1;6762:219:12::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6737:22;;;:6:::1;:22:::0;;;;;;;:244;;;;;;6762:219;6737:244;::::1;::::0;;;;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;6737:244:12::1;-1:-1:-1::0;;;;;6737:244:12;;::::1;;::::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;6737:244:12::1;::::0;::::1;;::::0;;;::::1;::::0;;;7060:8:::1;::::0;:34;;-1:-1:-1;;7060:8:12::1;::::0;7081;;7060:34:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7038:56;;;7109:10;7104:40;;7128:16;;-1:-1:-1::0;;;7128:16:12::1;;;;;;;;;;;7104:40;7196:12;7214:6;-1:-1:-1::0;;;;;7214:11:12::1;7233;7214:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7195:54;;;7264:7;7259:37;;7280:16;;-1:-1:-1::0;;;7280:16:12::1;;;;;;;;;;;7259:37;7338:8:::0;;7348::::1;::::0;7320:47:::1;::::0;;-1:-1:-1;;;;;7348:8:12;;::::1;7394:51:14::0;;7476:2;7461:18;;7454:34;;;7320:47:12::1;::::0;7367:18:14;7320:47:12::1;;;;;;;7397:8:::0;;7382:62:::1;::::0;;-1:-1:-1;;;;;7719:32:14;;7701:51;;7783:2;7768:18;;7761:34;;;7811:18;;;7804:34;;;7382:62:12::1;::::0;7689:2:14;7674:18;7382:62:12::1;;;;;;;5307:2144;;;;;;;;2542:20:8::0;1857:1;3068:21;;2888:208;11998:832:12;12061:14;12135:23;12189:1;12172:144;12196:14;;12192:1;:18;12172:144;;;12235:9;;;;:6;:9;;;;;:19;;;;;12231:75;;;12274:17;;;;:::i;:::-;;;;12231:75;12212:3;;;;:::i;:::-;;;;12172:144;;;;12372:19;12394:32;12403:5;12410:15;12394:8;:32::i;:::-;12372:54;;12436:21;12472:11;12460:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12460:24:12;;;;;;;;;;;;;;;;;12436:48;;12537:19;12575:9;12604:1;12587:14;;:18;;;;:::i;:::-;12575:30;;12570:222;12611:1;12607;:5;:34;;;;;12630:11;12616;:25;12607:34;12570:222;;;12666:9;;;;:6;:9;;;;;:19;;;;;12662:120;;;12727:9;;;;:6;:9;;;;;;;;;12705:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12705:31:12;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;:6;;12712:11;;12705:19;;;;;;:::i;:::-;;;;;;:31;;;;12754:13;;;;;:::i;:::-;;;;12662:120;12643:3;;;;:::i;:::-;;;;12570:222;;;-1:-1:-1;12817:6:12;;11998:832;-1:-1:-1;;;;;11998:832:12:o;3248:248::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;3335:30:12;::::1;3331:59;;3374:16;;-1:-1:-1::0;;;3374:16:12::1;;;;;;;;;;;3331:59;3400:15;:34:::0;;-1:-1:-1;;;;;;3400:34:12::1;-1:-1:-1::0;;;;;3400:34:12;::::1;::::0;;::::1;::::0;;;3449:40:::1;::::0;::::1;::::0;-1:-1:-1;;3449:40:12::1;3248:248:::0;:::o;3565:1624::-;2500:21:8;:19;:21::i;:::-;1153:10:12::1;3631:9;:23;3627:57;;;3663:21;;-1:-1:-1::0;;;3663:21:12::1;;;;;;;;;;;3627:57;3705:14;::::0;3698:22:::1;::::0;;;:6:::1;:22;::::0;;;;:32:::1;;::::0;::::1;;3694:68;;;3739:23;;-1:-1:-1::0;;;3739:23:12::1;;;;;;;;;;;3694:68;3820:18;3841:23;1153:10;3841:9;:23;:::i;:::-;3820:44;;3911:9;3906:704;3930:10;3926:1;:14;3906:704;;;4001:13;:15:::0;;;:13:::1;:15;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;4101:177:12::1;::::0;;::::1;::::0;::::1;::::0;;4130:13:::1;::::0;;4101:177;;;4168:10:::1;4101:177;::::0;;::::1;::::0;;;4205:14:::1;::::0;;4101:177;;;;;;4248:15:::1;4101:177:::0;;;;;;;-1:-1:-1;4076:22:12;;;:7:::1;:22:::0;;;;;:202;;;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4076:202:12::1;-1:-1:-1::0;;;;;4076:202:12;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;::::0;;;;;::::1;::::0;;;;4353:14;;4340:28;;:12:::1;:28:::0;;;;;4374:13;;4340:48;;;;::::1;::::0;;;;;;;;;;::::1;::::0;4449:23;;;:11:::1;:23:::0;;;;;4478:13;;4449:43;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;;4552:13;;4567:14;;4524:75;;8192:25:14;;;8233:18;;;8226:34;8276:18;;;8269:34;;;;4524:75:12::1;::::0;8165:18:14;4524:75:12::1;;;;;;;3942:3:::0;::::1;::::0;::::1;:::i;:::-;;;;3906:704;;;-1:-1:-1::0;4658:14:12::1;::::0;4651:22:::1;::::0;;;:6:::1;:22;::::0;;;;:32:::1;;:45:::0;;4687:9:::1;::::0;4651:22;:45:::1;::::0;4687:9;;4651:45:::1;:::i;:::-;::::0;;;-1:-1:-1;;4832:1:12::1;4806:14:::0;;4793:28:::1;::::0;;;:12:::1;:28;::::0;;;;:35;:40:::1;::::0;::::1;::::0;:81:::1;;-1:-1:-1::0;4844:14:12::1;::::0;4837:22:::1;::::0;;;:6:::1;:22;::::0;;;;:32:::1;;::::0;:37;4793:81:::1;4789:394;;;4924:14;::::0;4917:22:::1;::::0;;;:6:::1;:22;::::0;;;;4952:15:::1;4917:32;::::0;;::::1;:50:::0;;;5014:32:::1;::::0;1249:9:::1;::::0;5014:32:::1;:::i;:::-;4988:14;::::0;;4981:22:::1;::::0;;;:6:::1;:22;::::0;;;;;;;:30;::::1;:65:::0;;;;5091:14;;5107:22;;;;;;;:32:::1;::::0;::::1;::::0;5141:30;::::1;::::0;5078:94;;8618:25:14;;;8659:18;;;8652:34;5091:14:12;5078:94:::1;::::0;8591:18:14;5078:94:12::1;;;;;;;4789:394;3617:1572;2542:20:8::0;1857:1;3068:21;;2888:208;13182:481:12;1531:13:0;:11;:13::i;:::-;13252:14:12::1;::::0;13245:22:::1;::::0;;;:6:::1;:22;::::0;;;;:32:::1;;::::0;:37;13241:73:::1;;13291:23;;-1:-1:-1::0;;;13291:23:12::1;;;;;;;;;;;13241:73;13366:1;13341:14:::0;;13328:28:::1;::::0;;;:12:::1;:28;::::0;;;;:35;:39:::1;13324:70;;;13376:18;;-1:-1:-1::0;;;13376:18:12::1;;;;;;;;;;;13324:70;13420:14;::::0;13413:22:::1;::::0;;;:6:::1;:22;::::0;;;;13448:15:::1;13413:32;::::0;;::::1;:50:::0;;;13506:32:::1;::::0;1249:9:::1;::::0;13506:32:::1;:::i;:::-;13480:14;::::0;;13473:22:::1;::::0;;;:6:::1;:22;::::0;;;;;;;:30;::::1;:65:::0;;;;13575:14;;13591:22;;;;;;;:32:::1;::::0;::::1;::::0;13625:30;::::1;::::0;13562:94;;8618:25:14;;;8659:18;;;8652:34;13575:14:12;13562:94:::1;::::0;8591:18:14;13562:94:12::1;;;;;;;13182:481::o:0;1772:48::-;;;;;;;;;;;;;;;;;;;;12934:158;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;13007:23:12;::::1;13003:52;;13039:16;;-1:-1:-1::0;;;13039:16:12::1;;;;;;;;;;;13003:52;13065:8;:20:::0;;-1:-1:-1;;;;;;13065:20:12::1;-1:-1:-1::0;;;;;13065:20:12;;;::::1;::::0;;;::::1;::::0;;12934:158::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2679:51:14::0;2652:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;2679:51:14;2652:18;;1901:40:0;2533:203:14;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;7617:604:12:-;7682:7;7705:3;7712:1;7705:8;7701:32;;7722:11;;-1:-1:-1;;;7722:11:12;;;;;;;;;;;7701:32;7885:20;7994:15;8031:16;8079;8094:1;8079:12;:16;:::i;:::-;7956:190;;;;;;8910:19:14;;;;8945:12;;8938:28;;;;8069:27:12;8982:12:14;;;;8975:28;;;;8118:10:12;9037:15:14;;-1:-1:-1;;9033:53:14;9019:12;;;9012:75;9103:13;;7956:190:12;;;-1:-1:-1;;7956:190:12;;;;;;;;;7929:231;;7956:190;7929:231;;;;;-1:-1:-1;8196:18:12;8211:3;7929:231;8196:18;:::i;:::-;8189:25;7617:604;-1:-1:-1;;;7617:604:12:o;2575:307:8:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:8;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;5617:111:10:-;5675:7;5312:5;;;5709;;;5311:36;5306:42;;5701:20;5694:27;;5617:111;;;;;:::o;14:173:14:-;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:435::-;436:3;474:5;468:12;501:6;496:3;489:19;527:4;556:2;551:3;547:12;540:19;;593:2;586:5;582:14;614:1;624:169;638:6;635:1;632:13;624:169;;;699:13;;687:26;;733:12;;;;768:15;;;;660:1;653:9;624:169;;;-1:-1:-1;809:3:14;;383:435;-1:-1:-1;;;;;383:435:14:o;823:261::-;1002:2;991:9;984:21;965:4;1022:56;1074:2;1063:9;1059:18;1051:6;1022:56;:::i;1089:180::-;1148:6;1201:2;1189:9;1180:7;1176:23;1172:32;1169:52;;;1217:1;1214;1207:12;1169:52;-1:-1:-1;1240:23:14;;1089:180;-1:-1:-1;1089:180:14:o;1274:832::-;1542:2;1554:21;;;1624:13;;1527:18;;;1646:22;;;1494:4;;1721;;1699:2;1684:18;;;1748:15;;;1494:4;1791:195;1805:6;1802:1;1799:13;1791:195;;;1870:13;;-1:-1:-1;;;;;1866:39:14;1854:52;;1926:12;;;;1961:15;;;;1902:1;1820:9;1791:195;;;1795:3;;;2031:9;2026:3;2022:19;2017:2;2006:9;2002:18;1995:47;2059:41;2096:3;2088:6;2059:41;:::i;:::-;2051:49;1274:832;-1:-1:-1;;;;;;1274:832:14:o;2923:248::-;2991:6;2999;3052:2;3040:9;3031:7;3027:23;3023:32;3020:52;;;3068:1;3065;3058:12;3020:52;-1:-1:-1;;3091:23:14;;;3161:2;3146:18;;;3133:32;;-1:-1:-1;2923:248:14:o;4446:1201::-;4663:2;4715:21;;;4785:13;;4688:18;;;4807:22;;;4634:4;;4663:2;4848;;4866:18;;;;4907:15;;;4634:4;4950:671;4964:6;4961:1;4958:13;4950:671;;;5023:13;;5061:9;;5049:22;;5111:11;;;5105:18;5091:12;;;5084:40;5164:11;;;5158:18;5144:12;;;5137:40;5200:4;5244:11;;;5238:18;5224:12;;;5217:40;5280:4;5328:11;;;5322:18;-1:-1:-1;;;;;5318:44:14;5304:12;;;5297:66;5350:3;5430:11;;;5424:18;5410:12;;;5403:40;5466:4;5524:11;;;5518:18;5511:26;5504:34;5490:12;;;5483:56;5568:4;5559:14;;;;5596:15;;;;5359:1;4979:9;4950:671;;;-1:-1:-1;5638:3:14;;4446:1201;-1:-1:-1;;;;;;;4446:1201:14:o;5652:254::-;5720:6;5728;5781:2;5769:9;5760:7;5756:23;5752:32;5749:52;;;5797:1;5794;5787:12;5749:52;5820:29;5839:9;5820:29;:::i;:::-;5810:39;5896:2;5881:18;;;;5868:32;;-1:-1:-1;;;5652:254:14:o;5911:127::-;5972:10;5967:3;5963:20;5960:1;5953:31;6003:4;6000:1;5993:15;6027:4;6024:1;6017:15;6043:127;6104:10;6099:3;6095:20;6092:1;6085:31;6135:4;6132:1;6125:15;6159:4;6156:1;6149:15;6175:127;6236:10;6231:3;6227:20;6224:1;6217:31;6267:4;6264:1;6257:15;6291:4;6288:1;6281:15;6307:135;6346:3;6367:17;;;6364:43;;6387:18;;:::i;:::-;-1:-1:-1;6434:1:14;6423:13;;6307:135::o;6447:128::-;6514:9;;;6535:11;;;6532:37;;;6549:18;;:::i;6580:168::-;6653:9;;;6684;;6701:15;;;6695:22;;6681:37;6671:71;;6722:18;;:::i;6753:127::-;6814:10;6809:3;6805:20;6802:1;6795:31;6845:4;6842:1;6835:15;6869:4;6866:1;6859:15;6885:120;6925:1;6951;6941:35;;6956:18;;:::i;:::-;-1:-1:-1;6990:9:14;;6885:120::o;7849:136::-;7888:3;7916:5;7906:39;;7925:18;;:::i;:::-;-1:-1:-1;;;7961:18:14;;7849:136::o;8314:125::-;8379:9;;;8400:10;;;8397:36;;;8413:18;;:::i;9127:112::-;9159:1;9185;9175:35;;9190:18;;:::i;:::-;-1:-1:-1;9224:9:14;;9127:112::o"},"methodIdentifiers":{"MIN_DEPOSIT()":"e1e158a5","OWNER_FEE_PERCENT()":"a8a3221e","ROUND_DURATION()":"6641ea08","buyTickets()":"c8199826","completeRound()":"8be48547","currentRoundId()":"9cbe5efd","emergencyCompleteRound()":"8274627f","getCurrentRoundInfo()":"747dff42","getRoundHistory(uint256)":"9506a4ec","getRoundParticipantsWithCounts(uint256)":"1e2d0400","getRoundTickets(uint256)":"04ad675d","getUserTickets(address)":"0484a22f","historyContract()":"cc158921","owner()":"8da5cb5b","renounceOwnership()":"715018a6","roundTickets(uint256,uint256)":"7169c711","rounds(uint256)":"8c65c81f","setHistoryContract(address)":"9bb3503d","setTreasury(address)":"f0f44260","startRoundManually()":"cdfdf7e2","ticketCounter()":"8c4d59d0","tickets(uint256)":"50b44712","transferOwnership(address)":"f2fde38b","treasury()":"61d027b3","userTickets(address,uint256)":"cf260baf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughTickets\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RoundAlreadyCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RoundNotFinished\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RoundNotStarted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroRange\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"historyContract\",\"type\":\"address\"}],\"name\":\"HistoryContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OwnerFeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningTicketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"RoundCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"RoundStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ticketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TicketPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MIN_DEPOSIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OWNER_FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROUND_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTickets\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completeRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRoundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyCompleteRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRoundInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numTickets\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"timeLeft\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getRoundHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPool\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"winningTicketId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"internalType\":\"struct GalileoJackpot.Round[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getRoundParticipantsWithCounts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ticketCounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"}],\"name\":\"getRoundTickets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserTickets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"historyContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roundTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPool\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"winningTicketId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_historyContract\",\"type\":\"address\"}],\"name\":\"setHistoryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startRoundManually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ticketCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userTickets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Lottery system on Galileo testnet\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"buyTickets()\":{\"details\":\"Buy tickets with native tokens\"},\"completeRound()\":{\"details\":\"Complete round and select winner\"},\"emergencyCompleteRound()\":{\"details\":\"Emergency round completion (owner only)\"},\"getCurrentRoundInfo()\":{\"details\":\"Get current round information\",\"returns\":{\"endTime\":\"End time\",\"id\":\"Round ID\",\"isActive\":\"Whether the round is active\",\"numTickets\":\"Number of tickets\",\"startTime\":\"Start time\",\"timeLeft\":\"Time left in seconds\",\"totalPool\":\"Total pool\"}},\"getRoundHistory(uint256)\":{\"details\":\"Get round history\",\"params\":{\"limit\":\"Maximum number of rounds to retrieve\"},\"returns\":{\"_0\":\"List of completed rounds\"}},\"getRoundParticipantsWithCounts(uint256)\":{\"details\":\"Get participants and their ticket counts for a specific round\",\"params\":{\"roundId\":\"Round ID\"},\"returns\":{\"participants\":\"Array of participant addresses\",\"ticketCounts\":\"Array of ticket counts corresponding to participants\"}},\"getRoundTickets(uint256)\":{\"details\":\"Get all tickets in a round\",\"params\":{\"roundId\":\"Round ID\"},\"returns\":{\"_0\":\"List of ticket IDs\"}},\"getUserTickets(address)\":{\"details\":\"Get all tickets of a user\",\"params\":{\"user\":\"User address\"},\"returns\":{\"_0\":\"List of ticket IDs\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setHistoryContract(address)\":{\"details\":\"Set history contract address\",\"params\":{\"_historyContract\":\"Address of the history contract\"}},\"setTreasury(address)\":{\"details\":\"Set treasury address\",\"params\":{\"_treasury\":\"New treasury address\"}},\"startRoundManually()\":{\"details\":\"For testing only - function to manually start round\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"GalileoJackpot\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GalileoJackpot.sol\":\"GalileoJackpot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/GalileoJackpot.sol\":{\"keccak256\":\"0xd88121b9996eed61f191ea22dfb709ba72f39ccb5ec39b8fd10f727d8ee5dbbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://693510afcf3c48970679065b7d4dabcc3845d33d8458df59c1e59adb3c69d46e\",\"dweb:/ipfs/QmU3h25Vorkwbrs23hCm5QCGHPDePDPRbVfiouzRH4KXSf\"]}},\"version\":1}"},"IGalileoJackpotHistory":{"abi":[{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"winningTicketId","type":"uint256"},{"internalType":"uint256","name":"prizeAmount","type":"uint256"}],"name":"recordWinner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"recordWinner(uint256,address,uint256,uint256)":"b9cc78ea"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"winningTicketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"}],\"name\":\"recordWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GalileoJackpot.sol\":\"IGalileoJackpotHistory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/GalileoJackpot.sol\":{\"keccak256\":\"0xd88121b9996eed61f191ea22dfb709ba72f39ccb5ec39b8fd10f727d8ee5dbbb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://693510afcf3c48970679065b7d4dabcc3845d33d8458df59c1e59adb3c69d46e\",\"dweb:/ipfs/QmU3h25Vorkwbrs23hCm5QCGHPDePDPRbVfiouzRH4KXSf\"]}},\"version\":1}"}},"contracts/GalileoJackpotHistory.sol":{"GalileoJackpotHistory":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UnauthorizedAccess","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"roundId","type":"uint256"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"winningTicketId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"prizeAmount","type":"uint256"}],"name":"WinnerRecorded","type":"event"},{"inputs":[],"name":"getTotalWinners","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"winnerAddress","type":"address"}],"name":"getWinnerRounds","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"offset","type":"uint256"},{"internalType":"uint256","name":"limit","type":"uint256"}],"name":"getWinners","outputs":[{"components":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"winningTicketId","type":"uint256"},{"internalType":"uint256","name":"prizeAmount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct GalileoJackpotHistory.WinnerInfo[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"winnerAddress","type":"address"}],"name":"isWinner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"jackpotContract","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"winningTicketId","type":"uint256"},{"internalType":"uint256","name":"prizeAmount","type":"uint256"}],"name":"recordWinner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"roundToWinnerIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_jackpotContract","type":"address"}],"name":"setJackpotContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"winnerRounds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"winners","outputs":[{"internalType":"uint256","name":"roundId","type":"uint256"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"uint256","name":"winningTicketId","type":"uint256"},{"internalType":"uint256","name":"prizeAmount","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_5606":{"entryPoint":null,"id":5606,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":70,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:219:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:102:14","statements":[{"nodeType":"YulAssignment","src":"125:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:14"},"nodeType":"YulFunctionCall","src":"133:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"198:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"194:3:14"},"nodeType":"YulFunctionCall","src":"194:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"207:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"190:3:14"},"nodeType":"YulFunctionCall","src":"190:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:14"},"nodeType":"YulFunctionCall","src":"178:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:14"},"nodeType":"YulFunctionCall","src":"160:51:14"},"nodeType":"YulExpressionStatement","src":"160:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:14","type":""}],"src":"14:203:14"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a4c806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639d9ca28d1161008c578063ceeca98411610066578063ceeca98414610222578063ed8939401461022a578063f2fde38b1461023d578063f489fc791461025057600080fd5b80639d9ca28d14610191578063a2fb1175146101cc578063b9cc78ea1461020f57600080fd5b80630c9350e9146100d4578063220002e0146100fd57806328fd8fc41461012b5780634255e8081461014b578063715018a6146101765780638da5cb5b14610180575b600080fd5b6100e76100e2366004610818565b610263565b6040516100f4919061083a565b60405180910390f35b61011d61010b36600461087e565b60026020526000908152604090205481565b6040519081526020016100f4565b61013e610139366004610897565b6102cf565b6040516100f491906108b9565b60045461015e906001600160a01b031681565b6040516001600160a01b0390911681526020016100f4565b61017e61045f565b005b6000546001600160a01b031661015e565b6101bc61019f366004610818565b6001600160a01b0316600090815260036020526040902054151590565b60405190151581526020016100f4565b6101df6101da36600461087e565b610473565b604080519586526001600160a01b039094166020860152928401919091526060830152608082015260a0016100f4565b61017e61021d366004610930565b6104be565b60015461011d565b61017e610238366004610818565b6106a9565b61017e61024b366004610818565b6106d3565b61011d61025e36600461096b565b610716565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156102c357602002820191906000526020600020905b8154815260200190600101908083116102af575b50505050509050919050565b60015460609080841061031657604080516000808252602082019092529061030d565b6102fa6107c4565b8152602001906001900390816102f25790505b50915050610459565b60008161032385876109c1565b1161032e5783610338565b61033885836109d4565b905060008167ffffffffffffffff81111561035557610355610995565b60405190808252806020026020018201604052801561038e57816020015b61037b6107c4565b8152602001906001900390816103735790505b50905060005b828110156104535760016103a882896109c1565b6103b36001876109d4565b6103bd91906109d4565b815481106103cd576103cd6109e7565b60009182526020918290206040805160a08101825260059093029091018054835260018101546001600160a01b0316938301939093526002830154908201526003820154606082015260049091015460808201528251839083908110610435576104356109e7565b6020026020010181905250808061044b906109fd565b915050610394565b50925050505b92915050565b610467610747565b6104716000610774565b565b6001818154811061048357600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401549294506001600160a01b0390911692909185565b6004546001600160a01b031633148015906104e457506000546001600160a01b03163314155b1561050257604051631a27eac360e11b815260040160405180910390fd5b6040805160a0810182528581526001600160a01b0385811660208301908152928201858152606083018581524260808501908152600180548082018255600082905286517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660059092029182015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7880180546001600160a01b031916919096161790945591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8860155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9850155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa909301929092558154909161062a916109d4565b6000868152600260209081526040808320939093556001600160a01b038716808352600382528383208054600181018255908452928290209092018890558251868152908101859052909187917f7ae78830003cfb028adc9815a8e7f9d20dc68d9f8bd0130547caf8ce89550e4a910160405180910390a35050505050565b6106b1610747565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6106db610747565b6001600160a01b03811661070a57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61071381610774565b50565b6003602052816000526040600020818154811061073257600080fd5b90600052602060002001600091509150505481565b6000546001600160a01b031633146104715760405163118cdaa760e01b8152336004820152602401610701565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060a001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461081357600080fd5b919050565b60006020828403121561082a57600080fd5b610833826107fc565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561087257835183529284019291840191600101610856565b50909695505050505050565b60006020828403121561089057600080fd5b5035919050565b600080604083850312156108aa57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b8281101561092357815180518552868101516001600160a01b0316878601528581015186860152606080820151908601526080908101519085015260a090930192908501906001016108d6565b5091979650505050505050565b6000806000806080858703121561094657600080fd5b84359350610956602086016107fc565b93969395505050506040820135916060013590565b6000806040838503121561097e57600080fd5b610987836107fc565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610459576104596109ab565b81810381811115610459576104596109ab565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0f57610a0f6109ab565b506001019056fea26469706673582212201c021fc1892f3a91fbd2d5482bd7685b5bb9ccdde80be94bd2a6af2a5c380ebe64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x37 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40 DUP2 PUSH2 0x46 JUMP JUMPDEST POP PUSH2 0x96 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA4C DUP1 PUSH2 0xA5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D9CA28D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCEECA984 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCEECA984 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xED893940 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF489FC79 EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D9CA28D EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xB9CC78EA EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC9350E9 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x220002E0 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x28FD8FC4 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x4255E808 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x45F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15E JUMP JUMPDEST PUSH2 0x1BC PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x930 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x11D JUMP JUMPDEST PUSH2 0x17E PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2AF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 DUP1 DUP5 LT PUSH2 0x316 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x7C4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2F2 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP POP PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x323 DUP6 DUP8 PUSH2 0x9C1 JUMP JUMPDEST GT PUSH2 0x32E JUMPI DUP4 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x338 DUP6 DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x355 JUMPI PUSH2 0x355 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x38E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x37B PUSH2 0x7C4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x373 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x453 JUMPI PUSH1 0x1 PUSH2 0x3A8 DUP3 DUP10 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x1 DUP8 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3CD JUMPI PUSH2 0x3CD PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x435 JUMPI PUSH2 0x435 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x44B SWAP1 PUSH2 0x9FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x394 JUMP JUMPDEST POP SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x467 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x471 PUSH1 0x0 PUSH2 0x774 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x4E4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1A27EAC3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 DUP3 SWAP1 MSTORE DUP7 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x5 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD SSTORE SWAP7 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP2 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8 DUP7 ADD SSTORE MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF9 DUP6 ADD SSTORE MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CFA SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD SWAP1 SWAP2 PUSH2 0x62A SWAP2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP9 SWAP1 SSTORE DUP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 DUP8 SWAP2 PUSH32 0x7AE78830003CFB028ADC9815A8E7F9D20DC68D9F8BD0130547CAF8CE89550E4A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6B1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6DB PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x713 DUP2 PUSH2 0x774 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x833 DUP3 PUSH2 0x7FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x872 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x856 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x923 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8D6 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x956 PUSH1 0x20 DUP7 ADD PUSH2 0x7FC JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x987 DUP4 PUSH2 0x7FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x459 JUMPI PUSH2 0x459 PUSH2 0x9AB JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x459 JUMPI PUSH2 0x459 PUSH2 0x9AB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xA0F JUMPI PUSH2 0xA0F PUSH2 0x9AB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR MUL 0x1F 0xC1 DUP10 0x2F GASPRICE SWAP2 0xFB 0xD2 0xD5 BASEFEE 0x2B 0xD7 PUSH9 0x5B5BB9CCDDE80BE94B 0xD2 0xA6 0xAF 0x2A 0x5C CODESIZE 0xE 0xBE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"218:4244:13:-:0;;;1121:36;;;;;;;;;-1:-1:-1;1143:10:13;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:14;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;1225:187;218:4244:13;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:14:-;218:4244:13;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":1863,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_791":{"entryPoint":null,"id":791,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":1908,"id":146,"parameterSlots":1,"returnSlots":0},"@getTotalWinners_5697":{"entryPoint":null,"id":5697,"parameterSlots":0,"returnSlots":1},"@getWinnerRounds_5797":{"entryPoint":611,"id":5797,"parameterSlots":1,"returnSlots":1},"@getWinners_5783":{"entryPoint":719,"id":5783,"parameterSlots":2,"returnSlots":1},"@isWinner_5813":{"entryPoint":null,"id":5813,"parameterSlots":1,"returnSlots":1},"@jackpotContract_5596":{"entryPoint":null,"id":5596,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":null,"id":67,"parameterSlots":0,"returnSlots":1},"@recordWinner_5687":{"entryPoint":1214,"id":5687,"parameterSlots":4,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1119,"id":98,"parameterSlots":0,"returnSlots":0},"@roundToWinnerIndex_5579":{"entryPoint":null,"id":5579,"parameterSlots":0,"returnSlots":0},"@setJackpotContract_5619":{"entryPoint":1705,"id":5619,"parameterSlots":1,"returnSlots":0},"@transferOwnership_126":{"entryPoint":1747,"id":126,"parameterSlots":1,"returnSlots":0},"@winnerRounds_5584":{"entryPoint":1814,"id":5584,"parameterSlots":0,"returnSlots":0},"@winners_5575":{"entryPoint":1139,"id":5575,"parameterSlots":0,"returnSlots":0},"abi_decode_address":{"entryPoint":2044,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2072,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2411,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":2174,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256":{"entryPoint":2352,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":2199,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2233,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2497,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":2516,"id":null,"parameterSlots":2,"returnSlots":1},"increment_t_uint256":{"entryPoint":2557,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":2475,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2535,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2453,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5278:14","statements":[{"nodeType":"YulBlock","src":"6:3:14","statements":[]},{"body":{"nodeType":"YulBlock","src":"63:124:14","statements":[{"nodeType":"YulAssignment","src":"73:29:14","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"95:6:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"82:12:14"},"nodeType":"YulFunctionCall","src":"82:20:14"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"73:5:14"}]},{"body":{"nodeType":"YulBlock","src":"165:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"174:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"177:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"167:6:14"},"nodeType":"YulFunctionCall","src":"167:12:14"},"nodeType":"YulExpressionStatement","src":"167:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"124:5:14"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"135:5:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"155:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"146:3:14"},"nodeType":"YulFunctionCall","src":"146:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"159:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"142:3:14"},"nodeType":"YulFunctionCall","src":"142:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"131:3:14"},"nodeType":"YulFunctionCall","src":"131:31:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"121:2:14"},"nodeType":"YulFunctionCall","src":"121:42:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"114:6:14"},"nodeType":"YulFunctionCall","src":"114:50:14"},"nodeType":"YulIf","src":"111:70:14"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"42:6:14","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"53:5:14","type":""}],"src":"14:173:14"},{"body":{"nodeType":"YulBlock","src":"262:116:14","statements":[{"body":{"nodeType":"YulBlock","src":"308:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:14"},"nodeType":"YulFunctionCall","src":"310:12:14"},"nodeType":"YulExpressionStatement","src":"310:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"283:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"292:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"279:3:14"},"nodeType":"YulFunctionCall","src":"279:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"304:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"275:3:14"},"nodeType":"YulFunctionCall","src":"275:32:14"},"nodeType":"YulIf","src":"272:52:14"},{"nodeType":"YulAssignment","src":"333:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"362:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"343:18:14"},"nodeType":"YulFunctionCall","src":"343:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:14"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"228:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"239:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"251:6:14","type":""}],"src":"192:186:14"},{"body":{"nodeType":"YulBlock","src":"534:481:14","statements":[{"nodeType":"YulVariableDeclaration","src":"544:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"554:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"548:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"565:32:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"583:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"594:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"579:3:14"},"nodeType":"YulFunctionCall","src":"579:18:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"569:6:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"613:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"624:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"606:6:14"},"nodeType":"YulFunctionCall","src":"606:21:14"},"nodeType":"YulExpressionStatement","src":"606:21:14"},{"nodeType":"YulVariableDeclaration","src":"636:17:14","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"647:6:14"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"640:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"662:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"682:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"676:5:14"},"nodeType":"YulFunctionCall","src":"676:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"666:6:14","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"705:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"713:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"698:6:14"},"nodeType":"YulFunctionCall","src":"698:22:14"},"nodeType":"YulExpressionStatement","src":"698:22:14"},{"nodeType":"YulAssignment","src":"729:25:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"740:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"736:3:14"},"nodeType":"YulFunctionCall","src":"736:18:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"729:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"763:29:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"781:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"789:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:14"},"nodeType":"YulFunctionCall","src":"777:15:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"767:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"801:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"810:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"805:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"869:120:14","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"890:3:14"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"901:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"895:5:14"},"nodeType":"YulFunctionCall","src":"895:13:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"883:6:14"},"nodeType":"YulFunctionCall","src":"883:26:14"},"nodeType":"YulExpressionStatement","src":"883:26:14"},{"nodeType":"YulAssignment","src":"922:19:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"933:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"938:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"929:3:14"},"nodeType":"YulFunctionCall","src":"929:12:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"922:3:14"}]},{"nodeType":"YulAssignment","src":"954:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"968:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"976:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"964:3:14"},"nodeType":"YulFunctionCall","src":"964:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"954:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"831:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"834:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"828:2:14"},"nodeType":"YulFunctionCall","src":"828:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"842:18:14","statements":[{"nodeType":"YulAssignment","src":"844:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"853:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"856:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"849:3:14"},"nodeType":"YulFunctionCall","src":"849:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"844:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"824:3:14","statements":[]},"src":"820:169:14"},{"nodeType":"YulAssignment","src":"998:11:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"1006:3:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"998:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"503:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"514:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"525:4:14","type":""}],"src":"383:632:14"},{"body":{"nodeType":"YulBlock","src":"1090:110:14","statements":[{"body":{"nodeType":"YulBlock","src":"1136:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1145:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1138:6:14"},"nodeType":"YulFunctionCall","src":"1138:12:14"},"nodeType":"YulExpressionStatement","src":"1138:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1111:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1120:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1107:3:14"},"nodeType":"YulFunctionCall","src":"1107:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1132:2:14","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1103:3:14"},"nodeType":"YulFunctionCall","src":"1103:32:14"},"nodeType":"YulIf","src":"1100:52:14"},{"nodeType":"YulAssignment","src":"1161:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1171:12:14"},"nodeType":"YulFunctionCall","src":"1171:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1161:6:14"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1056:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1067:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1079:6:14","type":""}],"src":"1020:180:14"},{"body":{"nodeType":"YulBlock","src":"1306:76:14","statements":[{"nodeType":"YulAssignment","src":"1316:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1328:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1339:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1324:3:14"},"nodeType":"YulFunctionCall","src":"1324:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1316:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1358:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"1369:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1351:6:14"},"nodeType":"YulFunctionCall","src":"1351:25:14"},"nodeType":"YulExpressionStatement","src":"1351:25:14"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1275:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1286:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1297:4:14","type":""}],"src":"1205:177:14"},{"body":{"nodeType":"YulBlock","src":"1474:161:14","statements":[{"body":{"nodeType":"YulBlock","src":"1520:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1529:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1532:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1522:6:14"},"nodeType":"YulFunctionCall","src":"1522:12:14"},"nodeType":"YulExpressionStatement","src":"1522:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1495:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"1504:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1491:3:14"},"nodeType":"YulFunctionCall","src":"1491:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"1516:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1487:3:14"},"nodeType":"YulFunctionCall","src":"1487:32:14"},"nodeType":"YulIf","src":"1484:52:14"},{"nodeType":"YulAssignment","src":"1545:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1568:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1555:12:14"},"nodeType":"YulFunctionCall","src":"1555:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1545:6:14"}]},{"nodeType":"YulAssignment","src":"1587:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1614:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"1625:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1610:3:14"},"nodeType":"YulFunctionCall","src":"1610:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1597:12:14"},"nodeType":"YulFunctionCall","src":"1597:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1587:6:14"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1432:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1443:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1455:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1463:6:14","type":""}],"src":"1387:248:14"},{"body":{"nodeType":"YulBlock","src":"1847:828:14","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"1867:2:14","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1861:2:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1878:32:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1896:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1907:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1892:3:14"},"nodeType":"YulFunctionCall","src":"1892:18:14"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"1882:6:14","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1926:9:14"},{"name":"_1","nodeType":"YulIdentifier","src":"1937:2:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1919:6:14"},"nodeType":"YulFunctionCall","src":"1919:21:14"},"nodeType":"YulExpressionStatement","src":"1919:21:14"},{"nodeType":"YulVariableDeclaration","src":"1949:17:14","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"1960:6:14"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"1953:3:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1975:27:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1995:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1989:5:14"},"nodeType":"YulFunctionCall","src":"1989:13:14"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1979:6:14","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2018:6:14"},{"name":"length","nodeType":"YulIdentifier","src":"2026:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:14"},"nodeType":"YulFunctionCall","src":"2011:22:14"},"nodeType":"YulExpressionStatement","src":"2011:22:14"},{"nodeType":"YulVariableDeclaration","src":"2042:12:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2052:2:14","type":"","value":"64"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2046:2:14","type":""}]},{"nodeType":"YulAssignment","src":"2063:25:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2074:9:14"},{"name":"_2","nodeType":"YulIdentifier","src":"2085:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2070:3:14"},"nodeType":"YulFunctionCall","src":"2070:18:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2063:3:14"}]},{"nodeType":"YulVariableDeclaration","src":"2097:29:14","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2115:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2123:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2111:3:14"},"nodeType":"YulFunctionCall","src":"2111:15:14"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2101:6:14","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2135:10:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2144:1:14","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2139:1:14","type":""}]},{"body":{"nodeType":"YulBlock","src":"2203:446:14","statements":[{"nodeType":"YulVariableDeclaration","src":"2217:23:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2233:6:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2227:5:14"},"nodeType":"YulFunctionCall","src":"2227:13:14"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"2221:2:14","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2260:3:14"},{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2271:2:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2265:5:14"},"nodeType":"YulFunctionCall","src":"2265:9:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2253:6:14"},"nodeType":"YulFunctionCall","src":"2253:22:14"},"nodeType":"YulExpressionStatement","src":"2253:22:14"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2299:3:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2304:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2295:3:14"},"nodeType":"YulFunctionCall","src":"2295:12:14"},{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2323:2:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2327:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2319:3:14"},"nodeType":"YulFunctionCall","src":"2319:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2313:5:14"},"nodeType":"YulFunctionCall","src":"2313:18:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2341:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2346:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2337:3:14"},"nodeType":"YulFunctionCall","src":"2337:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2350:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2333:3:14"},"nodeType":"YulFunctionCall","src":"2333:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2309:3:14"},"nodeType":"YulFunctionCall","src":"2309:44:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2288:6:14"},"nodeType":"YulFunctionCall","src":"2288:66:14"},"nodeType":"YulExpressionStatement","src":"2288:66:14"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2378:3:14"},{"name":"_2","nodeType":"YulIdentifier","src":"2383:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2374:3:14"},"nodeType":"YulFunctionCall","src":"2374:12:14"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2398:2:14"},{"name":"_2","nodeType":"YulIdentifier","src":"2402:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2394:3:14"},"nodeType":"YulFunctionCall","src":"2394:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2388:5:14"},"nodeType":"YulFunctionCall","src":"2388:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2367:6:14"},"nodeType":"YulFunctionCall","src":"2367:40:14"},"nodeType":"YulExpressionStatement","src":"2367:40:14"},{"nodeType":"YulVariableDeclaration","src":"2420:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2430:4:14","type":"","value":"0x60"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"2424:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2458:3:14"},{"name":"_4","nodeType":"YulIdentifier","src":"2463:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2454:3:14"},"nodeType":"YulFunctionCall","src":"2454:12:14"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2478:2:14"},{"name":"_4","nodeType":"YulIdentifier","src":"2482:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2474:3:14"},"nodeType":"YulFunctionCall","src":"2474:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2468:5:14"},"nodeType":"YulFunctionCall","src":"2468:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2447:6:14"},"nodeType":"YulFunctionCall","src":"2447:40:14"},"nodeType":"YulExpressionStatement","src":"2447:40:14"},{"nodeType":"YulVariableDeclaration","src":"2500:14:14","value":{"kind":"number","nodeType":"YulLiteral","src":"2510:4:14","type":"","value":"0x80"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"2504:2:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2538:3:14"},{"name":"_5","nodeType":"YulIdentifier","src":"2543:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2534:3:14"},"nodeType":"YulFunctionCall","src":"2534:12:14"},{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2558:2:14"},{"name":"_5","nodeType":"YulIdentifier","src":"2562:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2554:3:14"},"nodeType":"YulFunctionCall","src":"2554:11:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2548:5:14"},"nodeType":"YulFunctionCall","src":"2548:18:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2527:6:14"},"nodeType":"YulFunctionCall","src":"2527:40:14"},"nodeType":"YulExpressionStatement","src":"2527:40:14"},{"nodeType":"YulAssignment","src":"2580:21:14","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2591:3:14"},{"kind":"number","nodeType":"YulLiteral","src":"2596:4:14","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:14"},"nodeType":"YulFunctionCall","src":"2587:14:14"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2580:3:14"}]},{"nodeType":"YulAssignment","src":"2614:25:14","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2628:6:14"},{"name":"_1","nodeType":"YulIdentifier","src":"2636:2:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2624:3:14"},"nodeType":"YulFunctionCall","src":"2624:15:14"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2614:6:14"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2165:1:14"},{"name":"length","nodeType":"YulIdentifier","src":"2168:6:14"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2162:2:14"},"nodeType":"YulFunctionCall","src":"2162:13:14"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2176:18:14","statements":[{"nodeType":"YulAssignment","src":"2178:14:14","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2187:1:14"},{"kind":"number","nodeType":"YulLiteral","src":"2190:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:14"},"nodeType":"YulFunctionCall","src":"2183:9:14"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2178:1:14"}]}]},"pre":{"nodeType":"YulBlock","src":"2158:3:14","statements":[]},"src":"2154:495:14"},{"nodeType":"YulAssignment","src":"2658:11:14","value":{"name":"pos","nodeType":"YulIdentifier","src":"2666:3:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2658:4:14"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1816:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1827:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1838:4:14","type":""}],"src":"1640:1035:14"},{"body":{"nodeType":"YulBlock","src":"2781:102:14","statements":[{"nodeType":"YulAssignment","src":"2791:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2803:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"2814:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2799:3:14"},"nodeType":"YulFunctionCall","src":"2799:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2791:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2833:9:14"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2848:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2864:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2869:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2860:3:14"},"nodeType":"YulFunctionCall","src":"2860:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"2873:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:14"},"nodeType":"YulFunctionCall","src":"2856:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2844:3:14"},"nodeType":"YulFunctionCall","src":"2844:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2826:6:14"},"nodeType":"YulFunctionCall","src":"2826:51:14"},"nodeType":"YulExpressionStatement","src":"2826:51:14"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2750:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2761:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2772:4:14","type":""}],"src":"2680:203:14"},{"body":{"nodeType":"YulBlock","src":"2983:92:14","statements":[{"nodeType":"YulAssignment","src":"2993:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3005:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3016:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3001:3:14"},"nodeType":"YulFunctionCall","src":"3001:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2993:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3035:9:14"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3060:6:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3053:6:14"},"nodeType":"YulFunctionCall","src":"3053:14:14"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3046:6:14"},"nodeType":"YulFunctionCall","src":"3046:22:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3028:6:14"},"nodeType":"YulFunctionCall","src":"3028:41:14"},"nodeType":"YulExpressionStatement","src":"3028:41:14"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2952:9:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2963:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2974:4:14","type":""}],"src":"2888:187:14"},{"body":{"nodeType":"YulBlock","src":"3293:276:14","statements":[{"nodeType":"YulAssignment","src":"3303:27:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3315:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3326:3:14","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3311:3:14"},"nodeType":"YulFunctionCall","src":"3311:19:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3303:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3346:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"3357:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3339:6:14"},"nodeType":"YulFunctionCall","src":"3339:25:14"},"nodeType":"YulExpressionStatement","src":"3339:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3384:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3395:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3380:3:14"},"nodeType":"YulFunctionCall","src":"3380:18:14"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3404:6:14"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3420:3:14","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3425:1:14","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3416:3:14"},"nodeType":"YulFunctionCall","src":"3416:11:14"},{"kind":"number","nodeType":"YulLiteral","src":"3429:1:14","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3412:3:14"},"nodeType":"YulFunctionCall","src":"3412:19:14"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3400:3:14"},"nodeType":"YulFunctionCall","src":"3400:32:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3373:6:14"},"nodeType":"YulFunctionCall","src":"3373:60:14"},"nodeType":"YulExpressionStatement","src":"3373:60:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3453:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3464:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3449:3:14"},"nodeType":"YulFunctionCall","src":"3449:18:14"},{"name":"value2","nodeType":"YulIdentifier","src":"3469:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3442:6:14"},"nodeType":"YulFunctionCall","src":"3442:34:14"},"nodeType":"YulExpressionStatement","src":"3442:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3496:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3507:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3492:3:14"},"nodeType":"YulFunctionCall","src":"3492:18:14"},{"name":"value3","nodeType":"YulIdentifier","src":"3512:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3485:6:14"},"nodeType":"YulFunctionCall","src":"3485:34:14"},"nodeType":"YulExpressionStatement","src":"3485:34:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3539:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3550:3:14","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3535:3:14"},"nodeType":"YulFunctionCall","src":"3535:19:14"},{"name":"value4","nodeType":"YulIdentifier","src":"3556:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3528:6:14"},"nodeType":"YulFunctionCall","src":"3528:35:14"},"nodeType":"YulExpressionStatement","src":"3528:35:14"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3230:9:14","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3241:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3249:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3257:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3265:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3273:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3284:4:14","type":""}],"src":"3080:489:14"},{"body":{"nodeType":"YulBlock","src":"3695:270:14","statements":[{"body":{"nodeType":"YulBlock","src":"3742:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3751:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3754:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3744:6:14"},"nodeType":"YulFunctionCall","src":"3744:12:14"},"nodeType":"YulExpressionStatement","src":"3744:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3716:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"3725:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3712:3:14"},"nodeType":"YulFunctionCall","src":"3712:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"3737:3:14","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3708:3:14"},"nodeType":"YulFunctionCall","src":"3708:33:14"},"nodeType":"YulIf","src":"3705:53:14"},{"nodeType":"YulAssignment","src":"3767:33:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3790:9:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3777:12:14"},"nodeType":"YulFunctionCall","src":"3777:23:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3767:6:14"}]},{"nodeType":"YulAssignment","src":"3809:48:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3842:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3853:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3838:3:14"},"nodeType":"YulFunctionCall","src":"3838:18:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3819:18:14"},"nodeType":"YulFunctionCall","src":"3819:38:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3809:6:14"}]},{"nodeType":"YulAssignment","src":"3866:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3893:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3904:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3889:3:14"},"nodeType":"YulFunctionCall","src":"3889:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3876:12:14"},"nodeType":"YulFunctionCall","src":"3876:32:14"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3866:6:14"}]},{"nodeType":"YulAssignment","src":"3917:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3944:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"3955:2:14","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3940:3:14"},"nodeType":"YulFunctionCall","src":"3940:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3927:12:14"},"nodeType":"YulFunctionCall","src":"3927:32:14"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"3917:6:14"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3637:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3648:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3660:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3668:6:14","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3676:6:14","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3684:6:14","type":""}],"src":"3574:391:14"},{"body":{"nodeType":"YulBlock","src":"4057:167:14","statements":[{"body":{"nodeType":"YulBlock","src":"4103:16:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4112:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4115:1:14","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4105:6:14"},"nodeType":"YulFunctionCall","src":"4105:12:14"},"nodeType":"YulExpressionStatement","src":"4105:12:14"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4078:7:14"},{"name":"headStart","nodeType":"YulIdentifier","src":"4087:9:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4074:3:14"},"nodeType":"YulFunctionCall","src":"4074:23:14"},{"kind":"number","nodeType":"YulLiteral","src":"4099:2:14","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4070:3:14"},"nodeType":"YulFunctionCall","src":"4070:32:14"},"nodeType":"YulIf","src":"4067:52:14"},{"nodeType":"YulAssignment","src":"4128:39:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4157:9:14"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"4138:18:14"},"nodeType":"YulFunctionCall","src":"4138:29:14"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4128:6:14"}]},{"nodeType":"YulAssignment","src":"4176:42:14","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4203:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"4214:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4199:3:14"},"nodeType":"YulFunctionCall","src":"4199:18:14"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4186:12:14"},"nodeType":"YulFunctionCall","src":"4186:32:14"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4176:6:14"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4015:9:14","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4026:7:14","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4038:6:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4046:6:14","type":""}],"src":"3970:254:14"},{"body":{"nodeType":"YulBlock","src":"4261:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4278:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4285:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4290:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4281:3:14"},"nodeType":"YulFunctionCall","src":"4281:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4271:6:14"},"nodeType":"YulFunctionCall","src":"4271:31:14"},"nodeType":"YulExpressionStatement","src":"4271:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4318:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4321:4:14","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4311:6:14"},"nodeType":"YulFunctionCall","src":"4311:15:14"},"nodeType":"YulExpressionStatement","src":"4311:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4342:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4345:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4335:6:14"},"nodeType":"YulFunctionCall","src":"4335:15:14"},"nodeType":"YulExpressionStatement","src":"4335:15:14"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"4229:127:14"},{"body":{"nodeType":"YulBlock","src":"4393:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4410:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4422:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4413:3:14"},"nodeType":"YulFunctionCall","src":"4413:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4403:6:14"},"nodeType":"YulFunctionCall","src":"4403:31:14"},"nodeType":"YulExpressionStatement","src":"4403:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4450:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4453:4:14","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4443:6:14"},"nodeType":"YulFunctionCall","src":"4443:15:14"},"nodeType":"YulExpressionStatement","src":"4443:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4474:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4477:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4467:6:14"},"nodeType":"YulFunctionCall","src":"4467:15:14"},"nodeType":"YulExpressionStatement","src":"4467:15:14"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"4361:127:14"},{"body":{"nodeType":"YulBlock","src":"4541:77:14","statements":[{"nodeType":"YulAssignment","src":"4551:16:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4562:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"4565:1:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4558:3:14"},"nodeType":"YulFunctionCall","src":"4558:9:14"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4551:3:14"}]},{"body":{"nodeType":"YulBlock","src":"4590:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4592:16:14"},"nodeType":"YulFunctionCall","src":"4592:18:14"},"nodeType":"YulExpressionStatement","src":"4592:18:14"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4582:1:14"},{"name":"sum","nodeType":"YulIdentifier","src":"4585:3:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4579:2:14"},"nodeType":"YulFunctionCall","src":"4579:10:14"},"nodeType":"YulIf","src":"4576:36:14"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4524:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"4527:1:14","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4533:3:14","type":""}],"src":"4493:125:14"},{"body":{"nodeType":"YulBlock","src":"4672:79:14","statements":[{"nodeType":"YulAssignment","src":"4682:17:14","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4694:1:14"},{"name":"y","nodeType":"YulIdentifier","src":"4697:1:14"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4690:3:14"},"nodeType":"YulFunctionCall","src":"4690:9:14"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"4682:4:14"}]},{"body":{"nodeType":"YulBlock","src":"4723:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4725:16:14"},"nodeType":"YulFunctionCall","src":"4725:18:14"},"nodeType":"YulExpressionStatement","src":"4725:18:14"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"4714:4:14"},{"name":"x","nodeType":"YulIdentifier","src":"4720:1:14"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4711:2:14"},"nodeType":"YulFunctionCall","src":"4711:11:14"},"nodeType":"YulIf","src":"4708:37:14"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4654:1:14","type":""},{"name":"y","nodeType":"YulTypedName","src":"4657:1:14","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"4663:4:14","type":""}],"src":"4623:128:14"},{"body":{"nodeType":"YulBlock","src":"4788:95:14","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4805:1:14","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4812:3:14","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"4817:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4808:3:14"},"nodeType":"YulFunctionCall","src":"4808:20:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4798:6:14"},"nodeType":"YulFunctionCall","src":"4798:31:14"},"nodeType":"YulExpressionStatement","src":"4798:31:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4845:1:14","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4848:4:14","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4838:6:14"},"nodeType":"YulFunctionCall","src":"4838:15:14"},"nodeType":"YulExpressionStatement","src":"4838:15:14"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4869:1:14","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4872:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4862:6:14"},"nodeType":"YulFunctionCall","src":"4862:15:14"},"nodeType":"YulExpressionStatement","src":"4862:15:14"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4756:127:14"},{"body":{"nodeType":"YulBlock","src":"4935:88:14","statements":[{"body":{"nodeType":"YulBlock","src":"4966:22:14","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4968:16:14"},"nodeType":"YulFunctionCall","src":"4968:18:14"},"nodeType":"YulExpressionStatement","src":"4968:18:14"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4951:5:14"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4962:1:14","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4958:3:14"},"nodeType":"YulFunctionCall","src":"4958:6:14"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4948:2:14"},"nodeType":"YulFunctionCall","src":"4948:17:14"},"nodeType":"YulIf","src":"4945:43:14"},{"nodeType":"YulAssignment","src":"4997:20:14","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5008:5:14"},{"kind":"number","nodeType":"YulLiteral","src":"5015:1:14","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5004:3:14"},"nodeType":"YulFunctionCall","src":"5004:13:14"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4997:3:14"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4917:5:14","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4927:3:14","type":""}],"src":"4888:135:14"},{"body":{"nodeType":"YulBlock","src":"5157:119:14","statements":[{"nodeType":"YulAssignment","src":"5167:26:14","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5179:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5190:2:14","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5175:3:14"},"nodeType":"YulFunctionCall","src":"5175:18:14"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5167:4:14"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5209:9:14"},{"name":"value0","nodeType":"YulIdentifier","src":"5220:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5202:6:14"},"nodeType":"YulFunctionCall","src":"5202:25:14"},"nodeType":"YulExpressionStatement","src":"5202:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5247:9:14"},{"kind":"number","nodeType":"YulLiteral","src":"5258:2:14","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5243:3:14"},"nodeType":"YulFunctionCall","src":"5243:18:14"},{"name":"value1","nodeType":"YulIdentifier","src":"5263:6:14"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5236:6:14"},"nodeType":"YulFunctionCall","src":"5236:34:14"},"nodeType":"YulExpressionStatement","src":"5236:34:14"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5118:9:14","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5129:6:14","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5137:6:14","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5148:4:14","type":""}],"src":"5028:248:14"}]},"contents":"{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_WinnerInfo_$5571_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), and(mload(add(_3, _1)), sub(shl(160, 1), 1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), mload(add(_3, _4)))\n            let _5 := 0x80\n            mstore(add(pos, _5), mload(add(_3, _5)))\n            pos := add(pos, 0xa0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}","id":14,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80639d9ca28d1161008c578063ceeca98411610066578063ceeca98414610222578063ed8939401461022a578063f2fde38b1461023d578063f489fc791461025057600080fd5b80639d9ca28d14610191578063a2fb1175146101cc578063b9cc78ea1461020f57600080fd5b80630c9350e9146100d4578063220002e0146100fd57806328fd8fc41461012b5780634255e8081461014b578063715018a6146101765780638da5cb5b14610180575b600080fd5b6100e76100e2366004610818565b610263565b6040516100f4919061083a565b60405180910390f35b61011d61010b36600461087e565b60026020526000908152604090205481565b6040519081526020016100f4565b61013e610139366004610897565b6102cf565b6040516100f491906108b9565b60045461015e906001600160a01b031681565b6040516001600160a01b0390911681526020016100f4565b61017e61045f565b005b6000546001600160a01b031661015e565b6101bc61019f366004610818565b6001600160a01b0316600090815260036020526040902054151590565b60405190151581526020016100f4565b6101df6101da36600461087e565b610473565b604080519586526001600160a01b039094166020860152928401919091526060830152608082015260a0016100f4565b61017e61021d366004610930565b6104be565b60015461011d565b61017e610238366004610818565b6106a9565b61017e61024b366004610818565b6106d3565b61011d61025e36600461096b565b610716565b6001600160a01b0381166000908152600360209081526040918290208054835181840281018401909452808452606093928301828280156102c357602002820191906000526020600020905b8154815260200190600101908083116102af575b50505050509050919050565b60015460609080841061031657604080516000808252602082019092529061030d565b6102fa6107c4565b8152602001906001900390816102f25790505b50915050610459565b60008161032385876109c1565b1161032e5783610338565b61033885836109d4565b905060008167ffffffffffffffff81111561035557610355610995565b60405190808252806020026020018201604052801561038e57816020015b61037b6107c4565b8152602001906001900390816103735790505b50905060005b828110156104535760016103a882896109c1565b6103b36001876109d4565b6103bd91906109d4565b815481106103cd576103cd6109e7565b60009182526020918290206040805160a08101825260059093029091018054835260018101546001600160a01b0316938301939093526002830154908201526003820154606082015260049091015460808201528251839083908110610435576104356109e7565b6020026020010181905250808061044b906109fd565b915050610394565b50925050505b92915050565b610467610747565b6104716000610774565b565b6001818154811061048357600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401549294506001600160a01b0390911692909185565b6004546001600160a01b031633148015906104e457506000546001600160a01b03163314155b1561050257604051631a27eac360e11b815260040160405180910390fd5b6040805160a0810182528581526001600160a01b0385811660208301908152928201858152606083018581524260808501908152600180548082018255600082905286517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf660059092029182015596517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf7880180546001600160a01b031916919096161790945591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8860155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9850155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa909301929092558154909161062a916109d4565b6000868152600260209081526040808320939093556001600160a01b038716808352600382528383208054600181018255908452928290209092018890558251868152908101859052909187917f7ae78830003cfb028adc9815a8e7f9d20dc68d9f8bd0130547caf8ce89550e4a910160405180910390a35050505050565b6106b1610747565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6106db610747565b6001600160a01b03811661070a57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61071381610774565b50565b6003602052816000526040600020818154811061073257600080fd5b90600052602060002001600091509150505481565b6000546001600160a01b031633146104715760405163118cdaa760e01b8152336004820152602401610701565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060a001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461081357600080fd5b919050565b60006020828403121561082a57600080fd5b610833826107fc565b9392505050565b6020808252825182820181905260009190848201906040850190845b8181101561087257835183529284019291840191600101610856565b50909695505050505050565b60006020828403121561089057600080fd5b5035919050565b600080604083850312156108aa57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b8281101561092357815180518552868101516001600160a01b0316878601528581015186860152606080820151908601526080908101519085015260a090930192908501906001016108d6565b5091979650505050505050565b6000806000806080858703121561094657600080fd5b84359350610956602086016107fc565b93969395505050506040820135916060013590565b6000806040838503121561097e57600080fd5b610987836107fc565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610459576104596109ab565b81810381811115610459576104596109ab565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0f57610a0f6109ab565b506001019056fea26469706673582212201c021fc1892f3a91fbd2d5482bd7685b5bb9ccdde80be94bd2a6af2a5c380ebe64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9D9CA28D GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCEECA984 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCEECA984 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xED893940 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF489FC79 EQ PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9D9CA28D EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xB9CC78EA EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC9350E9 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x220002E0 EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x28FD8FC4 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x4255E808 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x180 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x87E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x13E PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x897 JUMP JUMPDEST PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x45F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15E JUMP JUMPDEST PUSH2 0x1BC PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x87E JUMP JUMPDEST PUSH2 0x473 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xF4 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x930 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x11D JUMP JUMPDEST PUSH2 0x17E PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x818 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x96B JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2AF JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x60 SWAP1 DUP1 DUP5 LT PUSH2 0x316 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x2FA PUSH2 0x7C4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x2F2 JUMPI SWAP1 POP JUMPDEST POP SWAP2 POP POP PUSH2 0x459 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x323 DUP6 DUP8 PUSH2 0x9C1 JUMP JUMPDEST GT PUSH2 0x32E JUMPI DUP4 PUSH2 0x338 JUMP JUMPDEST PUSH2 0x338 DUP6 DUP4 PUSH2 0x9D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x355 JUMPI PUSH2 0x355 PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x38E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x37B PUSH2 0x7C4 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x373 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x453 JUMPI PUSH1 0x1 PUSH2 0x3A8 DUP3 DUP10 PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x1 DUP8 PUSH2 0x9D4 JUMP JUMPDEST PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x9D4 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3CD JUMPI PUSH2 0x3CD PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE DUP3 MLOAD DUP4 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x435 JUMPI PUSH2 0x435 PUSH2 0x9E7 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x44B SWAP1 PUSH2 0x9FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x394 JUMP JUMPDEST POP SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x467 PUSH2 0x747 JUMP JUMPDEST PUSH2 0x471 PUSH1 0x0 PUSH2 0x774 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x4E4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x502 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1A27EAC3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE SWAP3 DUP3 ADD DUP6 DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP6 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 DUP3 SWAP1 MSTORE DUP7 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x5 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD SSTORE SWAP7 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF7 DUP9 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP2 MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF8 DUP7 ADD SSTORE MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF9 DUP6 ADD SSTORE MLOAD PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CFA SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP2 SLOAD SWAP1 SWAP2 PUSH2 0x62A SWAP2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP4 MSTORE PUSH1 0x3 DUP3 MSTORE DUP4 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE SWAP3 DUP3 SWAP1 KECCAK256 SWAP1 SWAP3 ADD DUP9 SWAP1 SSTORE DUP3 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 DUP8 SWAP2 PUSH32 0x7AE78830003CFB028ADC9815A8E7F9D20DC68D9F8BD0130547CAF8CE89550E4A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6B1 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x6DB PUSH2 0x747 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x70A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x713 DUP2 PUSH2 0x774 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x471 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x701 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x82A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x833 DUP3 PUSH2 0x7FC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x872 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x856 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x923 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8D6 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x946 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH2 0x956 PUSH1 0x20 DUP7 ADD PUSH2 0x7FC JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x97E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x987 DUP4 PUSH2 0x7FC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x459 JUMPI PUSH2 0x459 PUSH2 0x9AB JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x459 JUMPI PUSH2 0x459 PUSH2 0x9AB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xA0F JUMPI PUSH2 0xA0F PUSH2 0x9AB JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR MUL 0x1F 0xC1 DUP10 0x2F GASPRICE SWAP2 0xFB 0xD2 0xD5 BASEFEE 0x2B 0xD7 PUSH9 0x5B5BB9CCDDE80BE94B 0xD2 0xA6 0xAF 0x2A 0x5C CODESIZE 0xE 0xBE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"218:4244:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4002:142;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;598:53;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1351:25:14;;;1339:2;1324:18;598:53:13;1205:177:14;3064:775:13;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1001:30::-;;;;;-1:-1:-1;;;;;1001:30:13;;;;;;-1:-1:-1;;;;;2844:32:14;;;2826:51;;2814:2;2799:18;1001:30:13;2680:203:14;2293:101:0;;;:::i;:::-;;1638:85;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;4325:134:13;;;;;;:::i;:::-;-1:-1:-1;;;;;4413:27:13;4389:4;4413:27;;;:12;:27;;;;;:34;:38;;;4325:134;;;;3053:14:14;;3046:22;3028:41;;3016:2;3001:18;4325:134:13;2888:187:14;507:27:13;;;;;;:::i;:::-;;:::i;:::-;;;;3339:25:14;;;-1:-1:-1;;;;;3400:32:14;;;3395:2;3380:18;;3373:60;3449:18;;;3442:34;;;;3507:2;3492:18;;3485:34;3550:3;3535:19;;3528:35;3326:3;3311:19;507:27:13;3080:489:14;1700:933:13;;;;;;:::i;:::-;;:::i;2752:99::-;2829:7;:14;2752:99;;1307:126;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;724:49:13:-;;;;;;:::i;:::-;;:::i;4002:142::-;-1:-1:-1;;;;;4109:27:13;;;;;;:12;:27;;;;;;;;;4102:34;;;;;;;;;;;;;;;;;4073:16;;4102:34;;;4109:27;4102:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4002:142;;;:::o;3064:775::-;3193:7;:14;3138:19;;3264:22;;;3260:81;;3310:19;;;3327:1;3310:19;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3303:26;;;;;3260:81;3396:19;3436:12;3419:14;3428:5;3419:6;:14;:::i;:::-;:29;3418:65;;3478:5;3418:65;;;3453:21;3468:6;3453:12;:21;:::i;:::-;3396:87;;3536:26;3582:11;3565:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3536:58;;3650:9;3645:153;3669:11;3665:1;:15;3645:153;;;3714:7;3742:10;3751:1;3742:6;:10;:::i;:::-;3722:16;3737:1;3722:12;:16;:::i;:::-;:31;;;;:::i;:::-;3714:40;;;;;;;;:::i;:::-;;;;;;;;;;3702:52;;;;;;;;3714:40;;;;;;;3702:52;;;;;;;;-1:-1:-1;;;;;3702:52:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;;:6;;3709:1;;3702:9;;;;;;:::i;:::-;;;;;;:52;;;;3682:3;;;;;:::i;:::-;;;;3645:153;;;-1:-1:-1;3825:6:13;-1:-1:-1;;;3064:775:13;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;507:27:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;507:27:13;;;;;;;:::o;1700:933::-;1935:15;;-1:-1:-1;;;;;1935:15:13;1921:10;:29;;;;:54;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1954:10:13;:21;;1921:54;1917:87;;;1984:20;;-1:-1:-1;;;1984:20:13;;;;;;;;;;;1917:87;2086:210;;;;;;;;;;;-1:-1:-1;;;;;2086:210:13;;;;;;;;;;;;;;;;;;;;;2269:15;2086:210;;;;;;2350:7;:23;;;;;;;-1:-1:-1;2350:23:13;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2350:23:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2452:14;;2086:210;;2452:18;;;:::i;:::-;2422:27;;;;:18;:27;;;;;;;;:48;;;;-1:-1:-1;;;;;2481:20:13;;;;;:12;:20;;;;;:34;;;;;;;;;;;;;;;;;;;;2564:61;;5202:25:14;;;5243:18;;;5236:34;;;2481:20:13;;2422:27;;2564:61;;5175:18:14;2564:61:13;;;;;;;1853:780;1700:933;;;;:::o;1307:126::-;1531:13:0;:11;:13::i;:::-;1391:15:13::1;:34:::0;;-1:-1:-1;;;;;;1391:34:13::1;-1:-1:-1::0;;;;;1391:34:13;;;::::1;::::0;;;::::1;::::0;;1307:126::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2826:51:14::0;2799:18;;2672:31:0::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;724:49:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;2826:51:14;2799:18;;1901:40:0;2680:203:14;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:14:-;82:20;;-1:-1:-1;;;;;131:31:14;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:14:o;383:632::-;554:2;606:21;;;676:13;;579:18;;;698:22;;;525:4;;554:2;777:15;;;;751:2;736:18;;;525:4;820:169;834:6;831:1;828:13;820:169;;;895:13;;883:26;;964:15;;;;929:12;;;;856:1;849:9;820:169;;;-1:-1:-1;1006:3:14;;383:632;-1:-1:-1;;;;;;383:632:14:o;1020:180::-;1079:6;1132:2;1120:9;1111:7;1107:23;1103:32;1100:52;;;1148:1;1145;1138:12;1100:52;-1:-1:-1;1171:23:14;;1020:180;-1:-1:-1;1020:180:14:o;1387:248::-;1455:6;1463;1516:2;1504:9;1495:7;1491:23;1487:32;1484:52;;;1532:1;1529;1522:12;1484:52;-1:-1:-1;;1555:23:14;;;1625:2;1610:18;;;1597:32;;-1:-1:-1;1387:248:14:o;1640:1035::-;1867:2;1919:21;;;1989:13;;1892:18;;;2011:22;;;1838:4;;1867:2;2052;;2070:18;;;;2111:15;;;1838:4;2154:495;2168:6;2165:1;2162:13;2154:495;;;2227:13;;2265:9;;2253:22;;2319:11;;;2313:18;-1:-1:-1;;;;;2309:44:14;2295:12;;;2288:66;2394:11;;;2388:18;2374:12;;;2367:40;2430:4;2474:11;;;2468:18;2454:12;;;2447:40;2510:4;2554:11;;;2548:18;2534:12;;;2527:40;2341:3;2587:14;;;;2624:15;;;;2350:1;2183:9;2154:495;;;-1:-1:-1;2666:3:14;;1640:1035;-1:-1:-1;;;;;;;1640:1035:14:o;3574:391::-;3660:6;3668;3676;3684;3737:3;3725:9;3716:7;3712:23;3708:33;3705:53;;;3754:1;3751;3744:12;3705:53;3790:9;3777:23;3767:33;;3819:38;3853:2;3842:9;3838:18;3819:38;:::i;:::-;3574:391;;3809:48;;-1:-1:-1;;;;3904:2:14;3889:18;;3876:32;;3955:2;3940:18;3927:32;;3574:391::o;3970:254::-;4038:6;4046;4099:2;4087:9;4078:7;4074:23;4070:32;4067:52;;;4115:1;4112;4105:12;4067:52;4138:29;4157:9;4138:29;:::i;:::-;4128:39;4214:2;4199:18;;;;4186:32;;-1:-1:-1;;;3970:254:14:o;4229:127::-;4290:10;4285:3;4281:20;4278:1;4271:31;4321:4;4318:1;4311:15;4345:4;4342:1;4335:15;4361:127;4422:10;4417:3;4413:20;4410:1;4403:31;4453:4;4450:1;4443:15;4477:4;4474:1;4467:15;4493:125;4558:9;;;4579:10;;;4576:36;;;4592:18;;:::i;4623:128::-;4690:9;;;4711:11;;;4708:37;;;4725:18;;:::i;4756:127::-;4817:10;4812:3;4808:20;4805:1;4798:31;4848:4;4845:1;4838:15;4872:4;4869:1;4862:15;4888:135;4927:3;4948:17;;;4945:43;;4968:18;;:::i;:::-;-1:-1:-1;5015:1:14;5004:13;;4888:135::o"},"methodIdentifiers":{"getTotalWinners()":"ceeca984","getWinnerRounds(address)":"0c9350e9","getWinners(uint256,uint256)":"28fd8fc4","isWinner(address)":"9d9ca28d","jackpotContract()":"4255e808","owner()":"8da5cb5b","recordWinner(uint256,address,uint256,uint256)":"b9cc78ea","renounceOwnership()":"715018a6","roundToWinnerIndex(uint256)":"220002e0","setJackpotContract(address)":"ed893940","transferOwnership(address)":"f2fde38b","winnerRounds(address,uint256)":"f489fc79","winners(uint256)":"a2fb1175"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedAccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningTicketId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"}],\"name\":\"WinnerRecorded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getTotalWinners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"}],\"name\":\"getWinnerRounds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"getWinners\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"winningTicketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct GalileoJackpotHistory.WinnerInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"winnerAddress\",\"type\":\"address\"}],\"name\":\"isWinner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"jackpotContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"winningTicketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"}],\"name\":\"recordWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roundToWinnerIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_jackpotContract\",\"type\":\"address\"}],\"name\":\"setJackpotContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winnerRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"winningTicketId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract to store the history of jackpot winners\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"getTotalWinners()\":{\"details\":\"Get the total number of recorded winners\",\"returns\":{\"_0\":\"Total winner count\"}},\"getWinnerRounds(address)\":{\"details\":\"Get all rounds won by a specific address\",\"params\":{\"winnerAddress\":\"Winner address\"},\"returns\":{\"_0\":\"Array of round IDs\"}},\"getWinners(uint256,uint256)\":{\"details\":\"Get winners with pagination\",\"params\":{\"limit\":\"Maximum number of winners to return\",\"offset\":\"Starting index\"},\"returns\":{\"_0\":\"Array of winner info structures\"}},\"isWinner(address)\":{\"details\":\"Check if an address has won any rounds\",\"params\":{\"winnerAddress\":\"Winner address\"},\"returns\":{\"_0\":\"True if the address has won any rounds\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recordWinner(uint256,address,uint256,uint256)\":{\"details\":\"Record a new winner (can only be called by main jackpot contract)\",\"params\":{\"prizeAmount\":\"Prize amount\",\"roundId\":\"Round ID\",\"winner\":\"Winner address\",\"winningTicketId\":\"Winning ticket ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setJackpotContract(address)\":{\"details\":\"Set the main jackpot contract address\",\"params\":{\"_jackpotContract\":\"Address of the main jackpot contract\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"GalileoJackpotHistory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GalileoJackpotHistory.sol\":\"GalileoJackpotHistory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/GalileoJackpotHistory.sol\":{\"keccak256\":\"0x213d30c93578a25501e440e647e2e25fcdb8e1280f1f1eb66c0c94fa774b8fb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://866dd19a0fbd5e8e4512c2bde52d39d3e8767e2a40fca4f038b93bc5c1c1f2a2\",\"dweb:/ipfs/QmZmuWNbXHDwNr9uHi9NuHseRybjg7AmJfwf2kZq7NZFuk\"]}},\"version\":1}"}}}}}